%!PS-Adobe-2.0
%%Title: cs1_dw2_oa.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Nov  8 10:06:26 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
798 420 M
63 0 V
6101 0 R
-63 0 V
stroke
714 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.78)]
] -46.7 MRshow
1.000 UL
LTb
798 887 M
63 0 V
6101 0 R
-63 0 V
stroke
714 887 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MRshow
1.000 UL
LTb
798 1353 M
63 0 V
6101 0 R
-63 0 V
stroke
714 1353 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.82)]
] -46.7 MRshow
1.000 UL
LTb
798 1820 M
63 0 V
6101 0 R
-63 0 V
stroke
714 1820 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.84)]
] -46.7 MRshow
1.000 UL
LTb
798 2287 M
63 0 V
6101 0 R
-63 0 V
stroke
714 2287 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.86)]
] -46.7 MRshow
1.000 UL
LTb
798 2753 M
63 0 V
6101 0 R
-63 0 V
stroke
714 2753 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.88)]
] -46.7 MRshow
1.000 UL
LTb
798 3220 M
63 0 V
6101 0 R
-63 0 V
stroke
714 3220 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.9)]
] -46.7 MRshow
1.000 UL
LTb
798 3687 M
63 0 V
6101 0 R
-63 0 V
stroke
714 3687 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.92)]
] -46.7 MRshow
1.000 UL
LTb
798 4153 M
63 0 V
6101 0 R
-63 0 V
stroke
714 4153 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.94)]
] -46.7 MRshow
1.000 UL
LTb
798 4620 M
63 0 V
6101 0 R
-63 0 V
stroke
714 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.96)]
] -46.7 MRshow
1.000 UL
LTb
1092 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1092 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
2266 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2266 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MCshow
1.000 UL
LTb
3440 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3440 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MCshow
1.000 UL
LTb
4614 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4614 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MCshow
1.000 UL
LTb
5788 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5788 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MCshow
1.000 UL
LTb
6962 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6962 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
798 420 M
6164 0 V
0 4200 V
-6164 0 V
798 420 L
LTb
140 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Q)]
[(Helvetica) 112.0 -42.0 true true 0 (OA)]
] -32.7 MCshow
grestore
LTb
3880 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Relative weight w)]
[(Helvetica) 112.0 -42.0 true true 0 (trans)]
] -32.7 MCshow
LTb
3880 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Variation of Q)]
[(Helvetica) 112.0 -42.0 true true 0 (OA)]
[(Helvetica) 140.0 0.0 true true 0 ( with relative scoring weight w)]
[(Helvetica) 112.0 -42.0 true true 0 (trans)]
] -32.7 MCshow
1.000 UP
LTb
1414 4200 M
[ [(Helvetica) 140.0 0.0 true true 0 (ENV = E)]
[(Helvetica) 112.0 -42.0 true true 0 (FX)]
] -32.7 MLshow
1.000 UL
LT0
LTb
6262 1260 M
[ [(Helvetica) 140.0 0.0 true true 0 (SEL = BEST)]
] -46.7 MRshow
LT0
6346 1225 399 70 BoxFill
6346 1225 M
399 0 V
0 70 V
-399 0 V
0 -70 V
0 66 R
0 -62 V
399 62 R
0 -62 V
stroke
1077 873 30 228 BoxFill
1092 761 M
0 112 V
-15 0 V
30 0 V
0 228 V
-30 0 V
0 -228 V
15 228 R
0 136 V
stroke
1664 1827 30 207 BoxFill
1679 1682 M
0 145 V
-15 0 V
30 0 V
0 207 V
-30 0 V
0 -207 V
15 207 R
0 38 V
stroke
2251 1818 30 214 BoxFill
2266 1791 M
0 27 V
-15 0 V
30 0 V
0 214 V
-30 0 V
0 -214 V
15 214 R
0 100 V
stroke
2838 1822 30 201 BoxFill
2853 1782 M
0 40 V
-15 0 V
30 0 V
0 201 V
-30 0 V
0 -201 V
15 201 R
0 88 V
stroke
3425 1766 30 233 BoxFill
3440 1695 M
0 71 V
-15 0 V
30 0 V
0 233 V
-30 0 V
0 -233 V
15 233 R
0 115 V
stroke
4012 1810 30 201 BoxFill
4027 1702 M
0 108 V
-15 0 V
30 0 V
0 201 V
-30 0 V
0 -201 V
15 201 R
0 37 V
stroke
4305 1794 30 270 BoxFill
4320 1698 M
0 96 V
-15 0 V
30 0 V
0 270 V
-30 0 V
0 -270 V
15 270 R
0 139 V
stroke
4599 1981 30 250 BoxFill
4614 1875 M
0 106 V
-15 0 V
30 0 V
0 250 V
-30 0 V
0 -250 V
15 250 R
0 112 V
stroke
4892 2329 30 182 BoxFill
4907 2260 M
0 69 V
-15 0 V
30 0 V
0 182 V
-30 0 V
0 -182 V
15 182 R
0 77 V
stroke
5186 2447 30 142 BoxFill
5201 2416 M
0 31 V
-15 0 V
30 0 V
0 142 V
-30 0 V
0 -142 V
15 142 R
0 88 V
stroke
5479 2578 30 246 BoxFill
5494 2489 M
0 89 V
-15 0 V
30 0 V
0 246 V
-30 0 V
0 -246 V
15 246 R
0 24 V
stroke
5773 2831 30 172 BoxFill
5788 2770 M
0 61 V
-15 0 V
30 0 V
0 172 V
-30 0 V
0 -172 V
15 172 R
0 56 V
stroke
5920 2754 30 279 BoxFill
5935 2653 M
0 101 V
-15 0 V
30 0 V
0 279 V
-30 0 V
0 -279 V
15 279 R
0 159 V
stroke
6066 2912 30 191 BoxFill
6081 2864 M
0 48 V
-15 0 V
30 0 V
0 191 V
-30 0 V
0 -191 V
15 191 R
0 26 V
stroke
6213 3623 30 190 BoxFill
6228 3484 M
0 139 V
-15 0 V
30 0 V
0 190 V
-30 0 V
0 -190 V
15 190 R
0 34 V
stroke
6360 3780 30 213 BoxFill
6375 3708 M
0 72 V
-15 0 V
30 0 V
0 213 V
-30 0 V
0 -213 V
15 213 R
0 59 V
stroke
6433 3991 30 175 BoxFill
6448 3746 M
0 245 V
-15 0 V
30 0 V
0 175 V
-30 0 V
0 -175 V
15 175 R
0 -8 V
stroke
6507 4061 30 177 BoxFill
6522 3975 M
0 86 V
-15 0 V
30 0 V
0 177 V
-30 0 V
0 -177 V
15 177 R
0 47 V
stroke
6580 4048 30 129 BoxFill
6595 4015 M
0 33 V
-15 0 V
30 0 V
0 129 V
-30 0 V
0 -129 V
15 129 R
0 22 V
stroke
6653 4022 30 190 BoxFill
6668 3940 M
0 82 V
-15 0 V
30 0 V
0 190 V
-30 0 V
0 -190 V
15 190 R
0 25 V
stroke
6712 4009 30 241 BoxFill
6727 3835 M
0 174 V
-15 0 V
30 0 V
0 241 V
-30 0 V
0 -241 V
15 241 R
0 56 V
stroke
6771 4147 30 161 BoxFill
6786 4022 M
0 125 V
-15 0 V
30 0 V
0 161 V
-30 0 V
0 -161 V
15 161 R
0 72 V
stroke
6830 4134 30 130 BoxFill
6845 4094 M
0 40 V
-15 0 V
30 0 V
0 130 V
-30 0 V
0 -130 V
15 130 R
0 30 V
stroke
6888 4133 30 204 BoxFill
6903 4093 M
0 40 V
-15 0 V
30 0 V
0 204 V
-30 0 V
0 -204 V
15 204 R
0 38 V
1.000 UL
LT2
LTb
6262 1120 M
[ [(Helvetica) 140.0 0.0 true true 0 (SEL = RAND)]
] -46.7 MRshow
LT2
6346 1120 M
399 0 V
798 1307 M
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
1.000 UL
LTb
798 420 M
6164 0 V
0 4200 V
-6164 0 V
798 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
