%!PS-Adobe-2.0
%%Title: e_cumstats.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Fri May 20 18:13:08 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
966 420 M
63 0 V
5933 0 R
-63 0 V
stroke
882 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
966 1020 M
63 0 V
5933 0 R
-63 0 V
stroke
882 1020 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20000)]
] -46.7 MRshow
1.000 UL
LTb
966 1620 M
63 0 V
5933 0 R
-63 0 V
stroke
882 1620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40000)]
] -46.7 MRshow
1.000 UL
LTb
966 2220 M
63 0 V
5933 0 R
-63 0 V
stroke
882 2220 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60000)]
] -46.7 MRshow
1.000 UL
LTb
966 2820 M
63 0 V
5933 0 R
-63 0 V
stroke
882 2820 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80000)]
] -46.7 MRshow
1.000 UL
LTb
966 3420 M
63 0 V
5933 0 R
-63 0 V
stroke
882 3420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100000)]
] -46.7 MRshow
1.000 UL
LTb
966 4020 M
63 0 V
5933 0 R
-63 0 V
stroke
882 4020 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 120000)]
] -46.7 MRshow
1.000 UL
LTb
966 4620 M
63 0 V
5933 0 R
-63 0 V
stroke
882 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 140000)]
] -46.7 MRshow
1.000 UL
LTb
966 420 M
0 63 V
0 4137 R
0 -63 V
stroke
966 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1823 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1823 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MCshow
1.000 UL
LTb
2679 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2679 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MCshow
1.000 UL
LTb
3536 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3536 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.3)]
] -46.7 MCshow
1.000 UL
LTb
4392 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4392 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MCshow
1.000 UL
LTb
5249 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5249 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MCshow
1.000 UL
LTb
6105 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6105 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MCshow
1.000 UL
LTb
6962 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6962 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.7)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
966 420 M
5996 0 V
0 4200 V
-5996 0 V
966 420 L
LTb
140 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Cumulative time)]
] -46.7 MCshow
grestore
LTb
3964 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Time [hours])]
] -46.7 MCshow
LTb
3964 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Cumulative distribution of lengths of stable periods weighted by period length)]
] -46.7 MCshow
1.000 UP
1.000 UL
LT0
LTb
6311 973 M
[ [(Symbol) 140.0 0.0 true true 0 (T)]
[(Helvetica) 112.0 -42.0 true true 0 (e)]
[(Helvetica) 140.0 0.0 true true 0 ( = 0.5h)]
] -32.7 MRshow
LT0
6395 973 M
399 0 V
966 420 M
7 37 V
7 67 V
7 91 V
8 110 V
7 126 V
7 126 V
7 150 V
7 157 V
7 141 V
7 141 V
8 107 V
7 173 V
7 152 V
7 123 V
7 135 V
7 144 V
7 127 V
7 110 V
8 129 V
7 118 V
7 110 V
7 87 V
7 89 V
7 78 V
7 97 V
8 72 V
7 117 V
7 68 V
7 76 V
7 56 V
7 59 V
7 60 V
8 60 V
7 46 V
7 37 V
7 62 V
7 47 V
7 37 V
7 25 V
8 29 V
7 25 V
7 16 V
7 30 V
7 20 V
7 25 V
7 4 V
7 17 V
8 26 V
7 26 V
7 9 V
7 9 V
7 24 V
7 9 V
7 0 V
8 10 V
7 0 V
7 10 V
7 16 V
7 11 V
7 0 V
7 22 V
8 0 V
7 11 V
7 6 V
7 0 V
7 0 V
7 0 V
7 0 V
8 0 V
7 0 V
7 0 V
7 0 V
7 0 V
7 0 V
7 0 V
7 0 V
8 0 V
7 0 V
7 0 V
7 0 V
7 0 V
7 0 V
7 0 V
8 7 V
7 8 V
7 0 V
7 0 V
7 0 V
7 0 V
7 0 V
8 0 V
7 0 V
7 0 V
7 0 V
7 0 V
7 0 V
7 0 V
8 0 V
7 0 V
1.000 UL
LT1
LTb
6311 833 M
[ [(Symbol) 140.0 0.0 true true 0 (T)]
[(Helvetica) 112.0 -42.0 true true 0 (e)]
[(Helvetica) 140.0 0.0 true true 0 ( = 1h  )]
] -32.7 MRshow
LT1
6395 833 M
399 0 V
966 420 M
14 41 V
15 74 V
14 96 V
14 101 V
14 132 V
15 117 V
14 148 V
14 165 V
14 133 V
15 137 V
14 200 V
14 179 V
15 166 V
14 144 V
14 146 V
14 132 V
15 153 V
14 107 V
14 99 V
15 72 V
14 87 V
14 56 V
14 79 V
15 69 V
14 81 V
14 65 V
14 93 V
15 50 V
14 68 V
14 86 V
15 67 V
14 35 V
14 29 V
14 37 V
15 82 V
14 39 V
14 20 V
14 14 V
15 35 V
14 57 V
14 22 V
15 31 V
14 31 V
14 31 V
14 16 V
15 34 V
14 33 V
14 9 V
15 0 V
14 27 V
14 9 V
14 10 V
15 19 V
14 0 V
14 19 V
14 11 V
15 0 V
14 0 V
14 0 V
15 0 V
14 0 V
14 0 V
14 11 V
15 11 V
14 12 V
14 0 V
15 0 V
14 0 V
14 0 V
14 13 V
15 0 V
14 0 V
14 0 V
14 13 V
15 0 V
14 0 V
14 14 V
15 14 V
14 0 V
14 0 V
14 0 V
15 0 V
14 0 V
14 0 V
14 15 V
15 0 V
14 0 V
14 0 V
15 0 V
14 16 V
14 0 V
14 0 V
15 0 V
14 0 V
14 0 V
15 0 V
14 0 V
14 0 V
14 0 V
1.000 UL
LT2
LTb
6311 693 M
[ [(Symbol) 140.0 0.0 true true 0 (T)]
[(Helvetica) 112.0 -42.0 true true 0 (e)]
[(Helvetica) 140.0 0.0 true true 0 ( = 2h  )]
] -32.7 MRshow
LT2
6395 693 M
399 0 V
966 420 M
29 35 V
28 76 V
29 97 V
28 108 V
29 117 V
28 165 V
29 173 V
28 84 V
29 159 V
29 122 V
28 190 V
29 134 V
28 183 V
29 181 V
28 157 V
29 155 V
28 117 V
29 142 V
28 171 V
29 79 V
29 99 V
28 103 V
29 66 V
28 103 V
29 99 V
28 47 V
29 68 V
28 71 V
29 52 V
29 76 V
28 67 V
29 23 V
28 12 V
29 73 V
28 63 V
29 52 V
28 40 V
29 27 V
29 14 V
28 15 V
29 14 V
28 31 V
29 31 V
28 0 V
29 32 V
28 0 V
29 17 V
29 0 V
28 35 V
29 0 V
28 0 V
29 0 V
28 0 V
29 0 V
28 20 V
29 0 V
28 20 V
29 0 V
29 0 V
28 0 V
29 0 V
28 0 V
29 0 V
28 23 V
29 0 V
28 0 V
29 0 V
29 25 V
28 0 V
29 0 V
28 0 V
29 0 V
28 26 V
29 0 V
28 0 V
29 28 V
29 0 V
28 0 V
29 0 V
28 0 V
29 0 V
28 0 V
29 0 V
28 0 V
29 0 V
29 0 V
28 0 V
29 0 V
28 0 V
29 0 V
28 0 V
29 0 V
28 0 V
29 0 V
28 0 V
29 0 V
29 0 V
28 0 V
29 0 V
1.000 UL
LT3
LTb
6311 553 M
[ [(Symbol) 140.0 0.0 true true 0 (T)]
[(Helvetica) 112.0 -42.0 true true 0 (e)]
[(Helvetica) 140.0 0.0 true true 0 ( = 4h  )]
] -32.7 MRshow
LT3
6395 553 M
399 0 V
966 420 M
57 39 V
57 76 V
57 91 V
57 118 V
58 184 V
57 129 V
57 141 V
57 133 V
57 142 V
57 130 V
57 150 V
57 173 V
57 141 V
57 90 V
58 184 V
57 92 V
57 184 V
57 39 V
57 150 V
57 101 V
57 75 V
57 127 V
57 66 V
58 156 V
57 90 V
57 56 V
57 97 V
57 81 V
57 0 V
57 43 V
57 45 V
57 0 V
57 24 V
58 24 V
57 126 V
57 0 V
57 80 V
57 0 V
57 0 V
57 0 V
57 89 V
57 30 V
58 0 V
57 31 V
57 33 V
57 33 V
57 34 V
57 34 V
57 0 V
57 36 V
57 0 V
57 0 V
58 39 V
57 38 V
57 0 V
57 0 V
57 41 V
57 0 V
57 0 V
57 0 V
57 0 V
57 45 V
58 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 50 V
57 0 V
57 0 V
58 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
58 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
58 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
57 0 V
1.000 UL
LTb
966 420 M
5996 0 V
0 4200 V
-5996 0 V
966 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1
