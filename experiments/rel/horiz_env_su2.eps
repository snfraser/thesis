%!PS-Adobe-2.0 EPSF-2.0
%%Title: horiz_env_su2.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Fri Mar 25 09:13:59 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
714 420 M
63 0 V
6185 0 R
-63 0 V
stroke
630 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 70)]
] -46.7 MRshow
1.000 UL
LTb
714 945 M
63 0 V
6185 0 R
-63 0 V
stroke
630 945 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 75)]
] -46.7 MRshow
1.000 UL
LTb
714 1470 M
63 0 V
6185 0 R
-63 0 V
stroke
630 1470 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80)]
] -46.7 MRshow
1.000 UL
LTb
714 1995 M
63 0 V
6185 0 R
-63 0 V
stroke
630 1995 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 85)]
] -46.7 MRshow
1.000 UL
LTb
714 2520 M
63 0 V
6185 0 R
-63 0 V
stroke
630 2520 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 90)]
] -46.7 MRshow
1.000 UL
LTb
714 3045 M
63 0 V
6185 0 R
-63 0 V
stroke
630 3045 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 95)]
] -46.7 MRshow
1.000 UL
LTb
714 3570 M
63 0 V
6185 0 R
-63 0 V
stroke
630 3570 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
1.000 UL
LTb
714 4095 M
63 0 V
6185 0 R
-63 0 V
stroke
630 4095 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 105)]
] -46.7 MRshow
1.000 UL
LTb
714 4620 M
63 0 V
6185 0 R
-63 0 V
stroke
630 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 110)]
] -46.7 MRshow
1.000 UL
LTb
714 420 M
0 63 V
0 4137 R
0 -63 V
stroke
714 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1582 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1582 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50)]
] -46.7 MCshow
1.000 UL
LTb
2450 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2450 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
3317 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3317 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 150)]
] -46.7 MCshow
1.000 UL
LTb
4185 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4185 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MCshow
1.000 UL
LTb
5053 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5053 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 250)]
] -46.7 MCshow
1.000 UL
LTb
5921 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5921 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 300)]
] -46.7 MCshow
1.000 UL
LTb
6788 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6788 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 350)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
714 420 M
6248 0 V
0 4200 V
-6248 0 V
714 420 L
LTb
140 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Schedule quality Q)]
[(Helvetica) 112.0 -42.0 true true 0 (SU)]
] -32.7 MCshow
grestore
LTb
3838 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Environmental stability )]
[(Symbol) 140.0 0.0 true true 0 (t)]
[(Helvetica) 112.0 -42.0 true true 0 (E)]
[(Helvetica) 140.0 0.0 true true 0 ( [mins])]
] -32.7 MCshow
LTb
3838 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Variation of Q)]
[(Helvetica) 112.0 -42.0 true true 0 (SU)]
[(Helvetica) 140.0 0.0 true true 0 ( with environmental stability for QLAS with variable horizon length)]
] -32.7 MCshow
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
6311 1113 M
[ [(Helvetica) 140.0 0.0 true true 0 (H=0.5h)]
] -46.7 MRshow
LT0
6395 1113 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
714 2085 M
521 -77 V
520 -14 V
521 52 V
521 131 V
520 -160 V
521 90 V
521 -183 V
520 -83 V
521 352 V
521 -492 V
520 683 V
521 -666 V
714 1693 M
0 785 V
683 1693 M
62 0 V
-62 785 R
62 0 V
490 -721 R
0 502 V
-31 -502 R
62 0 V
-62 502 R
62 0 V
489 -516 R
0 501 V
-31 -501 R
62 0 V
-62 501 R
62 0 V
490 -420 R
0 444 V
-31 -444 R
62 0 V
-62 444 R
62 0 V
490 -449 R
0 717 V
-31 -717 R
62 0 V
-62 717 R
62 0 V
3317 1527 M
0 979 V
-31 -979 R
62 0 V
-62 979 R
62 0 V
490 -687 R
0 577 V
-31 -577 R
62 0 V
-62 577 R
62 0 V
490 -828 R
0 711 V
-31 -711 R
62 0 V
-62 711 R
62 0 V
489 -896 R
0 917 V
-31 -917 R
62 0 V
-62 917 R
62 0 V
490 -500 R
0 786 V
-31 -786 R
62 0 V
-62 786 R
62 0 V
5921 1281 M
0 840 V
-31 -840 R
62 0 V
-62 840 R
62 0 V
489 -253 R
0 1032 V
6410 1868 M
62 0 V
-62 1032 R
62 0 V
6962 1439 M
0 558 V
-31 -558 R
62 0 V
-62 558 R
62 0 V
714 2085 Pls
1235 2008 Pls
1755 1994 Pls
2276 2046 Pls
2797 2177 Pls
3317 2017 Pls
3838 2107 Pls
4359 1924 Pls
4879 1841 Pls
5400 2193 Pls
5921 1701 Pls
6441 2384 Pls
6962 1718 Pls
6594 1113 Pls
1.000 UP
1.000 UL
LT1
LTb
6311 973 M
[ [(Helvetica) 140.0 0.0 true true 0 (H=1.0h)]
] -46.7 MRshow
LT1
6395 973 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
714 1263 M
521 811 V
520 773 V
521 305 V
521 -402 V
520 -3 V
521 -213 V
521 537 V
520 -810 V
521 654 V
521 -558 V
520 29 V
521 -125 V
714 1079 M
0 367 V
683 1079 M
62 0 V
-62 367 R
62 0 V
490 276 R
0 705 V
-31 -705 R
62 0 V
-62 705 R
62 0 V
489 212 R
0 416 V
-31 -416 R
62 0 V
-62 416 R
62 0 V
490 -307 R
0 808 V
-31 -808 R
62 0 V
-62 808 R
62 0 V
2797 2311 M
0 878 V
-31 -878 R
62 0 V
-62 878 R
62 0 V
489 -569 R
0 255 V
-31 -255 R
62 0 V
-62 255 R
62 0 V
490 -496 R
0 310 V
-31 -310 R
62 0 V
-62 310 R
62 0 V
490 -95 R
0 953 V
-31 -953 R
62 0 V
-62 953 R
62 0 V
4879 2099 M
0 324 V
-31 -324 R
62 0 V
-62 324 R
62 0 V
490 49 R
0 886 V
-31 -886 R
62 0 V
-62 886 R
62 0 V
5921 2241 M
0 232 V
-31 -232 R
62 0 V
-62 232 R
62 0 V
489 -558 R
0 942 V
-31 -942 R
62 0 V
-62 942 R
62 0 V
490 -773 R
0 353 V
-31 -353 R
62 0 V
-62 353 R
62 0 V
714 1263 Crs
1235 2074 Crs
1755 2847 Crs
2276 3152 Crs
2797 2750 Crs
3317 2747 Crs
3838 2534 Crs
4359 3071 Crs
4879 2261 Crs
5400 2915 Crs
5921 2357 Crs
6441 2386 Crs
6962 2261 Crs
6594 973 Crs
1.000 UP
1.000 UL
LT2
LTb
6311 833 M
[ [(Helvetica) 140.0 0.0 true true 0 (H=2.0h)]
] -46.7 MRshow
LT2
6395 833 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
714 1665 M
521 570 V
520 375 V
521 -14 V
521 671 V
520 513 V
521 -309 V
521 163 V
520 215 V
521 -805 V
521 191 V
520 -11 V
521 120 V
714 1140 M
0 1050 V
683 1140 M
62 0 V
683 2190 M
62 0 V
490 -233 R
0 555 V
-31 -555 R
62 0 V
-62 555 R
62 0 V
489 -319 R
0 833 V
-31 -833 R
62 0 V
-62 833 R
62 0 V
490 -816 R
0 773 V
-31 -773 R
62 0 V
-62 773 R
62 0 V
490 -7 R
0 582 V
-31 -582 R
62 0 V
-62 582 R
62 0 V
489 -189 R
0 822 V
-31 -822 R
62 0 V
-62 822 R
62 0 V
490 -873 R
0 305 V
-31 -305 R
62 0 V
-62 305 R
62 0 V
490 -505 R
0 1031 V
4328 3118 M
62 0 V
-62 1031 R
62 0 V
489 -650 R
0 700 V
-31 -700 R
62 0 V
-62 700 R
62 0 V
5400 2663 M
0 762 V
-31 -762 R
62 0 V
-62 762 R
62 0 V
490 -468 R
0 555 V
-31 -555 R
62 0 V
-62 555 R
62 0 V
489 -419 R
0 261 V
-31 -261 R
62 0 V
-62 261 R
62 0 V
490 -120 R
0 219 V
-31 -219 R
62 0 V
-62 219 R
62 0 V
714 1665 Star
1235 2235 Star
1755 2610 Star
2276 2596 Star
2797 3267 Star
3317 3780 Star
3838 3471 Star
4359 3634 Star
4879 3849 Star
5400 3044 Star
5921 3235 Star
6441 3224 Star
6962 3344 Star
6594 833 Star
1.000 UP
1.000 UL
LT3
LTb
6311 693 M
[ [(Helvetica) 140.0 0.0 true true 0 (H=4.0h)]
] -46.7 MRshow
LT3
6395 693 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
714 777 M
521 378 V
520 417 V
521 886 V
521 57 V
520 191 V
521 675 V
521 188 V
520 84 V
521 273 V
521 346 V
520 -250 V
521 -151 V
714 420 M
0 768 V
683 420 M
62 0 V
-62 768 R
62 0 V
1235 707 M
0 897 V
1204 707 M
62 0 V
-62 897 R
62 0 V
489 -301 R
0 537 V
-31 -537 R
62 0 V
-62 537 R
62 0 V
490 181 R
0 874 V
-31 -874 R
62 0 V
-62 874 R
62 0 V
490 -888 R
0 1015 V
2766 2007 M
62 0 V
-62 1015 R
62 0 V
489 -564 R
0 496 V
-31 -496 R
62 0 V
-62 496 R
62 0 V
490 -21 R
0 896 V
-31 -896 R
62 0 V
-62 896 R
62 0 V
490 -578 R
0 635 V
-31 -635 R
62 0 V
-62 635 R
62 0 V
489 -461 R
0 456 V
-31 -456 R
62 0 V
-62 456 R
62 0 V
490 -289 R
0 667 V
-31 -667 R
62 0 V
-62 667 R
62 0 V
490 -480 R
0 841 V
-31 -841 R
62 0 V
-62 841 R
62 0 V
489 -739 R
0 282 V
-31 -282 R
62 0 V
-62 282 R
62 0 V
490 -796 R
0 1007 V
6931 3367 M
62 0 V
-62 1007 R
62 0 V
714 777 Box
1235 1155 Box
1755 1572 Box
2276 2458 Box
2797 2515 Box
3317 2706 Box
3838 3381 Box
4359 3569 Box
4879 3653 Box
5400 3926 Box
5921 4272 Box
6441 4022 Box
6962 3871 Box
6594 693 Box
1.000 UP
1.000 UL
LT4
LTb
6311 553 M
[ [(Helvetica) 140.0 0.0 true true 0 (H=6.0h)]
] -46.7 MRshow
LT4
6395 553 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
714 502 M
521 214 V
520 472 V
521 129 V
521 143 V
520 814 V
521 -129 V
521 443 V
520 -4 V
521 280 V
521 673 V
520 281 V
521 -276 V
714 420 M
0 216 V
683 420 M
62 0 V
683 636 M
62 0 V
1235 521 M
0 391 V
1204 521 M
62 0 V
-62 391 R
62 0 V
1755 762 M
0 852 V
1724 762 M
62 0 V
-62 852 R
62 0 V
490 -593 R
0 591 V
-31 -591 R
62 0 V
-62 591 R
62 0 V
490 -384 R
0 463 V
-31 -463 R
62 0 V
-62 463 R
62 0 V
489 476 R
0 213 V
-31 -213 R
62 0 V
-62 213 R
62 0 V
490 -503 R
0 536 V
-31 -536 R
62 0 V
-62 536 R
62 0 V
490 -155 R
0 659 V
-31 -659 R
62 0 V
-62 659 R
62 0 V
489 -500 R
0 334 V
-31 -334 R
62 0 V
-62 334 R
62 0 V
490 -331 R
0 889 V
-31 -889 R
62 0 V
-62 889 R
62 0 V
490 -15 R
0 485 V
-31 -485 R
62 0 V
-62 485 R
62 0 V
489 -121 R
0 320 V
-31 -320 R
62 0 V
-62 320 R
62 0 V
490 -863 R
0 853 V
-31 -853 R
62 0 V
-62 853 R
62 0 V
714 502 BoxF
1235 716 BoxF
1755 1188 BoxF
2276 1317 BoxF
2797 1460 BoxF
3317 2274 BoxF
3838 2145 BoxF
4359 2588 BoxF
4879 2584 BoxF
5400 2864 BoxF
5921 3537 BoxF
6441 3818 BoxF
6962 3542 BoxF
6594 553 BoxF
1.000 UL
LTb
714 420 M
6248 0 V
0 4200 V
-6248 0 V
714 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
