%!PS-Adobe-2.0 EPSF-2.0
%%Title: horiz_reliability.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Fri Mar 25 09:13:59 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
798 420 M
63 0 V
6101 0 R
-63 0 V
stroke
714 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.75)]
] -46.7 MRshow
1.000 UL
LTb
798 945 M
63 0 V
6101 0 R
-63 0 V
stroke
714 945 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MRshow
1.000 UL
LTb
798 1470 M
63 0 V
6101 0 R
-63 0 V
stroke
714 1470 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.85)]
] -46.7 MRshow
1.000 UL
LTb
798 1995 M
63 0 V
6101 0 R
-63 0 V
stroke
714 1995 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.9)]
] -46.7 MRshow
1.000 UL
LTb
798 2520 M
63 0 V
6101 0 R
-63 0 V
stroke
714 2520 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.95)]
] -46.7 MRshow
1.000 UL
LTb
798 3045 M
63 0 V
6101 0 R
-63 0 V
stroke
714 3045 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
798 3570 M
63 0 V
6101 0 R
-63 0 V
stroke
714 3570 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.05)]
] -46.7 MRshow
1.000 UL
LTb
798 4095 M
63 0 V
6101 0 R
-63 0 V
stroke
714 4095 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.1)]
] -46.7 MRshow
1.000 UL
LTb
798 4620 M
63 0 V
6101 0 R
-63 0 V
stroke
714 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.15)]
] -46.7 MRshow
1.000 UL
LTb
798 420 M
0 63 V
0 4137 R
0 -63 V
stroke
798 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1414 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1414 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MCshow
1.000 UL
LTb
2031 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2031 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MCshow
1.000 UL
LTb
2647 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2647 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MCshow
1.000 UL
LTb
3264 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3264 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MCshow
1.000 UL
LTb
3880 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3880 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
4496 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4496 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.2)]
] -46.7 MCshow
1.000 UL
LTb
5113 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5113 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.4)]
] -46.7 MCshow
1.000 UL
LTb
5729 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5729 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.6)]
] -46.7 MCshow
1.000 UL
LTb
6346 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6346 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.8)]
] -46.7 MCshow
1.000 UL
LTb
6962 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6962 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
798 420 M
6164 0 V
0 4200 V
-6164 0 V
798 420 L
LTb
140 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Schedule quality Q)]
[(Helvetica) 112.0 -42.0 true true 0 (SU)]
] -32.7 MCshow
grestore
LTb
3880 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Environmental stability over-estimation fraction q)]
[(Helvetica) 112.0 -42.0 true true 0 (E)]
[(Helvetica) 140.0 0.0 true true 0 ( [mins])]
] -32.7 MCshow
LTb
3880 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Variation of Q)]
[(Helvetica) 112.0 -42.0 true true 0 (SU)]
[(Helvetica) 140.0 0.0 true true 0 ( with reliability of environmental stability estimate for QLAS with variable horizon length)]
] -32.7 MCshow
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
6311 4487 M
[ [(Helvetica) 140.0 0.0 true true 0 (H=0.5h)]
] -46.7 MRshow
LT0
6395 4487 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
1106 3415 M
463 -318 V
770 128 V
771 -60 V
770 -44 V
771 -430 V
770 213 V
1541 425 V
1106 3175 M
0 479 V
-31 -479 R
62 0 V
-62 479 R
62 0 V
1569 2603 M
0 988 V
-31 -988 R
62 0 V
-62 988 R
62 0 V
739 -962 R
0 1193 V
2308 2629 M
62 0 V
-62 1193 R
62 0 V
3110 2722 M
0 885 V
-31 -885 R
62 0 V
-62 885 R
62 0 V
739 -848 R
0 725 V
-31 -725 R
62 0 V
-62 725 R
62 0 V
4651 2105 M
0 1172 V
4620 2105 M
62 0 V
-62 1172 R
62 0 V
739 -629 R
0 512 V
-31 -512 R
62 0 V
-62 512 R
62 0 V
6962 2961 M
0 736 V
-31 -736 R
62 0 V
-62 736 R
62 0 V
1106 3415 BoxF
1569 3097 BoxF
2339 3225 BoxF
3110 3165 BoxF
3880 3121 BoxF
4651 2691 BoxF
5421 2904 BoxF
6962 3329 BoxF
6594 4487 BoxF
1.000 UP
1.000 UL
LT1
LTb
6311 4347 M
[ [(Helvetica) 140.0 0.0 true true 0 (H=1.0h)]
] -46.7 MRshow
LT1
6395 4347 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
1106 1726 M
463 1114 V
770 125 V
771 323 V
770 -88 V
771 -359 V
770 -188 V
1541 -49 V
1106 1442 M
0 567 V
-31 -567 R
62 0 V
-62 567 R
62 0 V
432 586 R
0 490 V
-31 -490 R
62 0 V
-62 490 R
62 0 V
739 -558 R
0 876 V
-31 -876 R
62 0 V
-62 876 R
62 0 V
740 -236 R
0 242 V
-31 -242 R
62 0 V
-62 242 R
62 0 V
739 -613 R
0 809 V
-31 -809 R
62 0 V
-62 809 R
62 0 V
740 -974 R
0 420 V
-31 -420 R
62 0 V
-62 420 R
62 0 V
739 -887 R
0 978 V
-31 -978 R
62 0 V
-62 978 R
62 0 V
6962 2130 M
0 949 V
-31 -949 R
62 0 V
-62 949 R
62 0 V
1106 1726 BoxF
1569 2840 BoxF
2339 2965 BoxF
3110 3288 BoxF
3880 3200 BoxF
4651 2841 BoxF
5421 2653 BoxF
6962 2604 BoxF
6594 4347 BoxF
1.000 UP
1.000 UL
LT2
LTb
6311 4207 M
[ [(Helvetica) 140.0 0.0 true true 0 (H=2.0h)]
] -46.7 MRshow
LT2
6395 4207 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
1106 1199 M
463 1143 V
770 801 V
771 -75 V
770 4 V
771 -634 V
770 201 V
6962 2238 L
1106 809 M
0 779 V
1075 809 M
62 0 V
-62 779 R
62 0 V
432 274 R
0 960 V
-31 -960 R
62 0 V
-62 960 R
62 0 V
739 91 R
0 459 V
-31 -459 R
62 0 V
-62 459 R
62 0 V
740 -445 R
0 281 V
-31 -281 R
62 0 V
-62 281 R
62 0 V
739 -383 R
0 493 V
-31 -493 R
62 0 V
-62 493 R
62 0 V
4651 2281 M
0 314 V
-31 -314 R
62 0 V
-62 314 R
62 0 V
739 -479 R
0 1045 V
5390 2116 M
62 0 V
-62 1045 R
62 0 V
6962 1979 M
0 518 V
-31 -518 R
62 0 V
-62 518 R
62 0 V
1106 1199 BoxF
1569 2342 BoxF
2339 3143 BoxF
3110 3068 BoxF
3880 3072 BoxF
4651 2438 BoxF
5421 2639 BoxF
6962 2238 BoxF
6594 4207 BoxF
1.000 UP
1.000 UL
LT3
LTb
6311 4067 M
[ [(Helvetica) 140.0 0.0 true true 0 (H=4.0h)]
] -46.7 MRshow
LT3
6395 4067 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
1106 1779 M
463 1301 V
770 438 V
771 271 V
770 -949 V
771 9 V
770 -570 V
6962 2062 L
1106 1506 M
0 547 V
-31 -547 R
62 0 V
-62 547 R
62 0 V
432 897 R
0 259 V
-31 -259 R
62 0 V
-62 259 R
62 0 V
739 27 R
0 564 V
-31 -564 R
62 0 V
-62 564 R
62 0 V
740 -315 R
0 608 V
-31 -608 R
62 0 V
-62 608 R
62 0 V
3880 2705 M
0 270 V
-31 -270 R
62 0 V
-62 270 R
62 0 V
740 -610 R
0 969 V
-31 -969 R
62 0 V
-62 969 R
62 0 V
5421 2070 M
0 418 V
-31 -418 R
62 0 V
-62 418 R
62 0 V
6962 1808 M
0 507 V
-31 -507 R
62 0 V
-62 507 R
62 0 V
1106 1779 BoxF
1569 3080 BoxF
2339 3518 BoxF
3110 3789 BoxF
3880 2840 BoxF
4651 2849 BoxF
5421 2279 BoxF
6962 2062 BoxF
6594 4067 BoxF
1.000 UP
1.000 UL
LT4
LTb
6311 3927 M
[ [(Helvetica) 140.0 0.0 true true 0 (H=6.0h)]
] -46.7 MRshow
LT4
6395 3927 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
1106 2126 M
463 1506 V
770 391 V
771 -604 V
770 -546 V
771 -148 V
770 -538 V
6962 1882 L
1106 1560 M
0 1131 V
1075 1560 M
62 0 V
-62 1131 R
62 0 V
432 715 R
0 452 V
-31 -452 R
62 0 V
-62 452 R
62 0 V
739 -89 R
0 508 V
-31 -508 R
62 0 V
-62 508 R
62 0 V
3110 3045 M
0 748 V
-31 -748 R
62 0 V
-62 748 R
62 0 V
3880 2535 M
0 676 V
-31 -676 R
62 0 V
-62 676 R
62 0 V
740 -689 R
0 406 V
-31 -406 R
62 0 V
-62 406 R
62 0 V
739 -940 R
0 397 V
-31 -397 R
62 0 V
-62 397 R
62 0 V
6962 1728 M
0 307 V
-31 -307 R
62 0 V
-62 307 R
62 0 V
1106 2126 BoxF
1569 3632 BoxF
2339 4023 BoxF
3110 3419 BoxF
3880 2873 BoxF
4651 2725 BoxF
5421 2187 BoxF
6962 1882 BoxF
6594 3927 BoxF
1.000 UL
LTb
798 420 M
6164 0 V
0 4200 V
-6164 0 V
798 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
