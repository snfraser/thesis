%!PS-Adobe-2.0
%%Title: cs1_dw1_foa.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Nov  8 09:48:54 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
798 420 M
63 0 V
6101 0 R
-63 0 V
stroke
714 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.7)]
] -46.7 MRshow
1.000 UL
LTb
798 1120 M
63 0 V
6101 0 R
-63 0 V
stroke
714 1120 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.75)]
] -46.7 MRshow
1.000 UL
LTb
798 1820 M
63 0 V
6101 0 R
-63 0 V
stroke
714 1820 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MRshow
1.000 UL
LTb
798 2520 M
63 0 V
6101 0 R
-63 0 V
stroke
714 2520 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.85)]
] -46.7 MRshow
1.000 UL
LTb
798 3220 M
63 0 V
6101 0 R
-63 0 V
stroke
714 3220 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.9)]
] -46.7 MRshow
1.000 UL
LTb
798 3920 M
63 0 V
6101 0 R
-63 0 V
stroke
714 3920 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.95)]
] -46.7 MRshow
1.000 UL
LTb
798 4620 M
63 0 V
6101 0 R
-63 0 V
stroke
714 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
1092 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1092 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
2266 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2266 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MCshow
1.000 UL
LTb
3440 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3440 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MCshow
1.000 UL
LTb
4614 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4614 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MCshow
1.000 UL
LTb
5788 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5788 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MCshow
1.000 UL
LTb
6962 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6962 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
798 420 M
6164 0 V
0 4200 V
-6164 0 V
798 420 L
LTb
140 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Q)]
[(Helvetica) 112.0 -42.0 true true 0 (OA)]
[(Helvetica) 140.0 0.0 true true 0 ( Flexible)]
] -32.7 MCshow
grestore
LTb
3880 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Relative weight w)]
[(Helvetica) 112.0 -42.0 true true 0 (trans)]
] -32.7 MCshow
LTb
3880 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Variation of Q)]
[(Helvetica) 112.0 -42.0 true true 0 (OA)]
[(Helvetica) 140.0 0.0 true true 0 ( with relative scoring weight w)]
[(Helvetica) 112.0 -42.0 true true 0 (trans)]
] -32.7 MCshow
1.000 UP
LTb
1414 1260 M
[ [(Helvetica) 140.0 0.0 true true 0 (ENV = E)]
[(Helvetica) 112.0 -42.0 true true 0 (FP)]
] -32.7 MLshow
1.000 UL
LT0
LTb
6262 1260 M
[ [(Helvetica) 140.0 0.0 true true 0 (SEL = BEST)]
] -46.7 MRshow
LT0
6346 1225 399 70 BoxFill
6346 1225 M
399 0 V
0 70 V
-399 0 V
0 -70 V
0 66 R
0 -62 V
399 62 R
0 -62 V
stroke
1077 1022 30 513 BoxFill
1092 685 M
0 337 V
-15 0 V
30 0 V
0 513 V
-30 0 V
0 -513 V
15 513 R
0 181 V
stroke
1664 3353 30 544 BoxFill
1679 3082 M
0 271 V
-15 0 V
30 0 V
0 544 V
-30 0 V
0 -544 V
15 544 R
0 -56 V
stroke
2251 3457 30 424 BoxFill
2266 3013 M
0 444 V
-15 0 V
30 0 V
0 424 V
-30 0 V
0 -424 V
15 424 R
0 -39 V
stroke
2838 3169 30 671 BoxFill
2853 2969 M
0 200 V
-15 0 V
30 0 V
0 671 V
-30 0 V
0 -671 V
15 671 R
0 1 V
stroke
3425 3278 30 655 BoxFill
3440 2944 M
0 334 V
-15 0 V
30 0 V
0 655 V
-30 0 V
0 -655 V
15 655 R
0 -68 V
stroke
4012 3266 30 565 BoxFill
4027 3061 M
0 205 V
-15 0 V
30 0 V
0 565 V
-30 0 V
0 -565 V
15 565 R
0 36 V
stroke
4305 3291 30 574 BoxFill
4320 3011 M
0 280 V
-15 0 V
30 0 V
0 574 V
-30 0 V
0 -574 V
15 574 R
0 -27 V
stroke
4599 3304 30 512 BoxFill
4614 3133 M
0 171 V
-15 0 V
30 0 V
0 512 V
-30 0 V
0 -512 V
15 512 R
0 9 V
stroke
4892 3436 30 492 BoxFill
4907 3196 M
0 240 V
-15 0 V
30 0 V
0 492 V
-30 0 V
0 -492 V
15 492 R
0 30 V
stroke
5186 3562 30 340 BoxFill
5201 3537 M
0 25 V
-15 0 V
30 0 V
0 340 V
-30 0 V
0 -340 V
15 340 R
0 92 V
stroke
5479 3508 30 150 BoxFill
5494 3416 M
0 92 V
-15 0 V
30 0 V
0 150 V
-30 0 V
0 -150 V
15 150 R
0 112 V
stroke
5773 3174 30 268 BoxFill
5788 3009 M
0 165 V
-15 0 V
30 0 V
0 268 V
-30 0 V
0 -268 V
15 268 R
0 94 V
stroke
5920 3292 30 337 BoxFill
5935 3099 M
0 193 V
-15 0 V
30 0 V
0 337 V
-30 0 V
0 -337 V
15 337 R
0 167 V
stroke
6066 3223 30 289 BoxFill
6081 3158 M
0 65 V
-15 0 V
30 0 V
0 289 V
-30 0 V
0 -289 V
15 289 R
0 182 V
stroke
6213 3548 30 280 BoxFill
6228 3387 M
0 161 V
-15 0 V
30 0 V
0 280 V
-30 0 V
0 -280 V
15 280 R
0 129 V
stroke
6360 3506 30 106 BoxFill
6375 3396 M
0 110 V
-15 0 V
30 0 V
0 106 V
-30 0 V
0 -106 V
15 106 R
0 30 V
stroke
6433 3448 30 123 BoxFill
6448 3369 M
0 79 V
-15 0 V
30 0 V
0 123 V
-30 0 V
0 -123 V
15 123 R
0 52 V
stroke
6507 3398 30 182 BoxFill
6522 3238 M
0 160 V
-15 0 V
30 0 V
0 182 V
-30 0 V
0 -182 V
15 182 R
0 56 V
stroke
6580 3399 30 260 BoxFill
6595 3037 M
0 362 V
-15 0 V
30 0 V
0 260 V
-30 0 V
0 -260 V
15 260 R
0 -25 V
stroke
6653 3427 30 127 BoxFill
6668 3409 M
0 18 V
-15 0 V
30 0 V
0 127 V
-30 0 V
0 -127 V
15 127 R
0 44 V
stroke
6712 3408 30 138 BoxFill
6727 3386 M
0 22 V
-15 0 V
30 0 V
0 138 V
-30 0 V
0 -138 V
15 138 R
0 46 V
stroke
6771 3382 30 222 BoxFill
6786 3147 M
0 235 V
-15 0 V
30 0 V
0 222 V
-30 0 V
0 -222 V
15 222 R
0 63 V
stroke
6830 3441 30 165 BoxFill
6845 3342 M
0 99 V
-15 0 V
30 0 V
0 165 V
-30 0 V
0 -165 V
15 165 R
0 19 V
stroke
6888 3434 30 104 BoxFill
6903 3421 M
0 13 V
-15 0 V
30 0 V
0 104 V
-30 0 V
0 -104 V
15 104 R
0 45 V
1.000 UL
LT1
LTb
6262 1120 M
[ [(Helvetica) 140.0 0.0 true true 0 (SEL = RAND)]
] -46.7 MRshow
LT1
6346 1120 M
399 0 V
798 1610 M
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
1.000 UL
LTb
798 420 M
6164 0 V
0 4200 V
-6164 0 V
798 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
