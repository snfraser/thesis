%!PS-Adobe-2.0
%%Title: cont.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Wed Nov 21 15:34:34 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
630 420 M
63 0 V
6269 0 R
-63 0 V
stroke
546 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
630 1120 M
63 0 V
6269 0 R
-63 0 V
stroke
546 1120 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MRshow
1.000 UL
LTb
630 1820 M
63 0 V
6269 0 R
-63 0 V
stroke
546 1820 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
630 2520 M
63 0 V
6269 0 R
-63 0 V
stroke
546 2520 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 15)]
] -46.7 MRshow
1.000 UL
LTb
630 3220 M
63 0 V
6269 0 R
-63 0 V
stroke
546 3220 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MRshow
1.000 UL
LTb
630 3920 M
63 0 V
6269 0 R
-63 0 V
stroke
546 3920 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 25)]
] -46.7 MRshow
1.000 UL
LTb
630 4620 M
63 0 V
6269 0 R
-63 0 V
stroke
546 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 30)]
] -46.7 MRshow
1.000 UL
LTb
630 420 M
0 63 V
0 4137 R
0 -63 V
stroke
630 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (11/16)]
] -46.7 MCshow
630 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (18:00)]
] -46.7 MCshow
1.000 UL
LTb
1082 420 M
0 31 V
0 4169 R
0 -31 V
1535 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1535 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (11/16)]
] -46.7 MCshow
1535 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (20:00)]
] -46.7 MCshow
1.000 UL
LTb
1987 420 M
0 31 V
0 4169 R
0 -31 V
2439 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2439 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (11/16)]
] -46.7 MCshow
2439 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (22:00)]
] -46.7 MCshow
1.000 UL
LTb
2891 420 M
0 31 V
0 4169 R
0 -31 V
3344 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3344 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (11/17)]
] -46.7 MCshow
3344 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (00:00)]
] -46.7 MCshow
1.000 UL
LTb
3796 420 M
0 31 V
0 4169 R
0 -31 V
4248 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4248 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (11/17)]
] -46.7 MCshow
4248 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (02:00)]
] -46.7 MCshow
1.000 UL
LTb
4701 420 M
0 31 V
0 4169 R
0 -31 V
5153 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5153 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (11/17)]
] -46.7 MCshow
5153 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (04:00)]
] -46.7 MCshow
1.000 UL
LTb
5605 420 M
0 31 V
0 4169 R
0 -31 V
6057 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6057 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (11/17)]
] -46.7 MCshow
6057 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (06:00)]
] -46.7 MCshow
1.000 UL
LTb
6510 420 M
0 31 V
0 4169 R
0 -31 V
6962 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6962 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (11/17)]
] -46.7 MCshow
6962 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (08:00)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
630 420 M
6332 0 V
0 4200 V
-6332 0 V
630 420 L
LTb
140 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Contention during simulation run)]
] -46.7 MCshow
grestore
LTb
3796 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Time [UT])]
] -46.7 MCshow
LTb
3796 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Comparison of contention ratios under various environment models)]
] -46.7 MCshow
1.000 UP
1.000 UL
LT0
LTb
6311 4487 M
[ [(Helvetica) 140.0 0.0 true true 0 (RND-e)]
] -46.7 MRshow
LT0
6395 4487 M
399 0 V
781 420 M
37 0 V
38 0 V
38 0 V
38 1540 V
122 -280 V
66 0 V
121 -420 V
120 280 V
113 -280 V
57 -140 V
24 -140 V
64 -140 V
119 140 V
118 280 V
1975 980 L
60 0 V
32 -140 V
108 280 V
125 140 V
26 -140 V
53 -140 V
61 0 V
32 -140 V
95 140 V
127 280 V
99 -280 V
57 -140 V
24 -140 V
53 0 V
25 0 V
65 0 V
57 -140 V
88 0 V
23 -140 V
38 2520 V
152 840 V
22 -140 V
80 -140 V
106 280 V
25 -140 V
236 -140 V
24 -140 V
22 -140 V
34 -280 V
107 0 V
14 -280 V
25 0 V
87 0 V
20 -140 V
52 0 V
232 140 V
139 -140 V
75 0 V
225 0 V
113 140 V
18 -140 V
19 -140 V
138 560 V
19 -140 V
108 0 V
232 -280 V
17 -140 V
89 0 V
23 -140 V
59 420 V
220 140 V
24 0 V
224 980 V
61 -420 V
167 -840 V
69 -1400 V
54 -700 V
38 0 V
37 0 V
38 0 V
38 0 V
1.000 UL
LT1
LTb
6311 4347 M
[ [(Helvetica) 140.0 0.0 true true 0 (E)]
[(Helvetica) 112.0 -42.0 true true 0 (FX)]
] -32.7 MRshow
LT1
6395 4347 M
399 0 V
781 420 M
37 0 V
38 0 V
38 0 V
38 3920 V
110 -140 V
116 -140 V
60 -420 V
88 140 V
146 -140 V
115 -140 V
110 -420 V
105 140 V
33 0 V
36 0 V
108 0 V
122 0 V
23 0 V
104 -140 V
37 -140 V
278 140 V
33 -140 V
127 560 V
19 -140 V
104 -140 V
100 140 V
23 -280 V
23 0 V
53 -140 V
20 -140 V
53 0 V
24 -280 V
66 0 V
31 -280 V
122 840 V
15 0 V
94 140 V
221 0 V
21 -140 V
24 -280 V
109 0 V
25 -140 V
29 -280 V
63 -140 V
168 140 V
20 -140 V
26 -280 V
105 280 V
14 -140 V
223 140 V
136 -280 V
18 -140 V
233 0 V
132 280 V
18 -140 V
124 420 V
101 140 V
18 -140 V
88 0 V
218 -280 V
105 0 V
22 140 V
107 140 V
234 560 V
58 0 V
168 280 V
15 -280 V
82 140 V
71 -560 V
46 -1400 V
22 -140 V
44 -560 V
38 0 V
38 0 V
38 0 V
37 0 V
38 0 V
1.000 UL
LT2
LTb
6311 4207 M
[ [(Helvetica) 140.0 0.0 true true 0 (E)]
[(Helvetica) 112.0 -42.0 true true 0 (FP)]
] -32.7 MRshow
LT2
6395 4207 M
399 0 V
781 420 M
37 0 V
38 0 V
38 0 V
38 1540 V
121 -280 V
70 0 V
111 -420 V
118 280 V
112 -280 V
50 -420 V
116 280 V
33 -140 V
122 140 V
1892 980 L
52 -140 V
62 140 V
29 -140 V
54 140 V
112 140 V
112 140 V
35 -280 V
50 0 V
22 -140 V
99 280 V
27 -140 V
119 140 V
2769 980 L
32 -140 V
54 -140 V
54 0 V
30 0 V
59 -140 V
91 0 V
52 0 V
33 -140 V
38 0 V
38 140 V
60 280 V
151 0 V
70 0 V
71 0 V
27 -140 V
56 -140 V
58 -140 V
38 0 V
38 420 V
33 -140 V
56 -140 V
59 -140 V
38 0 V
38 140 V
25 -140 V
38 140 V
64 -140 V
38 0 V
38 280 V
229 0 V
34 -280 V
38 0 V
37 0 V
38 140 V
4841 420 L
37 0 V
38 0 V
38 0 V
37 0 V
38 0 V
38 140 V
219 280 V
98 -140 V
41 -140 V
180 0 V
228 140 V
172 0 V
225 140 V
51 -140 V
6395 560 L
6507 420 L
37 0 V
38 0 V
38 0 V
37 0 V
38 0 V
1.000 UL
LTb
630 420 M
6332 0 V
0 4200 V
-6332 0 V
630 420 L
1.000 UP
stroke
grestore
end
showpage
