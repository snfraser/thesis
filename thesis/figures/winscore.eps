%!PS-Adobe-2.0 EPSF-2.0
%%Title: winscore.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Wed Feb 23 13:29:37 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
714 420 M
63 0 V
6185 0 R
-63 0 V
stroke
630 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
714 1020 M
63 0 V
6185 0 R
-63 0 V
stroke
630 1020 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MRshow
1.000 UL
LTb
714 1620 M
63 0 V
6185 0 R
-63 0 V
stroke
630 1620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MRshow
1.000 UL
LTb
714 2220 M
63 0 V
6185 0 R
-63 0 V
stroke
630 2220 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MRshow
1.000 UL
LTb
714 2820 M
63 0 V
6185 0 R
-63 0 V
stroke
630 2820 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MRshow
1.000 UL
LTb
714 3420 M
63 0 V
6185 0 R
-63 0 V
stroke
630 3420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
714 4020 M
63 0 V
6185 0 R
-63 0 V
stroke
630 4020 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.2)]
] -46.7 MRshow
1.000 UL
LTb
714 4620 M
63 0 V
6185 0 R
-63 0 V
stroke
630 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.4)]
] -46.7 MRshow
1.000 UL
LTb
714 420 M
0 63 V
0 4137 R
0 -63 V
stroke
714 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (19:00)]
] -46.7 MCshow
1.000 UL
LTb
974 420 M
0 31 V
0 4169 R
0 -31 V
1235 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1235 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (20:00)]
] -46.7 MCshow
1.000 UL
LTb
1495 420 M
0 31 V
0 4169 R
0 -31 V
1755 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1755 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (21:00)]
] -46.7 MCshow
1.000 UL
LTb
2016 420 M
0 31 V
0 4169 R
0 -31 V
2276 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2276 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (22:00)]
] -46.7 MCshow
1.000 UL
LTb
2536 420 M
0 31 V
0 4169 R
0 -31 V
2797 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2797 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (23:00)]
] -46.7 MCshow
1.000 UL
LTb
3057 420 M
0 31 V
0 4169 R
0 -31 V
3317 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3317 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (00:00)]
] -46.7 MCshow
1.000 UL
LTb
3578 420 M
0 31 V
0 4169 R
0 -31 V
3838 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3838 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (01:00)]
] -46.7 MCshow
1.000 UL
LTb
4098 420 M
0 31 V
0 4169 R
0 -31 V
4359 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4359 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (02:00)]
] -46.7 MCshow
1.000 UL
LTb
4619 420 M
0 31 V
0 4169 R
0 -31 V
4879 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4879 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (03:00)]
] -46.7 MCshow
1.000 UL
LTb
5140 420 M
0 31 V
0 4169 R
0 -31 V
5400 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5400 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (04:00)]
] -46.7 MCshow
1.000 UL
LTb
5660 420 M
0 31 V
0 4169 R
0 -31 V
5921 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5921 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (05:00)]
] -46.7 MCshow
1.000 UL
LTb
6181 420 M
0 31 V
0 4169 R
0 -31 V
6441 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6441 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (06:00)]
] -46.7 MCshow
1.000 UL
LTb
6702 420 M
0 31 V
0 4169 R
0 -31 V
6962 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6962 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (07:00)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
714 420 M
6248 0 V
0 4200 V
-6248 0 V
714 420 L
LTb
140 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Winning score  f)]
[(Helvetica) 112.0 -42.0 true true 0 (SU)]
] -32.7 MCshow
grestore
LTb
3838 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Time)]
] -46.7 MCshow
LTb
3838 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Variation of score for winning candidate with time)]
] -46.7 MCshow
1.000 UP
1.000 UL
LT0
LTb
6311 4487 M
[ [(Helvetica) 140.0 0.0 true true 0 (Winning score)]
] -46.7 MRshow
LT0
6395 4487 M
399 0 V
1037 2280 M
31 0 V
0 -1380 V
71 0 V
0 2160 V
80 0 V
0 -90 V
72 0 V
0 -90 V
102 0 V
0 -270 V
142 0 V
0 210 V
23 0 V
0 90 V
39 0 V
0 -360 V
21 0 V
0 -210 V
33 0 V
0 60 V
98 0 V
0 -150 V
50 0 V
0 420 V
32 0 V
0 -360 V
4 0 V
0 -30 V
42 0 V
0 810 V
44 0 V
0 -870 V
67 0 V
0 -180 V
46 0 V
0 120 V
87 0 V
0 -120 V
642 0 V
0 1740 V
24 0 V
0 -1140 V
79 0 V
0 1170 V
19 0 V
0 -810 V
46 0 V
0 900 V
20 0 V
0 -1050 V
76 0 V
0 1080 V
21 0 V
0 -750 V
87 0 V
0 -690 V
86 0 V
0 -90 V
137 0 V
0 30 V
31 0 V
0 -180 V
23 0 V
0 -480 V
30 0 V
0 30 V
20 0 V
11 0 V
0 -90 V
22 0 V
0 -150 V
20 0 V
0 -240 V
85 0 V
0 1860 V
404 0 V
0 1140 V
28 0 V
0 -2520 V
539 0 V
0 2580 V
31 0 V
0 -1260 V
78 0 V
0 -750 V
13 0 V
0 -1020 V
14 0 V
0 -540 V
37 0 V
0 1680 V
351 0 V
0 -240 V
539 0 V
0 -870 V
53 0 V
0 2640 V
19 0 V
0 -780 V
35 0 V
226 0 V
0 510 V
stroke
5967 3750 M
21 0 V
0 -600 V
17 0 V
0 -90 V
26 0 V
0 -360 V
36 0 V
0 1020 V
30 0 V
0 -960 V
35 0 V
0 -150 V
30 0 V
0 1110 V
110 0 V
0 -1320 V
116 0 V
0 1230 V
29 0 V
0 -510 V
84 0 V
0 -210 V
28 0 V
0 -90 V
1.000 UP
1.000 UL
LT1
1037 2280 BoxF
1068 900 BoxF
1139 3060 BoxF
1219 2970 BoxF
1291 2880 BoxF
1393 2610 BoxF
1535 2820 BoxF
1558 2910 BoxF
1597 2550 BoxF
1618 2340 BoxF
1651 2400 BoxF
1749 2250 BoxF
1799 2670 BoxF
1831 2310 BoxF
1835 2280 BoxF
1877 3090 BoxF
1921 2220 BoxF
1988 2040 BoxF
2034 2160 BoxF
2121 2040 BoxF
2763 3780 BoxF
2787 2640 BoxF
2866 3810 BoxF
2885 3000 BoxF
2931 3900 BoxF
2951 2850 BoxF
3027 3930 BoxF
3048 3180 BoxF
3135 2490 BoxF
3221 2400 BoxF
3358 2430 BoxF
3389 2250 BoxF
3412 1770 BoxF
3442 1800 BoxF
3462 1800 BoxF
3473 1710 BoxF
3495 1560 BoxF
3515 1320 BoxF
3600 3180 BoxF
4004 4320 BoxF
4032 1800 BoxF
4571 4380 BoxF
4602 3120 BoxF
4680 2370 BoxF
4693 1350 BoxF
4707 810 BoxF
4744 2490 BoxF
5095 2250 BoxF
5634 1380 BoxF
5687 4020 BoxF
5706 3240 BoxF
5741 3240 BoxF
5967 3750 BoxF
5988 3150 BoxF
6005 3060 BoxF
6031 2700 BoxF
6067 3720 BoxF
6097 2760 BoxF
6132 2610 BoxF
6162 3720 BoxF
6272 2400 BoxF
6388 3630 BoxF
6417 3120 BoxF
6501 2910 BoxF
6529 2820 BoxF
1.000 UL
LT2
LTb
6311 4347 M
[ [(Helvetica) 140.0 0.0 true true 0 (2494J000t000)]
] -46.7 MRshow
LT2
6395 4347 M
399 0 V
1535 1743 M
23 -60 V
39 83 V
21 -86 V
33 -5 V
98 32 V
50 5 V
32 26 V
4 33 V
42 99 V
44 -51 V
67 73 V
46 -62 V
87 25 V
642 275 V
24 78 V
79 -1 V
19 1 V
46 9 V
20 -32 V
76 60 V
21 58 V
87 -23 V
86 52 V
137 81 V
1.000 UL
LTb
714 420 M
6248 0 V
0 4200 V
-6248 0 V
714 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
