%!PS-Adobe-2.0
%%Title: qsa3_xt.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Wed May 21 10:51:08 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
798 420 M
63 0 V
6101 0 R
-63 0 V
stroke
714 420 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MRshow
grestore
1.000 UL
LTb
798 1020 M
63 0 V
6101 0 R
-63 0 V
stroke
714 1020 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.65)]
] -46.7 MRshow
grestore
1.000 UL
LTb
798 1620 M
63 0 V
6101 0 R
-63 0 V
stroke
714 1620 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.7)]
] -46.7 MRshow
grestore
1.000 UL
LTb
798 2220 M
63 0 V
6101 0 R
-63 0 V
stroke
714 2220 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.75)]
] -46.7 MRshow
grestore
1.000 UL
LTb
798 2820 M
63 0 V
6101 0 R
-63 0 V
stroke
714 2820 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MRshow
grestore
1.000 UL
LTb
798 3420 M
63 0 V
6101 0 R
-63 0 V
stroke
714 3420 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.85)]
] -46.7 MRshow
grestore
1.000 UL
LTb
798 4020 M
63 0 V
6101 0 R
-63 0 V
stroke
714 4020 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.9)]
] -46.7 MRshow
grestore
1.000 UL
LTb
798 4620 M
63 0 V
6101 0 R
-63 0 V
stroke
714 4620 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.95)]
] -46.7 MRshow
grestore
1.000 UL
LTb
798 420 M
0 63 V
0 4137 R
0 -63 V
stroke
798 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (10-May)]
] -46.7 MCshow
grestore
1.000 UL
LTb
886 420 M
0 31 V
0 4169 R
0 -31 V
974 420 M
0 31 V
0 4169 R
0 -31 V
1062 420 M
0 31 V
0 4169 R
0 -31 V
1150 420 M
0 31 V
0 4169 R
0 -31 V
1238 420 M
0 31 V
0 4169 R
0 -31 V
1326 420 M
0 31 V
0 4169 R
0 -31 V
1414 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1414 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (17-May)]
] -46.7 MCshow
grestore
1.000 UL
LTb
1502 420 M
0 31 V
0 4169 R
0 -31 V
1591 420 M
0 31 V
0 4169 R
0 -31 V
1679 420 M
0 31 V
0 4169 R
0 -31 V
1767 420 M
0 31 V
0 4169 R
0 -31 V
1855 420 M
0 31 V
0 4169 R
0 -31 V
1943 420 M
0 31 V
0 4169 R
0 -31 V
2031 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2031 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (24-May)]
] -46.7 MCshow
grestore
1.000 UL
LTb
2119 420 M
0 31 V
0 4169 R
0 -31 V
2207 420 M
0 31 V
0 4169 R
0 -31 V
2295 420 M
0 31 V
0 4169 R
0 -31 V
2383 420 M
0 31 V
0 4169 R
0 -31 V
2471 420 M
0 31 V
0 4169 R
0 -31 V
2559 420 M
0 31 V
0 4169 R
0 -31 V
2647 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2647 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (31-May)]
] -46.7 MCshow
grestore
1.000 UL
LTb
2735 420 M
0 31 V
0 4169 R
0 -31 V
2823 420 M
0 31 V
0 4169 R
0 -31 V
2911 420 M
0 31 V
0 4169 R
0 -31 V
2999 420 M
0 31 V
0 4169 R
0 -31 V
3087 420 M
0 31 V
0 4169 R
0 -31 V
3176 420 M
0 31 V
0 4169 R
0 -31 V
3264 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3264 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (07-Jun)]
] -46.7 MCshow
grestore
1.000 UL
LTb
3352 420 M
0 31 V
0 4169 R
0 -31 V
3440 420 M
0 31 V
0 4169 R
0 -31 V
3528 420 M
0 31 V
0 4169 R
0 -31 V
3616 420 M
0 31 V
0 4169 R
0 -31 V
3704 420 M
0 31 V
0 4169 R
0 -31 V
3792 420 M
0 31 V
0 4169 R
0 -31 V
3880 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3880 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (14-Jun)]
] -46.7 MCshow
grestore
1.000 UL
LTb
3968 420 M
0 31 V
0 4169 R
0 -31 V
4056 420 M
0 31 V
0 4169 R
0 -31 V
4144 420 M
0 31 V
0 4169 R
0 -31 V
4232 420 M
0 31 V
0 4169 R
0 -31 V
4320 420 M
0 31 V
0 4169 R
0 -31 V
4408 420 M
0 31 V
0 4169 R
0 -31 V
4496 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4496 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (21-Jun)]
] -46.7 MCshow
grestore
1.000 UL
LTb
4584 420 M
0 31 V
0 4169 R
0 -31 V
4673 420 M
0 31 V
0 4169 R
0 -31 V
4761 420 M
0 31 V
0 4169 R
0 -31 V
4849 420 M
0 31 V
0 4169 R
0 -31 V
4937 420 M
0 31 V
0 4169 R
0 -31 V
5025 420 M
0 31 V
0 4169 R
0 -31 V
5113 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5113 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (28-Jun)]
] -46.7 MCshow
grestore
1.000 UL
LTb
5201 420 M
0 31 V
0 4169 R
0 -31 V
5289 420 M
0 31 V
0 4169 R
0 -31 V
5377 420 M
0 31 V
0 4169 R
0 -31 V
5465 420 M
0 31 V
0 4169 R
0 -31 V
5553 420 M
0 31 V
0 4169 R
0 -31 V
5641 420 M
0 31 V
0 4169 R
0 -31 V
5729 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5729 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (05-Jul)]
] -46.7 MCshow
grestore
1.000 UL
LTb
5817 420 M
0 31 V
0 4169 R
0 -31 V
5905 420 M
0 31 V
0 4169 R
0 -31 V
5993 420 M
0 31 V
0 4169 R
0 -31 V
6081 420 M
0 31 V
0 4169 R
0 -31 V
6169 420 M
0 31 V
0 4169 R
0 -31 V
6258 420 M
0 31 V
0 4169 R
0 -31 V
6346 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6346 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (12-Jul)]
] -46.7 MCshow
grestore
1.000 UL
LTb
6434 420 M
0 31 V
0 4169 R
0 -31 V
6522 420 M
0 31 V
0 4169 R
0 -31 V
6610 420 M
0 31 V
0 4169 R
0 -31 V
6698 420 M
0 31 V
0 4169 R
0 -31 V
6786 420 M
0 31 V
0 4169 R
0 -31 V
6874 420 M
0 31 V
0 4169 R
0 -31 V
6962 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6962 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (19-Jul)]
] -46.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
798 420 M
6164 0 V
0 4200 V
-6164 0 V
798 420 L
LTb
140 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Q)]
[(Helvetica) 112.0 -42.0 true true 0 (XT)]
] -32.7 MCshow
grestore
grestore
LTb
3880 70 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (Time)]
] -46.7 MCshow
grestore
LTb
3880 4830 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (Comparison of effect of scheduling horizion on Q)]
[(Helvetica) 112.0 -42.0 true true 0 (XT)]
[(Helvetica) 140.0 0.0 true true 0 ( with time)]
] -32.7 MCshow
grestore
1.000 UP
1.000 UL
LT0
LTb
6311 973 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (QLAS H=0.5)]
] -46.7 MRshow
grestore
LT0
6395 973 M
399 0 V
1392 3911 M
88 95 V
89 -216 V
88 -858 V
88 -684 V
1833 925 L
88 1383 V
88 1031 V
88 650 V
88 -492 V
88 -888 V
88 1351 V
88 -27 V
88 52 V
88 -12 V
88 -93 V
89 67 V
88 4 V
88 -3 V
88 -4 V
88 89 V
88 -5 V
88 1 V
88 -8 V
88 -22 V
88 25 V
88 -399 V
88 292 V
88 98 V
88 -292 V
88 98 V
88 87 V
88 30 V
88 -1058 V
89 269 V
88 167 V
87 -45 V
89 -193 V
88 181 V
88 676 V
88 -45 V
88 -76 V
88 74 V
88 -25 V
88 54 V
88 79 V
88 11 V
88 -31 V
88 50 V
88 -93 V
89 18 V
87 11 V
89 0 V
87 23 V
89 0 V
88 17 V
88 4 V
88 16 V
88 0 V
88 15 V
1.000 UL
LT1
LTb
6311 833 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (QLAS H=1.0)]
] -46.7 MRshow
grestore
LT1
6395 833 M
399 0 V
1392 4016 M
88 -12 V
89 -99 V
88 -1842 V
88 -588 V
88 -23 V
88 713 V
88 1288 V
88 509 V
88 -71 V
88 -807 V
88 460 V
88 406 V
88 -53 V
88 62 V
89 3 V
88 -25 V
88 12 V
88 4 V
88 -4 V
88 77 V
88 -16 V
88 17 V
88 -6 V
88 3 V
88 3 V
88 -391 V
88 290 V
88 -207 V
88 298 V
88 -97 V
88 7 V
88 -285 V
88 -224 V
88 -216 V
88 86 V
89 439 V
88 -565 V
88 26 V
88 22 V
88 586 V
88 84 V
88 39 V
88 -10 V
88 -34 V
88 88 V
88 -47 V
88 99 V
88 12 V
88 -107 V
88 12 V
88 32 V
89 -7 V
87 25 V
89 8 V
88 9 V
88 15 V
88 -24 V
88 31 V
88 -1 V
1.000 UL
LT2
LTb
6311 693 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (QLAS H=2.0)]
] -46.7 MRshow
grestore
LT2
6395 693 M
399 0 V
1392 4018 M
88 -10 V
89 -104 V
88 -1069 V
88 -859 V
88 -713 V
88 1177 V
88 781 V
88 780 V
88 -245 V
88 -972 V
88 1190 V
88 0 V
88 -36 V
88 29 V
89 -5 V
87 -42 V
89 32 V
88 -22 V
88 16 V
88 85 V
88 -24 V
88 2 V
88 10 V
88 4 V
88 -7 V
88 -95 V
88 -1 V
88 81 V
88 -279 V
88 -86 V
88 294 V
88 5 V
88 -370 V
89 -301 V
87 331 V
89 27 V
88 -467 V
88 92 V
88 -63 V
88 616 V
88 135 V
88 -56 V
88 24 V
88 82 V
88 -52 V
88 64 V
88 11 V
88 14 V
88 -79 V
88 -7 V
89 13 V
87 13 V
88 12 V
89 1 V
88 23 V
88 15 V
88 -386 V
88 401 V
88 9 V
1.000 UL
LT3
LTb
6311 553 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (BDS \(H=0\) )]
] -46.7 MRshow
grestore
LT3
6395 553 M
399 0 V
1392 4002 M
88 2 V
89 -12 V
88 -1557 V
88 -785 V
88 259 V
88 482 V
88 907 V
88 721 V
88 -86 V
88 -9 V
88 32 V
88 18 V
88 -14 V
88 17 V
88 -26 V
89 -18 V
88 10 V
88 9 V
88 -6 V
88 58 V
88 20 V
88 3 V
88 -4 V
88 -27 V
88 13 V
88 -96 V
88 7 V
88 83 V
88 1 V
88 -81 V
88 9 V
88 5 V
89 -185 V
88 -105 V
88 290 V
88 -197 V
88 -240 V
88 421 V
88 -204 V
88 165 V
88 77 V
88 -20 V
88 21 V
88 34 V
88 -14 V
88 0 V
88 33 V
88 -6 V
88 -66 V
89 13 V
88 -17 V
88 23 V
88 -7 V
88 32 V
88 8 V
88 22 V
88 2 V
88 17 V
88 -12 V
1.000 UL
LTb
798 420 M
6164 0 V
0 4200 V
-6164 0 V
798 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
