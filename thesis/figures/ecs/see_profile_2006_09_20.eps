%!PS-Adobe-2.0
%%Title: profiles/see_profile_2006_09_20.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Aug 20 12:00:52 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
546 420 M
63 0 V
6353 0 R
-63 0 V
stroke
462 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
546 1260 M
63 0 V
6353 0 R
-63 0 V
stroke
462 1260 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
546 2100 M
63 0 V
6353 0 R
-63 0 V
stroke
462 2100 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MRshow
1.000 UL
LTb
546 2940 M
63 0 V
6353 0 R
-63 0 V
stroke
462 2940 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MRshow
1.000 UL
LTb
546 3780 M
63 0 V
6353 0 R
-63 0 V
stroke
462 3780 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MRshow
1.000 UL
LTb
546 4620 M
63 0 V
6353 0 R
-63 0 V
stroke
462 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MRshow
1.000 UL
LTb
546 420 M
0 63 V
0 4137 R
0 -63 V
stroke
546 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (20h)]
] -46.7 MCshow
1.000 UL
LTb
838 420 M
0 31 V
0 4169 R
0 -31 V
1129 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1129 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (21h)]
] -46.7 MCshow
1.000 UL
LTb
1421 420 M
0 31 V
0 4169 R
0 -31 V
1713 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1713 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (22h)]
] -46.7 MCshow
1.000 UL
LTb
2004 420 M
0 31 V
0 4169 R
0 -31 V
2296 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2296 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (23h)]
] -46.7 MCshow
1.000 UL
LTb
2587 420 M
0 31 V
0 4169 R
0 -31 V
2879 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2879 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (00h)]
] -46.7 MCshow
1.000 UL
LTb
3171 420 M
0 31 V
0 4169 R
0 -31 V
3462 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3462 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (01h)]
] -46.7 MCshow
1.000 UL
LTb
3754 420 M
0 31 V
0 4169 R
0 -31 V
4046 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4046 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (02h)]
] -46.7 MCshow
1.000 UL
LTb
4337 420 M
0 31 V
0 4169 R
0 -31 V
4629 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4629 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (03h)]
] -46.7 MCshow
1.000 UL
LTb
4921 420 M
0 31 V
0 4169 R
0 -31 V
5212 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5212 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (04h)]
] -46.7 MCshow
1.000 UL
LTb
5504 420 M
0 31 V
0 4169 R
0 -31 V
5795 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5795 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (05h)]
] -46.7 MCshow
1.000 UL
LTb
6087 420 M
0 31 V
0 4169 R
0 -31 V
6379 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6379 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (06h)]
] -46.7 MCshow
1.000 UL
LTb
6670 420 M
0 31 V
0 4169 R
0 -31 V
6962 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6962 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (07h)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
546 420 M
6416 0 V
0 4200 V
-6416 0 V
546 420 L
LTb
140 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Seeing [arcsec])]
] -46.7 MCshow
grestore
LTb
3754 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Time [UT])]
] -46.7 MCshow
LTb
3754 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Seeing LT: \(Night starting: 2006-09-20 \))]
] -46.7 MCshow
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
6311 4487 M
[ [(Helvetica) 140.0 0.0 true true 0 (Raw)]
] -46.7 MRshow
LT0
585 1371 BoxF
603 1392 BoxF
634 1178 BoxF
666 1203 BoxF
701 1257 BoxF
733 1195 BoxF
777 1344 BoxF
796 1179 BoxF
818 1148 BoxF
837 1193 BoxF
868 1270 BoxF
1079 1133 BoxF
1097 1187 BoxF
1128 1252 BoxF
1140 1339 BoxF
1156 1252 BoxF
1168 1373 BoxF
1193 1484 BoxF
1211 1360 BoxF
1246 1189 BoxF
1250 1396 BoxF
1256 1300 BoxF
1261 1386 BoxF
1269 1459 BoxF
1273 1330 BoxF
1280 1177 BoxF
1284 1140 BoxF
1291 1395 BoxF
1303 1394 BoxF
1318 1376 BoxF
1323 1247 BoxF
1331 1190 BoxF
1336 1196 BoxF
1362 1752 BoxF
1461 1674 BoxF
1561 1630 BoxF
1668 1324 BoxF
1719 1312 BoxF
1769 1294 BoxF
1828 1387 BoxF
1879 1379 BoxF
1930 1436 BoxF
1989 1456 BoxF
2040 1463 BoxF
2090 1506 BoxF
2149 1777 BoxF
2249 1621 BoxF
3142 1010 BoxF
3146 1261 BoxF
3154 1072 BoxF
3158 1095 BoxF
3165 1171 BoxF
3168 1147 BoxF
3176 1045 BoxF
3180 1062 BoxF
3189 1041 BoxF
3192 1161 BoxF
3200 1372 BoxF
3212 1376 BoxF
3227 1087 BoxF
3232 1154 BoxF
3260 1213 BoxF
3276 1270 BoxF
3323 1418 BoxF
3380 1395 BoxF
3438 1293 BoxF
3511 1448 BoxF
3590 1118 BoxF
3627 1131 BoxF
3664 1105 BoxF
3702 1154 BoxF
3739 1119 BoxF
3776 1115 BoxF
3814 1242 BoxF
3851 1150 BoxF
3889 1116 BoxF
3958 1385 BoxF
3965 1307 BoxF
3976 1187 BoxF
3984 1151 BoxF
4025 1589 BoxF
4030 1477 BoxF
4038 1460 BoxF
4042 1447 BoxF
4049 1514 BoxF
4052 1568 BoxF
4059 1466 BoxF
4064 1426 BoxF
4073 1459 BoxF
4076 1442 BoxF
4084 1560 BoxF
4096 1573 BoxF
4111 1563 BoxF
4116 1364 BoxF
4140 1181 BoxF
4145 1231 BoxF
4153 1178 BoxF
4156 1106 BoxF
4163 1129 BoxF
4167 1183 BoxF
4174 1129 BoxF
4179 1105 BoxF
4188 1029 BoxF
4191 1040 BoxF
4199 1348 BoxF
4211 1436 BoxF
4226 1150 BoxF
4231 1191 BoxF
4263 1223 BoxF
4266 1401 BoxF
4269 1277 BoxF
4273 1329 BoxF
4276 1325 BoxF
4279 1315 BoxF
4282 1344 BoxF
4285 1293 BoxF
4288 1279 BoxF
4291 1161 BoxF
4294 1234 BoxF
4297 1191 BoxF
4311 1151 BoxF
4314 1097 BoxF
4317 1083 BoxF
4320 1114 BoxF
4323 1191 BoxF
4326 1183 BoxF
4329 1106 BoxF
4332 1203 BoxF
4335 1133 BoxF
4339 1206 BoxF
4342 1140 BoxF
4345 1155 BoxF
4368 1178 BoxF
4371 1113 BoxF
4374 1266 BoxF
4377 1141 BoxF
4380 1219 BoxF
4383 1216 BoxF
4386 1065 BoxF
4389 1120 BoxF
4393 1260 BoxF
4396 1263 BoxF
4399 1132 BoxF
4402 1130 BoxF
4416 1054 BoxF
4419 1035 BoxF
4422 1036 BoxF
4425 994 BoxF
4428 973 BoxF
4431 1024 BoxF
4434 1043 BoxF
4437 1016 BoxF
4440 1033 BoxF
4443 1083 BoxF
4446 991 BoxF
4449 1014 BoxF
4491 1091 BoxF
4498 1049 BoxF
4505 1259 BoxF
4517 1045 BoxF
4524 1039 BoxF
4531 1074 BoxF
4556 1335 BoxF
4566 1421 BoxF
4598 1299 BoxF
4632 1343 BoxF
4670 1148 BoxF
4704 1093 BoxF
4742 1393 BoxF
4787 2285 BoxF
4822 1463 BoxF
4870 1798 BoxF
4884 1261 BoxF
4918 1080 BoxF
4971 1431 BoxF
5025 1437 BoxF
5079 1462 BoxF
5132 1344 BoxF
5185 1322 BoxF
5239 1416 BoxF
5293 1405 BoxF
5346 1357 BoxF
5421 1153 BoxF
5428 1121 BoxF
5439 1164 BoxF
5446 1140 BoxF
5469 1267 BoxF
5472 1232 BoxF
5475 1272 BoxF
5478 1225 BoxF
5481 1220 BoxF
5484 1237 BoxF
5487 1200 BoxF
5490 1165 BoxF
5493 1291 BoxF
5497 1265 BoxF
5499 1371 BoxF
5503 1250 BoxF
5516 1095 BoxF
5520 1212 BoxF
5522 1162 BoxF
5526 1202 BoxF
5529 1219 BoxF
5532 1235 BoxF
5535 1124 BoxF
5538 1143 BoxF
5541 1129 BoxF
5544 1249 BoxF
5547 1199 BoxF
5550 1146 BoxF
5574 1367 BoxF
5577 1181 BoxF
5580 1092 BoxF
5583 1300 BoxF
5586 1406 BoxF
5589 1051 BoxF
5592 1352 BoxF
5595 1179 BoxF
5598 1097 BoxF
5602 1218 BoxF
5604 1063 BoxF
5608 1261 BoxF
5621 1269 BoxF
5625 1252 BoxF
5628 1215 BoxF
5631 1213 BoxF
5634 1492 BoxF
5637 1300 BoxF
5640 1210 BoxF
5643 1173 BoxF
5646 1531 BoxF
5649 1256 BoxF
5652 1240 BoxF
5655 1131 BoxF
5684 1411 BoxF
5700 1384 BoxF
5734 1857 BoxF
5739 1570 BoxF
5747 1618 BoxF
5751 1419 BoxF
5758 1494 BoxF
5762 1540 BoxF
5769 1794 BoxF
5773 1727 BoxF
5782 1758 BoxF
5786 1455 BoxF
5794 1606 BoxF
5805 1600 BoxF
5821 1782 BoxF
5825 2278 BoxF
5857 1056 BoxF
5894 1086 BoxF
5932 1054 BoxF
5969 1051 BoxF
6006 1093 BoxF
6044 1047 BoxF
6081 1058 BoxF
6119 1065 BoxF
6156 940 BoxF
6231 1737 BoxF
6234 1411 BoxF
6241 2072 BoxF
6245 2468 BoxF
6262 1652 BoxF
6266 1525 BoxF
6273 2082 BoxF
6276 1895 BoxF
6293 1520 BoxF
6297 1347 BoxF
6304 1748 BoxF
6307 1460 BoxF
6324 1636 BoxF
6328 1434 BoxF
6334 1692 BoxF
6338 1377 BoxF
6355 2093 BoxF
6359 1508 BoxF
6365 1852 BoxF
6369 1629 BoxF
6386 1661 BoxF
6390 1462 BoxF
6396 1675 BoxF
6400 1466 BoxF
6417 1379 BoxF
6421 1383 BoxF
6428 1314 BoxF
6432 1393 BoxF
6594 4487 BoxF
1.000 UP
1.000 UL
LT2
LTb
6311 4347 M
[ [(Helvetica) 140.0 0.0 true true 0 (Corrected)]
] -46.7 MRshow
LT2
585 1049 BoxF
603 1061 BoxF
634 921 BoxF
666 936 BoxF
701 995 BoxF
733 950 BoxF
777 1002 BoxF
796 897 BoxF
818 897 BoxF
837 924 BoxF
868 965 BoxF
1079 862 BoxF
1097 894 BoxF
1128 929 BoxF
1140 981 BoxF
1156 950 BoxF
1168 1025 BoxF
1193 1057 BoxF
1211 981 BoxF
1246 1057 BoxF
1250 1227 BoxF
1256 1092 BoxF
1261 1158 BoxF
1269 1318 BoxF
1273 1207 BoxF
1280 1094 BoxF
1284 1061 BoxF
1291 1140 BoxF
1303 1139 BoxF
1318 1171 BoxF
1323 1073 BoxF
1331 1045 BoxF
1336 1050 BoxF
1362 1494 BoxF
1461 1441 BoxF
1561 1417 BoxF
1668 1221 BoxF
1719 1215 BoxF
1769 1199 BoxF
1828 1333 BoxF
1879 1331 BoxF
1930 1384 BoxF
1989 1453 BoxF
2040 1467 BoxF
2090 1510 BoxF
2149 1822 BoxF
2249 1668 BoxF
3142 926 BoxF
3146 1141 BoxF
3154 1025 BoxF
3158 1046 BoxF
3165 1149 BoxF
3168 1125 BoxF
3176 986 BoxF
3180 1002 BoxF
3189 1040 BoxF
3192 1160 BoxF
3200 1208 BoxF
3212 1211 BoxF
3227 1008 BoxF
3232 1067 BoxF
3260 1049 BoxF
3276 1130 BoxF
3323 1379 BoxF
3380 1284 BoxF
3438 1234 BoxF
3511 1405 BoxF
3590 1116 BoxF
3627 1133 BoxF
3664 1107 BoxF
3702 1156 BoxF
3739 1121 BoxF
3776 1117 BoxF
3814 1245 BoxF
3851 1153 BoxF
3889 1119 BoxF
3958 1219 BoxF
3965 1155 BoxF
3976 1089 BoxF
3984 1057 BoxF
4025 1357 BoxF
4030 1267 BoxF
4038 1327 BoxF
4042 1316 BoxF
4049 1417 BoxF
4052 1466 BoxF
4059 1310 BoxF
4064 1277 BoxF
4073 1399 BoxF
4076 1383 BoxF
4084 1311 BoxF
4096 1321 BoxF
4111 1376 BoxF
4116 1209 BoxF
4140 1049 BoxF
4145 1090 BoxF
4153 1098 BoxF
4156 1034 BoxF
4163 1082 BoxF
4167 1133 BoxF
4174 1039 BoxF
4179 1018 BoxF
4188 1003 BoxF
4191 1014 BoxF
4199 1156 BoxF
4211 1226 BoxF
4226 1037 BoxF
4231 1068 BoxF
4263 1065 BoxF
4266 1213 BoxF
4269 1113 BoxF
4273 1154 BoxF
4276 1151 BoxF
4279 1143 BoxF
4282 1166 BoxF
4285 1125 BoxF
4288 1114 BoxF
4291 1019 BoxF
4294 1077 BoxF
4297 1043 BoxF
4311 1045 BoxF
4314 999 BoxF
4317 987 BoxF
4320 1014 BoxF
4323 1079 BoxF
4326 1073 BoxF
4329 1006 BoxF
4332 1090 BoxF
4335 1029 BoxF
4339 1092 BoxF
4342 1035 BoxF
4345 1049 BoxF
4368 1018 BoxF
4371 970 BoxF
4374 1091 BoxF
4377 992 BoxF
4380 1054 BoxF
4383 1051 BoxF
4386 932 BoxF
4389 975 BoxF
4393 1086 BoxF
4396 1088 BoxF
4399 985 BoxF
4402 983 BoxF
4416 952 BoxF
4419 936 BoxF
4422 937 BoxF
4425 902 BoxF
4428 884 BoxF
4431 927 BoxF
4434 943 BoxF
4437 920 BoxF
4440 937 BoxF
4443 979 BoxF
4446 902 BoxF
4449 921 BoxF
4491 1046 BoxF
4498 1006 BoxF
4505 1202 BoxF
4517 972 BoxF
4524 966 BoxF
4531 997 BoxF
4556 1283 BoxF
4566 1283 BoxF
4598 1248 BoxF
4632 1233 BoxF
4670 1064 BoxF
4704 1015 BoxF
4742 1334 BoxF
4787 2201 BoxF
4822 1410 BoxF
4870 1157 BoxF
4884 915 BoxF
4918 945 BoxF
4971 1214 BoxF
5025 1209 BoxF
5079 1219 BoxF
5132 1120 BoxF
5185 1093 BoxF
5239 1155 BoxF
5293 1136 BoxF
5346 1088 BoxF
5421 1052 BoxF
5428 1024 BoxF
5439 1096 BoxF
5446 1075 BoxF
5469 1162 BoxF
5472 1132 BoxF
5475 1167 BoxF
5478 1126 BoxF
5481 1121 BoxF
5484 1136 BoxF
5487 1104 BoxF
5490 1073 BoxF
5493 1183 BoxF
5497 1161 BoxF
5499 1253 BoxF
5503 1148 BoxF
5516 1043 BoxF
5520 1151 BoxF
5522 1105 BoxF
5526 1142 BoxF
5529 1158 BoxF
5532 1172 BoxF
5535 1070 BoxF
5538 1088 BoxF
5541 1074 BoxF
5544 1185 BoxF
5547 1139 BoxF
5550 1090 BoxF
5574 1254 BoxF
5577 1091 BoxF
5580 1013 BoxF
5583 1195 BoxF
5586 1289 BoxF
5589 976 BoxF
5592 1241 BoxF
5595 1089 BoxF
5598 1016 BoxF
5602 1123 BoxF
5604 987 BoxF
5608 1161 BoxF
5621 1209 BoxF
5625 1193 BoxF
5628 1158 BoxF
5631 1156 BoxF
5634 1415 BoxF
5637 1237 BoxF
5640 1153 BoxF
5643 1119 BoxF
5646 1451 BoxF
5649 1196 BoxF
5652 1181 BoxF
5655 1080 BoxF
5684 1202 BoxF
5700 1221 BoxF
5734 1619 BoxF
5739 1380 BoxF
5747 1502 BoxF
5751 1322 BoxF
5758 1434 BoxF
5762 1478 BoxF
5769 1632 BoxF
5773 1574 BoxF
5782 1721 BoxF
5786 1426 BoxF
5794 1371 BoxF
5805 1366 BoxF
5821 1582 BoxF
5825 2005 BoxF
5857 972 BoxF
5894 994 BoxF
5932 963 BoxF
5969 956 BoxF
6006 987 BoxF
6044 945 BoxF
6081 951 BoxF
6119 952 BoxF
6156 845 BoxF
6231 1687 BoxF
6234 1374 BoxF
6241 1898 BoxF
6245 2252 BoxF
6262 1605 BoxF
6266 1483 BoxF
6273 1907 BoxF
6276 1739 BoxF
6293 1479 BoxF
6297 1312 BoxF
6304 1607 BoxF
6307 1350 BoxF
6324 1589 BoxF
6328 1396 BoxF
6334 1552 BoxF
6338 1272 BoxF
6355 2021 BoxF
6359 1461 BoxF
6365 1694 BoxF
6369 1496 BoxF
6386 1607 BoxF
6390 1417 BoxF
6396 1536 BoxF
6400 1351 BoxF
6417 1334 BoxF
6421 1337 BoxF
6428 1211 BoxF
6432 1282 BoxF
6594 4347 BoxF
1.000 UL
LTb
546 420 M
6416 0 V
0 4200 V
-6416 0 V
546 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
