%!PS-Adobe-2.0
%%Title: profiles/see_profile_2006_09_09.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Aug 20 12:00:26 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
546 420 M
63 0 V
6353 0 R
-63 0 V
stroke
462 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
546 1260 M
63 0 V
6353 0 R
-63 0 V
stroke
462 1260 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
546 2100 M
63 0 V
6353 0 R
-63 0 V
stroke
462 2100 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MRshow
1.000 UL
LTb
546 2940 M
63 0 V
6353 0 R
-63 0 V
stroke
462 2940 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MRshow
1.000 UL
LTb
546 3780 M
63 0 V
6353 0 R
-63 0 V
stroke
462 3780 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MRshow
1.000 UL
LTb
546 4620 M
63 0 V
6353 0 R
-63 0 V
stroke
462 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MRshow
1.000 UL
LTb
546 420 M
0 63 V
0 4137 R
0 -63 V
stroke
546 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (20h)]
] -46.7 MCshow
1.000 UL
LTb
947 420 M
0 31 V
0 4169 R
0 -31 V
1348 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1348 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (21h)]
] -46.7 MCshow
1.000 UL
LTb
1749 420 M
0 31 V
0 4169 R
0 -31 V
2150 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2150 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (22h)]
] -46.7 MCshow
1.000 UL
LTb
2551 420 M
0 31 V
0 4169 R
0 -31 V
2952 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2952 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (23h)]
] -46.7 MCshow
1.000 UL
LTb
3353 420 M
0 31 V
0 4169 R
0 -31 V
3754 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3754 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (00h)]
] -46.7 MCshow
1.000 UL
LTb
4155 420 M
0 31 V
0 4169 R
0 -31 V
4556 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4556 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (01h)]
] -46.7 MCshow
1.000 UL
LTb
4957 420 M
0 31 V
0 4169 R
0 -31 V
5358 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5358 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (02h)]
] -46.7 MCshow
1.000 UL
LTb
5759 420 M
0 31 V
0 4169 R
0 -31 V
6160 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6160 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (03h)]
] -46.7 MCshow
1.000 UL
LTb
6561 420 M
0 31 V
0 4169 R
0 -31 V
6962 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6962 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (04h)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
546 420 M
6416 0 V
0 4200 V
-6416 0 V
546 420 L
LTb
140 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Seeing [arcsec])]
] -46.7 MCshow
grestore
LTb
3754 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Time [UT])]
] -46.7 MCshow
LTb
3754 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Seeing LT: \(Night starting: 2006-09-09 \))]
] -46.7 MCshow
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
6311 4487 M
[ [(Helvetica) 140.0 0.0 true true 0 (Raw)]
] -46.7 MRshow
LT0
821 1368 BoxF
846 1196 BoxF
889 1207 BoxF
914 1261 BoxF
956 1124 BoxF
999 1114 BoxF
1048 1046 BoxF
1091 1163 BoxF
1152 1158 BoxF
1168 1135 BoxF
1190 1153 BoxF
1206 1095 BoxF
1240 1185 BoxF
1266 1128 BoxF
1309 1122 BoxF
1334 1116 BoxF
1376 1145 BoxF
1399 1111 BoxF
1428 1170 BoxF
1451 1249 BoxF
1492 1198 BoxF
1517 1185 BoxF
1548 1183 BoxF
1573 1173 BoxF
1617 1411 BoxF
1642 1216 BoxF
1685 1115 BoxF
1710 1254 BoxF
1758 1133 BoxF
1763 1094 BoxF
1773 1143 BoxF
1779 1105 BoxF
1790 1107 BoxF
1795 1064 BoxF
1805 1051 BoxF
1810 1068 BoxF
1821 1311 BoxF
1837 1230 BoxF
1857 1163 BoxF
1864 1129 BoxF
1875 1128 BoxF
1882 1159 BoxF
1910 1220 BoxF
1935 1162 BoxF
1989 1002 BoxF
1995 1002 BoxF
2035 993 BoxF
2053 916 BoxF
2058 915 BoxF
2085 1337 BoxF
2105 1067 BoxF
2112 1173 BoxF
2148 1211 BoxF
2154 1157 BoxF
2159 1127 BoxF
2165 1148 BoxF
2170 1216 BoxF
2176 1128 BoxF
2181 1171 BoxF
2186 1137 BoxF
2191 1207 BoxF
2197 1231 BoxF
2202 1299 BoxF
2207 1170 BoxF
2212 1195 BoxF
2218 1172 BoxF
2223 1263 BoxF
2228 1125 BoxF
2234 1077 BoxF
2239 1142 BoxF
2244 1207 BoxF
2250 1174 BoxF
2255 1238 BoxF
2260 1126 BoxF
2266 1273 BoxF
2271 1220 BoxF
2277 1255 BoxF
2282 1203 BoxF
2287 1050 BoxF
2293 1280 BoxF
2298 1171 BoxF
2303 1169 BoxF
2308 1154 BoxF
2314 1303 BoxF
2319 1267 BoxF
2325 1424 BoxF
2330 1221 BoxF
2336 1211 BoxF
2341 1132 BoxF
2346 1152 BoxF
2352 1114 BoxF
2357 1193 BoxF
2362 1193 BoxF
2368 1124 BoxF
2373 1196 BoxF
2379 1209 BoxF
2384 1259 BoxF
2389 1246 BoxF
2395 1160 BoxF
2400 1284 BoxF
2405 1260 BoxF
2411 1273 BoxF
2416 1226 BoxF
2421 1155 BoxF
2427 1164 BoxF
2432 1168 BoxF
2437 1212 BoxF
2443 1183 BoxF
2448 1249 BoxF
2453 1211 BoxF
2459 1165 BoxF
2464 1145 BoxF
2469 1254 BoxF
2475 1263 BoxF
2480 1200 BoxF
2486 1203 BoxF
2491 1174 BoxF
2496 1150 BoxF
2501 1226 BoxF
2507 1222 BoxF
2512 1153 BoxF
2518 1181 BoxF
2523 1175 BoxF
2528 1158 BoxF
2534 1086 BoxF
2539 1119 BoxF
2545 1245 BoxF
2550 1216 BoxF
2555 1231 BoxF
2561 1120 BoxF
2566 1206 BoxF
2571 1151 BoxF
2577 1148 BoxF
2582 1128 BoxF
2588 1078 BoxF
2593 1120 BoxF
2598 1144 BoxF
2603 1088 BoxF
2609 1318 BoxF
2614 1140 BoxF
2619 1246 BoxF
2624 1149 BoxF
2630 1170 BoxF
2635 1120 BoxF
2640 1177 BoxF
2646 1134 BoxF
2651 1121 BoxF
2656 1134 BoxF
2662 1174 BoxF
2667 1059 BoxF
2672 1127 BoxF
2678 1252 BoxF
2688 1184 BoxF
2694 1138 BoxF
2699 1195 BoxF
2704 1867 BoxF
2709 1118 BoxF
2715 1188 BoxF
2720 1151 BoxF
2725 1145 BoxF
2731 1226 BoxF
2736 1188 BoxF
2741 1141 BoxF
2747 1210 BoxF
2752 1180 BoxF
2757 1195 BoxF
2763 1202 BoxF
2768 1215 BoxF
2773 1196 BoxF
2779 1197 BoxF
2784 1178 BoxF
2789 1170 BoxF
2795 1111 BoxF
2800 1148 BoxF
2805 1193 BoxF
2811 1117 BoxF
2816 1173 BoxF
2821 1168 BoxF
2827 1119 BoxF
2832 1168 BoxF
2837 1215 BoxF
2842 1152 BoxF
2848 1126 BoxF
2853 1127 BoxF
2859 1170 BoxF
2864 1146 BoxF
2869 1135 BoxF
2875 1131 BoxF
2880 1160 BoxF
2885 1174 BoxF
2891 1147 BoxF
2896 1086 BoxF
2901 1184 BoxF
2907 1197 BoxF
2912 1223 BoxF
2917 1162 BoxF
2922 1175 BoxF
2928 1158 BoxF
2933 1192 BoxF
2939 1100 BoxF
2944 1089 BoxF
2949 1344 BoxF
2955 1111 BoxF
2960 1286 BoxF
2966 1247 BoxF
2971 1096 BoxF
2976 1295 BoxF
2982 1134 BoxF
2987 1246 BoxF
2992 1092 BoxF
2998 1120 BoxF
3003 1161 BoxF
3009 1082 BoxF
3014 1133 BoxF
3019 1159 BoxF
3025 1120 BoxF
3030 1106 BoxF
3035 1111 BoxF
3040 1101 BoxF
3046 1037 BoxF
3051 1224 BoxF
3056 1190 BoxF
3062 1287 BoxF
3067 1180 BoxF
3073 1160 BoxF
3078 1107 BoxF
3083 1208 BoxF
3089 1300 BoxF
3094 1227 BoxF
3099 1237 BoxF
3105 1302 BoxF
3276 898 BoxF
3281 963 BoxF
3323 840 BoxF
3328 1039 BoxF
3376 1289 BoxF
3400 974 BoxF
3431 1069 BoxF
3595 1054 BoxF
3604 1604 BoxF
3813 1104 BoxF
3819 1136 BoxF
3824 1102 BoxF
3829 1091 BoxF
3835 1153 BoxF
3878 1023 BoxF
3885 1106 BoxF
3896 1028 BoxF
3901 1030 BoxF
3911 1008 BoxF
3916 1013 BoxF
3932 1043 BoxF
3948 933 BoxF
3959 1230 BoxF
3975 1191 BoxF
3995 1106 BoxF
4002 1047 BoxF
4034 1091 BoxF
4039 1097 BoxF
4049 1423 BoxF
4055 1416 BoxF
4067 1048 BoxF
4072 1080 BoxF
4134 1607 BoxF
4141 1410 BoxF
4152 1155 BoxF
4159 1420 BoxF
4206 4494 BoxF
4564 961 BoxF
4615 966 BoxF
4666 945 BoxF
4718 924 BoxF
4769 931 BoxF
4821 1070 BoxF
4873 1211 BoxF
4924 1756 BoxF
5920 3110 BoxF
5972 3576 BoxF
6023 3933 BoxF
6075 3272 BoxF
6126 2286 BoxF
6229 1502 BoxF
6332 1458 BoxF
6594 4487 BoxF
1.000 UP
1.000 UL
LT2
LTb
6311 4347 M
[ [(Helvetica) 140.0 0.0 true true 0 (Corrected)]
] -46.7 MRshow
LT2
821 1059 BoxF
846 941 BoxF
889 940 BoxF
914 976 BoxF
956 893 BoxF
999 884 BoxF
1048 858 BoxF
1091 938 BoxF
1152 909 BoxF
1168 894 BoxF
1190 928 BoxF
1206 886 BoxF
1240 924 BoxF
1266 885 BoxF
1309 874 BoxF
1334 869 BoxF
1376 882 BoxF
1399 859 BoxF
1428 916 BoxF
1451 969 BoxF
1492 907 BoxF
1517 898 BoxF
1548 916 BoxF
1573 909 BoxF
1617 1048 BoxF
1642 923 BoxF
1685 854 BoxF
1710 938 BoxF
1758 997 BoxF
1763 968 BoxF
1773 963 BoxF
1779 934 BoxF
1790 1004 BoxF
1795 967 BoxF
1805 972 BoxF
1810 987 BoxF
1821 1066 BoxF
1837 1010 BoxF
1857 996 BoxF
1864 969 BoxF
1875 984 BoxF
1882 1010 BoxF
1910 907 BoxF
1935 869 BoxF
1989 785 BoxF
1995 784 BoxF
2035 803 BoxF
2053 788 BoxF
2058 787 BoxF
2085 987 BoxF
2105 848 BoxF
2112 920 BoxF
2148 1010 BoxF
2154 967 BoxF
2159 945 BoxF
2165 961 BoxF
2170 1012 BoxF
2176 946 BoxF
2181 976 BoxF
2186 950 BoxF
2191 1002 BoxF
2197 1020 BoxF
2202 1068 BoxF
2207 973 BoxF
2212 992 BoxF
2218 974 BoxF
2223 1039 BoxF
2228 938 BoxF
2234 902 BoxF
2239 950 BoxF
2244 996 BoxF
2250 972 BoxF
2255 1019 BoxF
2260 937 BoxF
2266 1042 BoxF
2271 1003 BoxF
2277 1029 BoxF
2282 991 BoxF
2287 878 BoxF
2293 1045 BoxF
2298 965 BoxF
2303 962 BoxF
2308 952 BoxF
2314 1059 BoxF
2319 1033 BoxF
2325 1144 BoxF
2330 998 BoxF
2336 991 BoxF
2341 932 BoxF
2346 946 BoxF
2352 919 BoxF
2357 975 BoxF
2362 974 BoxF
2368 924 BoxF
2373 976 BoxF
2379 983 BoxF
2384 1019 BoxF
2389 1009 BoxF
2395 948 BoxF
2400 1034 BoxF
2405 1017 BoxF
2411 1026 BoxF
2416 991 BoxF
2421 941 BoxF
2427 947 BoxF
2432 950 BoxF
2437 979 BoxF
2443 959 BoxF
2448 1005 BoxF
2453 976 BoxF
2459 944 BoxF
2464 930 BoxF
2469 1005 BoxF
2475 1011 BoxF
2480 967 BoxF
2486 967 BoxF
2491 947 BoxF
2496 930 BoxF
2501 981 BoxF
2507 979 BoxF
2512 931 BoxF
2518 948 BoxF
2523 944 BoxF
2528 932 BoxF
2534 881 BoxF
2539 904 BoxF
2545 991 BoxF
2550 969 BoxF
2555 979 BoxF
2561 903 BoxF
2566 960 BoxF
2571 922 BoxF
2577 920 BoxF
2582 905 BoxF
2588 871 BoxF
2593 898 BoxF
2598 914 BoxF
2603 876 BoxF
2609 1031 BoxF
2614 910 BoxF
2619 982 BoxF
2624 915 BoxF
2630 928 BoxF
2635 895 BoxF
2640 932 BoxF
2646 903 BoxF
2651 892 BoxF
2656 901 BoxF
2662 928 BoxF
2667 849 BoxF
2672 895 BoxF
2678 977 BoxF
2688 932 BoxF
2694 899 BoxF
2699 937 BoxF
2704 1383 BoxF
2709 884 BoxF
2715 931 BoxF
2720 905 BoxF
2725 901 BoxF
2731 953 BoxF
2736 928 BoxF
2741 895 BoxF
2747 941 BoxF
2752 920 BoxF
2757 929 BoxF
2763 934 BoxF
2768 940 BoxF
2773 928 BoxF
2779 927 BoxF
2784 915 BoxF
2789 910 BoxF
2795 870 BoxF
2800 894 BoxF
2805 921 BoxF
2811 872 BoxF
2816 907 BoxF
2821 904 BoxF
2827 871 BoxF
2832 902 BoxF
2837 931 BoxF
2842 891 BoxF
2848 873 BoxF
2853 873 BoxF
2859 899 BoxF
2864 884 BoxF
2869 876 BoxF
2875 873 BoxF
2880 892 BoxF
2885 899 BoxF
2891 881 BoxF
2896 842 BoxF
2901 903 BoxF
2907 911 BoxF
2912 926 BoxF
2917 887 BoxF
2922 894 BoxF
2928 884 BoxF
2933 904 BoxF
2939 846 BoxF
2944 838 BoxF
2949 997 BoxF
2955 850 BoxF
2960 960 BoxF
2966 933 BoxF
2971 840 BoxF
2976 962 BoxF
2982 861 BoxF
2987 930 BoxF
2992 834 BoxF
2998 851 BoxF
3003 875 BoxF
3009 827 BoxF
3014 857 BoxF
3019 872 BoxF
3025 848 BoxF
3030 838 BoxF
3035 841 BoxF
3040 834 BoxF
3046 794 BoxF
3051 907 BoxF
3056 885 BoxF
3062 944 BoxF
3067 878 BoxF
3073 865 BoxF
3078 833 BoxF
3083 892 BoxF
3089 946 BoxF
3094 903 BoxF
3099 907 BoxF
3105 945 BoxF
3276 815 BoxF
3281 870 BoxF
3323 792 BoxF
3328 969 BoxF
3376 1100 BoxF
3400 866 BoxF
3431 937 BoxF
3595 832 BoxF
3604 1057 BoxF
3813 848 BoxF
3819 869 BoxF
3824 846 BoxF
3829 839 BoxF
3835 876 BoxF
3878 921 BoxF
3885 989 BoxF
3896 967 BoxF
3901 969 BoxF
3911 973 BoxF
3916 977 BoxF
3932 967 BoxF
3948 919 BoxF
3959 1073 BoxF
3975 1041 BoxF
3995 1008 BoxF
4002 958 BoxF
4034 945 BoxF
4039 950 BoxF
4049 1145 BoxF
4055 1139 BoxF
4067 931 BoxF
4072 957 BoxF
4134 1294 BoxF
4141 1146 BoxF
4152 974 BoxF
4159 1174 BoxF
4206 4266 BoxF
4564 945 BoxF
4615 949 BoxF
4666 932 BoxF
4718 911 BoxF
4769 921 BoxF
4821 1057 BoxF
4873 1200 BoxF
4924 1737 BoxF
5920 3135 BoxF
5972 3605 BoxF
6023 3945 BoxF
6075 3282 BoxF
6126 2292 BoxF
6229 1505 BoxF
6332 1461 BoxF
6594 4347 BoxF
1.000 UL
LTb
546 420 M
6416 0 V
0 4200 V
-6416 0 V
546 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
