%!PS-Adobe-2.0
%%Title: profiles/see_profile_2006_09_02.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Aug 20 12:00:10 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
546 420 M
63 0 V
6353 0 R
-63 0 V
stroke
462 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
546 1260 M
63 0 V
6353 0 R
-63 0 V
stroke
462 1260 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
546 2100 M
63 0 V
6353 0 R
-63 0 V
stroke
462 2100 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MRshow
1.000 UL
LTb
546 2940 M
63 0 V
6353 0 R
-63 0 V
stroke
462 2940 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MRshow
1.000 UL
LTb
546 3780 M
63 0 V
6353 0 R
-63 0 V
stroke
462 3780 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MRshow
1.000 UL
LTb
546 4620 M
63 0 V
6353 0 R
-63 0 V
stroke
462 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MRshow
1.000 UL
LTb
546 420 M
0 63 V
0 4137 R
0 -63 V
stroke
546 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (20h)]
] -46.7 MCshow
1.000 UL
LTb
867 420 M
0 31 V
0 4169 R
0 -31 V
1188 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1188 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (21h)]
] -46.7 MCshow
1.000 UL
LTb
1508 420 M
0 31 V
0 4169 R
0 -31 V
1829 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1829 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (22h)]
] -46.7 MCshow
1.000 UL
LTb
2150 420 M
0 31 V
0 4169 R
0 -31 V
2471 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2471 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (23h)]
] -46.7 MCshow
1.000 UL
LTb
2792 420 M
0 31 V
0 4169 R
0 -31 V
3112 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3112 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (00h)]
] -46.7 MCshow
1.000 UL
LTb
3433 420 M
0 31 V
0 4169 R
0 -31 V
3754 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3754 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (01h)]
] -46.7 MCshow
1.000 UL
LTb
4075 420 M
0 31 V
0 4169 R
0 -31 V
4396 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4396 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (02h)]
] -46.7 MCshow
1.000 UL
LTb
4716 420 M
0 31 V
0 4169 R
0 -31 V
5037 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5037 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (03h)]
] -46.7 MCshow
1.000 UL
LTb
5358 420 M
0 31 V
0 4169 R
0 -31 V
5679 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5679 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (04h)]
] -46.7 MCshow
1.000 UL
LTb
6000 420 M
0 31 V
0 4169 R
0 -31 V
6320 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6320 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (05h)]
] -46.7 MCshow
1.000 UL
LTb
6641 420 M
0 31 V
0 4169 R
0 -31 V
6962 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6962 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (06h)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
546 420 M
6416 0 V
0 4200 V
-6416 0 V
546 420 L
LTb
140 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Seeing [arcsec])]
] -46.7 MCshow
grestore
LTb
3754 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Time [UT])]
] -46.7 MCshow
LTb
3754 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Seeing LT: \(Night starting: 2006-09-02 \))]
] -46.7 MCshow
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
6311 4487 M
[ [(Helvetica) 140.0 0.0 true true 0 (Raw)]
] -46.7 MRshow
LT0
573 1015 BoxF
577 1129 BoxF
584 1261 BoxF
588 1129 BoxF
597 1317 BoxF
602 1345 BoxF
618 999 BoxF
622 1002 BoxF
629 989 BoxF
634 911 BoxF
641 1126 BoxF
645 1097 BoxF
653 1328 BoxF
658 1294 BoxF
674 991 BoxF
678 1039 BoxF
686 902 BoxF
690 914 BoxF
697 1085 BoxF
701 1170 BoxF
709 1410 BoxF
714 1409 BoxF
730 898 BoxF
734 892 BoxF
741 901 BoxF
745 940 BoxF
753 1123 BoxF
757 1074 BoxF
765 1481 BoxF
770 1402 BoxF
786 917 BoxF
790 913 BoxF
798 917 BoxF
802 974 BoxF
809 1176 BoxF
813 1051 BoxF
821 1405 BoxF
826 1444 BoxF
882 840 BoxF
896 858 BoxF
950 1091 BoxF
966 983 BoxF
981 882 BoxF
1052 1016 BoxF
1064 848 BoxF
1074 757 BoxF
1100 1163 BoxF
1116 973 BoxF
1130 939 BoxF
1163 1090 BoxF
1182 889 BoxF
1196 831 BoxF
1221 896 BoxF
1239 845 BoxF
1253 805 BoxF
1445 1082 BoxF
1449 1087 BoxF
1457 1323 BoxF
1462 1332 BoxF
1471 1055 BoxF
1475 1139 BoxF
1483 1016 BoxF
1486 989 BoxF
1495 1233 BoxF
1508 1273 BoxF
1524 1199 BoxF
1530 1191 BoxF
1539 1140 BoxF
1544 1128 BoxF
1575 1123 BoxF
1591 800 BoxF
1634 1050 BoxF
1649 1119 BoxF
1665 1066 BoxF
1705 1267 BoxF
1715 1067 BoxF
1724 1143 BoxF
1738 1038 BoxF
1745 1058 BoxF
1751 1036 BoxF
1786 1115 BoxF
1802 808 BoxF
1816 909 BoxF
1959 1065 BoxF
1963 1100 BoxF
1971 1417 BoxF
1976 1299 BoxF
1986 1111 BoxF
1989 1114 BoxF
1997 1044 BoxF
2001 1038 BoxF
2010 1343 BoxF
2023 1850 BoxF
2040 1290 BoxF
2045 1246 BoxF
2054 1153 BoxF
2059 1170 BoxF
2092 1163 BoxF
2109 901 BoxF
2124 818 BoxF
2166 1237 BoxF
2180 1285 BoxF
2205 1199 BoxF
2222 819 BoxF
2236 962 BoxF
2271 1408 BoxF
2277 1471 BoxF
2285 1143 BoxF
2289 1154 BoxF
2297 1082 BoxF
2301 1120 BoxF
2309 1315 BoxF
2314 1245 BoxF
2324 1075 BoxF
2328 1088 BoxF
2336 1682 BoxF
2350 1597 BoxF
2366 1404 BoxF
2371 1377 BoxF
2462 1184 BoxF
2488 1259 BoxF
2506 1409 BoxF
2555 1154 BoxF
2573 857 BoxF
2614 1041 BoxF
2655 1076 BoxF
2737 1071 BoxF
2778 1039 BoxF
2819 1043 BoxF
2860 1074 BoxF
2902 1041 BoxF
2943 985 BoxF
3096 858 BoxF
3159 836 BoxF
3222 1365 BoxF
3285 1457 BoxF
3349 1388 BoxF
3413 1437 BoxF
3476 1343 BoxF
3603 940 BoxF
3681 1388 BoxF
3687 1269 BoxF
3696 1060 BoxF
3700 1084 BoxF
3708 1046 BoxF
3711 1034 BoxF
3719 1101 BoxF
3724 1135 BoxF
3734 1114 BoxF
3738 1063 BoxF
3746 1436 BoxF
3759 1511 BoxF
3776 1209 BoxF
3781 1151 BoxF
3806 1145 BoxF
3810 1125 BoxF
3818 1231 BoxF
3823 1345 BoxF
3832 1107 BoxF
3836 1093 BoxF
3844 1046 BoxF
3848 1014 BoxF
3856 1775 BoxF
3869 1718 BoxF
3886 1557 BoxF
3891 1385 BoxF
3900 1373 BoxF
4121 1192 BoxF
4126 1207 BoxF
4133 1506 BoxF
4139 1476 BoxF
4148 1075 BoxF
4151 1013 BoxF
4159 971 BoxF
4612 957 BoxF
4694 1011 BoxF
4735 2667 BoxF
5730 1777 BoxF
5750 1238 BoxF
5771 1704 BoxF
5791 1817 BoxF
5933 1837 BoxF
5953 2154 BoxF
5973 2378 BoxF
5994 2310 BoxF
6014 1646 BoxF
6034 1832 BoxF
6055 1910 BoxF
6075 1581 BoxF
6095 2047 BoxF
6115 2092 BoxF
6135 1495 BoxF
6156 1558 BoxF
6176 1604 BoxF
6196 1410 BoxF
6340 1656 BoxF
6370 2328 BoxF
6375 2198 BoxF
6594 4487 BoxF
1.000 UP
1.000 UL
LT2
LTb
6311 4347 M
[ [(Helvetica) 140.0 0.0 true true 0 (Corrected)]
] -46.7 MRshow
LT2
573 987 BoxF
577 1095 BoxF
584 1164 BoxF
588 1048 BoxF
597 1174 BoxF
602 1197 BoxF
618 956 BoxF
622 959 BoxF
629 962 BoxF
634 887 BoxF
641 1045 BoxF
645 1019 BoxF
653 1187 BoxF
658 1159 BoxF
674 951 BoxF
678 996 BoxF
686 881 BoxF
690 893 BoxF
697 1012 BoxF
701 1087 BoxF
709 1257 BoxF
714 1256 BoxF
730 864 BoxF
734 859 BoxF
741 882 BoxF
745 920 BoxF
753 1049 BoxF
757 1005 BoxF
765 1321 BoxF
770 1254 BoxF
786 884 BoxF
790 880 BoxF
798 899 BoxF
802 953 BoxF
809 1096 BoxF
813 984 BoxF
821 1256 BoxF
826 1289 BoxF
882 856 BoxF
896 843 BoxF
950 995 BoxF
966 1002 BoxF
981 864 BoxF
1052 931 BoxF
1064 862 BoxF
1074 744 BoxF
1100 1042 BoxF
1116 978 BoxF
1130 907 BoxF
1163 998 BoxF
1182 907 BoxF
1196 817 BoxF
1221 830 BoxF
1239 861 BoxF
1253 792 BoxF
1445 936 BoxF
1449 939 BoxF
1457 1070 BoxF
1462 1076 BoxF
1471 939 BoxF
1475 1007 BoxF
1483 922 BoxF
1486 899 BoxF
1495 989 BoxF
1508 1018 BoxF
1524 1001 BoxF
1530 997 BoxF
1539 974 BoxF
1544 966 BoxF
1575 1026 BoxF
1591 815 BoxF
1634 1074 BoxF
1649 1023 BoxF
1665 1044 BoxF
1705 1229 BoxF
1715 1038 BoxF
1724 1111 BoxF
1738 1037 BoxF
1745 1056 BoxF
1751 1035 BoxF
1786 980 BoxF
1802 797 BoxF
1816 860 BoxF
1959 949 BoxF
1963 978 BoxF
1971 1175 BoxF
1976 1086 BoxF
1986 1012 BoxF
1989 1015 BoxF
1997 973 BoxF
2001 967 BoxF
2010 1098 BoxF
2023 1471 BoxF
2040 1100 BoxF
2045 1066 BoxF
2054 1010 BoxF
2059 1023 BoxF
2092 1035 BoxF
2109 900 BoxF
2124 789 BoxF
2166 1210 BoxF
2180 1193 BoxF
2205 1045 BoxF
2222 804 BoxF
2236 905 BoxF
2271 1090 BoxF
2277 1133 BoxF
2285 953 BoxF
2289 961 BoxF
2297 930 BoxF
2301 961 BoxF
2309 1067 BoxF
2314 1019 BoxF
2324 944 BoxF
2328 956 BoxF
2336 1260 BoxF
2350 1206 BoxF
2366 1122 BoxF
2371 1102 BoxF
2462 949 BoxF
2488 1118 BoxF
2506 1178 BoxF
2555 940 BoxF
2573 706 BoxF
2614 915 BoxF
2655 947 BoxF
2737 952 BoxF
2778 930 BoxF
2819 938 BoxF
2860 969 BoxF
2902 942 BoxF
2943 900 BoxF
3096 794 BoxF
3159 778 BoxF
3222 1240 BoxF
3285 1329 BoxF
3349 1276 BoxF
3413 1324 BoxF
3476 1248 BoxF
3603 894 BoxF
3681 1232 BoxF
3687 1132 BoxF
3696 1002 BoxF
3700 1023 BoxF
3708 1017 BoxF
3711 1006 BoxF
3719 1027 BoxF
3724 1058 BoxF
3734 1102 BoxF
3738 1051 BoxF
3746 1248 BoxF
3759 1309 BoxF
3776 1104 BoxF
3781 1054 BoxF
3806 973 BoxF
3810 958 BoxF
3818 992 BoxF
3823 1069 BoxF
3832 966 BoxF
3836 955 BoxF
3844 932 BoxF
3848 904 BoxF
3856 1336 BoxF
3869 1294 BoxF
3886 1234 BoxF
3891 1111 BoxF
3900 1119 BoxF
4121 977 BoxF
4126 987 BoxF
4133 1141 BoxF
4139 1121 BoxF
4148 910 BoxF
4151 864 BoxF
4159 844 BoxF
4612 955 BoxF
4694 1013 BoxF
4735 2675 BoxF
5730 1603 BoxF
5750 1137 BoxF
5771 1545 BoxF
5791 1644 BoxF
5933 1681 BoxF
5953 1963 BoxF
5973 2162 BoxF
5994 2111 BoxF
6014 1517 BoxF
6034 1683 BoxF
6055 1760 BoxF
6075 1463 BoxF
6095 1883 BoxF
6115 1923 BoxF
6135 1391 BoxF
6156 1449 BoxF
6176 1490 BoxF
6196 1315 BoxF
6340 1443 BoxF
6370 2102 BoxF
6375 1987 BoxF
6594 4347 BoxF
1.000 UL
LTb
546 420 M
6416 0 V
0 4200 V
-6416 0 V
546 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
