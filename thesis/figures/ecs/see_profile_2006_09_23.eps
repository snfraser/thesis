%!PS-Adobe-2.0
%%Title: profiles/see_profile_2006_09_23.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Aug 20 12:00:59 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
546 420 M
63 0 V
6353 0 R
-63 0 V
stroke
462 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
546 1260 M
63 0 V
6353 0 R
-63 0 V
stroke
462 1260 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
546 2100 M
63 0 V
6353 0 R
-63 0 V
stroke
462 2100 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MRshow
1.000 UL
LTb
546 2940 M
63 0 V
6353 0 R
-63 0 V
stroke
462 2940 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MRshow
1.000 UL
LTb
546 3780 M
63 0 V
6353 0 R
-63 0 V
stroke
462 3780 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MRshow
1.000 UL
LTb
546 4620 M
63 0 V
6353 0 R
-63 0 V
stroke
462 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MRshow
1.000 UL
LTb
546 420 M
0 63 V
0 4137 R
0 -63 V
stroke
546 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (22h)]
] -46.7 MCshow
1.000 UL
LTb
902 420 M
0 31 V
0 4169 R
0 -31 V
1259 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1259 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (23h)]
] -46.7 MCshow
1.000 UL
LTb
1615 420 M
0 31 V
0 4169 R
0 -31 V
1972 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1972 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (00h)]
] -46.7 MCshow
1.000 UL
LTb
2328 420 M
0 31 V
0 4169 R
0 -31 V
2685 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2685 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (01h)]
] -46.7 MCshow
1.000 UL
LTb
3041 420 M
0 31 V
0 4169 R
0 -31 V
3398 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3398 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (02h)]
] -46.7 MCshow
1.000 UL
LTb
3754 420 M
0 31 V
0 4169 R
0 -31 V
4110 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4110 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (03h)]
] -46.7 MCshow
1.000 UL
LTb
4467 420 M
0 31 V
0 4169 R
0 -31 V
4823 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4823 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (04h)]
] -46.7 MCshow
1.000 UL
LTb
5180 420 M
0 31 V
0 4169 R
0 -31 V
5536 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5536 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (05h)]
] -46.7 MCshow
1.000 UL
LTb
5893 420 M
0 31 V
0 4169 R
0 -31 V
6249 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6249 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (06h)]
] -46.7 MCshow
1.000 UL
LTb
6606 420 M
0 31 V
0 4169 R
0 -31 V
6962 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6962 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (07h)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
546 420 M
6416 0 V
0 4200 V
-6416 0 V
546 420 L
LTb
140 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Seeing [arcsec])]
] -46.7 MCshow
grestore
LTb
3754 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Time [UT])]
] -46.7 MCshow
LTb
3754 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Seeing LT: \(Night starting: 2006-09-23 \))]
] -46.7 MCshow
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
6311 4487 M
[ [(Helvetica) 140.0 0.0 true true 0 (Raw)]
] -46.7 MRshow
LT0
964 995 BoxF
1030 1259 BoxF
1096 1320 BoxF
1161 1755 BoxF
1351 1369 BoxF
1355 1176 BoxF
1363 1576 BoxF
1368 1469 BoxF
1568 1483 BoxF
1574 1404 BoxF
1584 1687 BoxF
1588 1434 BoxF
1597 1389 BoxF
1602 1404 BoxF
1610 1459 BoxF
1616 1414 BoxF
1626 1368 BoxF
1631 1359 BoxF
1640 1684 BoxF
1655 1567 BoxF
1673 1298 BoxF
1679 1573 BoxF
1706 1484 BoxF
1711 1421 BoxF
1720 1429 BoxF
1725 1410 BoxF
1735 1265 BoxF
1740 1267 BoxF
1748 1096 BoxF
1753 1330 BoxF
1762 1882 BoxF
1777 1676 BoxF
1795 1423 BoxF
1801 1506 BoxF
1811 1366 BoxF
1816 1410 BoxF
1854 1221 BoxF
1945 1064 BoxF
2083 1243 BoxF
2128 1258 BoxF
2175 1206 BoxF
2221 1070 BoxF
2313 1482 BoxF
2319 1625 BoxF
2329 1354 BoxF
2334 1496 BoxF
2342 1611 BoxF
2346 1818 BoxF
2355 1289 BoxF
2361 1248 BoxF
2371 1334 BoxF
2375 1325 BoxF
2385 1535 BoxF
2400 1644 BoxF
2418 1777 BoxF
2424 1276 BoxF
2461 1658 BoxF
2480 1601 BoxF
2511 1196 BoxF
2519 1183 BoxF
2533 1197 BoxF
2542 1229 BoxF
2573 1658 BoxF
2579 1603 BoxF
2588 1463 BoxF
2593 1639 BoxF
2601 1761 BoxF
2606 1591 BoxF
2615 1530 BoxF
2621 1597 BoxF
2631 1470 BoxF
2635 1522 BoxF
2645 1728 BoxF
2659 1743 BoxF
2678 1924 BoxF
2683 2148 BoxF
2705 2194 BoxF
2755 1415 BoxF
2759 2014 BoxF
2763 2167 BoxF
2766 1307 BoxF
2770 1371 BoxF
2774 1523 BoxF
2778 1547 BoxF
2781 1392 BoxF
2785 1504 BoxF
2789 1377 BoxF
2793 1532 BoxF
2797 1332 BoxF
2814 1606 BoxF
2818 1545 BoxF
2822 1346 BoxF
2825 1514 BoxF
2829 1360 BoxF
2832 1283 BoxF
2836 1356 BoxF
2840 1247 BoxF
2843 1483 BoxF
2847 1361 BoxF
2851 1332 BoxF
2855 1438 BoxF
2887 1663 BoxF
2902 1253 BoxF
2916 1107 BoxF
2936 1210 BoxF
2950 1140 BoxF
2965 1239 BoxF
3001 1711 BoxF
3023 1382 BoxF
3046 1413 BoxF
3069 1991 BoxF
3091 1346 BoxF
3114 1320 BoxF
3136 1317 BoxF
3159 1469 BoxF
3181 1794 BoxF
3204 1449 BoxF
3226 1400 BoxF
3249 1490 BoxF
3271 1263 BoxF
3294 1461 BoxF
3316 1544 BoxF
3339 1246 BoxF
3361 1347 BoxF
3384 1372 BoxF
3407 1415 BoxF
3429 1695 BoxF
3452 1717 BoxF
3474 1801 BoxF
3497 1645 BoxF
3519 1535 BoxF
3542 1733 BoxF
3564 1744 BoxF
3587 1849 BoxF
3609 1742 BoxF
3632 1674 BoxF
3655 2003 BoxF
3677 1403 BoxF
3700 1315 BoxF
3722 1643 BoxF
3744 1440 BoxF
3767 1316 BoxF
3790 1233 BoxF
3812 1259 BoxF
3835 1609 BoxF
3857 1314 BoxF
3880 1228 BoxF
3902 1979 BoxF
3924 1247 BoxF
3947 1302 BoxF
3970 1392 BoxF
3992 1456 BoxF
4014 1445 BoxF
4037 1780 BoxF
4059 1211 BoxF
4082 1304 BoxF
4104 1580 BoxF
4200 1471 BoxF
4205 1470 BoxF
4215 1767 BoxF
4220 1767 BoxF
4228 1917 BoxF
4233 1907 BoxF
4242 1959 BoxF
4247 1845 BoxF
4258 1620 BoxF
4262 1892 BoxF
4271 1870 BoxF
4286 1876 BoxF
4305 1811 BoxF
4310 1769 BoxF
4339 1830 BoxF
4345 1737 BoxF
4355 1545 BoxF
4359 1632 BoxF
4368 1793 BoxF
4372 1497 BoxF
4381 1610 BoxF
4386 1597 BoxF
4397 1491 BoxF
4402 1525 BoxF
4411 1828 BoxF
4426 1814 BoxF
4444 1536 BoxF
4450 1568 BoxF
4492 1625 BoxF
4495 1878 BoxF
4499 1559 BoxF
4503 1495 BoxF
4507 1498 BoxF
4511 1815 BoxF
4515 1927 BoxF
4519 1483 BoxF
4523 1395 BoxF
4526 1314 BoxF
4530 1481 BoxF
4534 1472 BoxF
4551 1352 BoxF
4555 1289 BoxF
4559 1244 BoxF
4563 1307 BoxF
4566 1517 BoxF
4570 1464 BoxF
4574 1340 BoxF
4578 1272 BoxF
4581 1511 BoxF
4585 1270 BoxF
4589 1284 BoxF
4593 1224 BoxF
4624 1354 BoxF
4670 1271 BoxF
4708 1546 BoxF
4771 1511 BoxF
4818 1429 BoxF
4867 2170 BoxF
4913 1662 BoxF
4918 1532 BoxF
4929 1719 BoxF
4933 1665 BoxF
4942 1662 BoxF
4946 1620 BoxF
4955 1739 BoxF
4961 1738 BoxF
4971 1495 BoxF
4975 1436 BoxF
4985 1709 BoxF
5000 1691 BoxF
5018 1720 BoxF
5024 1765 BoxF
5050 1921 BoxF
5056 1848 BoxF
5066 1610 BoxF
5070 1720 BoxF
5079 1721 BoxF
5083 1582 BoxF
5092 1867 BoxF
5098 2255 BoxF
5108 2142 BoxF
5112 1578 BoxF
5122 1815 BoxF
5136 2013 BoxF
5155 2571 BoxF
5161 2306 BoxF
5195 1303 BoxF
5199 1309 BoxF
5203 1333 BoxF
5207 1352 BoxF
5211 1366 BoxF
5215 1410 BoxF
5218 1615 BoxF
5222 1417 BoxF
5226 1425 BoxF
5229 1450 BoxF
5233 1324 BoxF
5237 1267 BoxF
5254 1632 BoxF
5258 1581 BoxF
5262 1326 BoxF
5266 1295 BoxF
5269 1408 BoxF
5273 1241 BoxF
5277 1281 BoxF
5280 1221 BoxF
5284 1291 BoxF
5288 1321 BoxF
5292 1246 BoxF
5295 1300 BoxF
5325 1452 BoxF
5329 1415 BoxF
5333 1482 BoxF
5336 1467 BoxF
5340 1427 BoxF
5344 1438 BoxF
5348 1617 BoxF
5352 1740 BoxF
5355 1621 BoxF
5359 1597 BoxF
5363 1633 BoxF
5367 1797 BoxF
5383 1651 BoxF
5387 1222 BoxF
5391 1380 BoxF
5395 1226 BoxF
5399 1287 BoxF
5402 1358 BoxF
5406 1857 BoxF
5410 2279 BoxF
5414 1252 BoxF
5417 1369 BoxF
5421 1461 BoxF
5425 1395 BoxF
5458 1466 BoxF
5467 1470 BoxF
5481 1318 BoxF
5489 1331 BoxF
5516 1768 BoxF
5534 1635 BoxF
5566 1398 BoxF
5624 2238 BoxF
5629 1499 BoxF
5637 1794 BoxF
5643 1837 BoxF
5653 1676 BoxF
5658 1485 BoxF
5666 1597 BoxF
5672 1596 BoxF
5683 1573 BoxF
5697 1568 BoxF
5716 2039 BoxF
5722 2144 BoxF
5732 1606 BoxF
5738 2379 BoxF
5775 1323 BoxF
5957 1013 BoxF
6003 1058 BoxF
6094 978 BoxF
6140 983 BoxF
6353 1225 BoxF
6594 4487 BoxF
1.000 UP
1.000 UL
LT2
LTb
6311 4347 M
[ [(Helvetica) 140.0 0.0 true true 0 (Corrected)]
] -46.7 MRshow
LT2
964 925 BoxF
1030 1164 BoxF
1096 1225 BoxF
1161 1619 BoxF
1351 1333 BoxF
1355 1147 BoxF
1363 1454 BoxF
1368 1358 BoxF
1568 1312 BoxF
1574 1245 BoxF
1584 1571 BoxF
1588 1341 BoxF
1597 1340 BoxF
1602 1354 BoxF
1610 1342 BoxF
1616 1302 BoxF
1626 1346 BoxF
1631 1337 BoxF
1640 1445 BoxF
1655 1354 BoxF
1673 1182 BoxF
1679 1419 BoxF
1706 1239 BoxF
1711 1190 BoxF
1720 1134 BoxF
1725 1121 BoxF
1735 1097 BoxF
1740 1098 BoxF
1748 977 BoxF
1753 1167 BoxF
1762 1416 BoxF
1777 1275 BoxF
1795 1144 BoxF
1801 1204 BoxF
1811 1120 BoxF
1816 1152 BoxF
1854 1185 BoxF
1945 1041 BoxF
2083 1218 BoxF
2128 1237 BoxF
2175 1187 BoxF
2221 1058 BoxF
2313 1330 BoxF
2319 1453 BoxF
2329 1287 BoxF
2334 1419 BoxF
2342 1575 BoxF
2346 1776 BoxF
2355 1207 BoxF
2361 1170 BoxF
2371 1332 BoxF
2375 1324 BoxF
2385 1344 BoxF
2400 1434 BoxF
2418 1616 BoxF
2424 1174 BoxF
2461 1411 BoxF
2480 1416 BoxF
2511 1029 BoxF
2519 1019 BoxF
2533 1063 BoxF
2542 1089 BoxF
2573 1326 BoxF
2579 1285 BoxF
2588 1250 BoxF
2593 1390 BoxF
2601 1534 BoxF
2606 1393 BoxF
2615 1286 BoxF
2621 1338 BoxF
2631 1322 BoxF
2635 1371 BoxF
2645 1356 BoxF
2659 1367 BoxF
2678 1571 BoxF
2683 1742 BoxF
2705 2031 BoxF
2755 1153 BoxF
2759 1594 BoxF
2763 1707 BoxF
2766 1073 BoxF
2770 1121 BoxF
2774 1233 BoxF
2778 1253 BoxF
2781 1139 BoxF
2785 1221 BoxF
2789 1128 BoxF
2793 1242 BoxF
2797 1095 BoxF
2814 1348 BoxF
2818 1300 BoxF
2822 1145 BoxF
2825 1275 BoxF
2829 1155 BoxF
2832 1095 BoxF
2836 1155 BoxF
2840 1070 BoxF
2843 1255 BoxF
2847 1159 BoxF
2851 1136 BoxF
2855 1220 BoxF
2887 1585 BoxF
2902 1201 BoxF
2916 1065 BoxF
2936 1121 BoxF
2950 1059 BoxF
2965 1147 BoxF
3001 1443 BoxF
3023 1182 BoxF
3046 1210 BoxF
3069 1675 BoxF
3091 1163 BoxF
3114 1142 BoxF
3136 1143 BoxF
3159 1269 BoxF
3181 1532 BoxF
3204 1257 BoxF
3226 1221 BoxF
3249 1293 BoxF
3271 1112 BoxF
3294 1274 BoxF
3316 1346 BoxF
3339 1104 BoxF
3361 1187 BoxF
3384 1211 BoxF
3407 1247 BoxF
3429 1485 BoxF
3452 1504 BoxF
3474 1579 BoxF
3497 1448 BoxF
3519 1360 BoxF
3542 1527 BoxF
3564 1542 BoxF
3587 1630 BoxF
3609 1545 BoxF
3632 1487 BoxF
3655 1774 BoxF
3677 1261 BoxF
3700 1189 BoxF
3722 1471 BoxF
3744 1301 BoxF
3767 1194 BoxF
3790 1122 BoxF
3812 1148 BoxF
3835 1452 BoxF
3857 1199 BoxF
3880 1124 BoxF
3902 1780 BoxF
3924 1144 BoxF
3947 1193 BoxF
3970 1272 BoxF
3992 1333 BoxF
4014 1323 BoxF
4037 1624 BoxF
4059 1120 BoxF
4082 1202 BoxF
4104 1452 BoxF
4200 1316 BoxF
4205 1316 BoxF
4215 1663 BoxF
4220 1663 BoxF
4228 1864 BoxF
4233 1855 BoxF
4242 1815 BoxF
4247 1712 BoxF
4258 1619 BoxF
4262 1890 BoxF
4271 1621 BoxF
4286 1626 BoxF
4305 1646 BoxF
4310 1609 BoxF
4339 1451 BoxF
4345 1383 BoxF
4355 1311 BoxF
4359 1376 BoxF
4368 1552 BoxF
4372 1307 BoxF
4381 1333 BoxF
4386 1323 BoxF
4397 1325 BoxF
4402 1353 BoxF
4411 1402 BoxF
4426 1389 BoxF
4444 1245 BoxF
4450 1266 BoxF
4492 1448 BoxF
4495 1665 BoxF
4499 1392 BoxF
4503 1338 BoxF
4507 1340 BoxF
4511 1611 BoxF
4515 1706 BoxF
4519 1327 BoxF
4523 1252 BoxF
4526 1183 BoxF
4530 1325 BoxF
4534 1318 BoxF
4551 1258 BoxF
4555 1205 BoxF
4559 1165 BoxF
4563 1221 BoxF
4566 1411 BoxF
4570 1364 BoxF
4574 1251 BoxF
4578 1190 BoxF
4581 1406 BoxF
4585 1188 BoxF
4589 1201 BoxF
4593 1147 BoxF
4624 1311 BoxF
4670 1219 BoxF
4708 1416 BoxF
4771 1380 BoxF
4818 1351 BoxF
4867 2082 BoxF
4913 1479 BoxF
4918 1368 BoxF
4929 1619 BoxF
4933 1569 BoxF
4942 1618 BoxF
4946 1577 BoxF
4955 1609 BoxF
4961 1608 BoxF
4971 1488 BoxF
4975 1429 BoxF
4985 1476 BoxF
5000 1461 BoxF
5018 1554 BoxF
5024 1592 BoxF
5050 1351 BoxF
5056 1306 BoxF
5066 1217 BoxF
5070 1287 BoxF
5079 1324 BoxF
5083 1228 BoxF
5092 1357 BoxF
5098 1608 BoxF
5108 1644 BoxF
5112 1241 BoxF
5122 1237 BoxF
5136 1351 BoxF
5155 1749 BoxF
5161 1582 BoxF
5195 1194 BoxF
5199 1199 BoxF
5203 1220 BoxF
5207 1236 BoxF
5211 1250 BoxF
5215 1288 BoxF
5218 1467 BoxF
5222 1294 BoxF
5226 1300 BoxF
5229 1323 BoxF
5233 1212 BoxF
5237 1162 BoxF
5254 1545 BoxF
5258 1498 BoxF
5262 1261 BoxF
5266 1232 BoxF
5269 1337 BoxF
5273 1182 BoxF
5277 1219 BoxF
5280 1163 BoxF
5284 1229 BoxF
5288 1257 BoxF
5292 1187 BoxF
5295 1236 BoxF
5325 1335 BoxF
5329 1301 BoxF
5333 1361 BoxF
5336 1348 BoxF
5340 1313 BoxF
5344 1322 BoxF
5348 1480 BoxF
5352 1590 BoxF
5355 1484 BoxF
5359 1463 BoxF
5363 1495 BoxF
5367 1640 BoxF
5383 1569 BoxF
5387 1169 BoxF
5391 1316 BoxF
5395 1173 BoxF
5399 1229 BoxF
5402 1295 BoxF
5406 1762 BoxF
5410 2155 BoxF
5414 1196 BoxF
5417 1306 BoxF
5421 1392 BoxF
5425 1330 BoxF
5458 1308 BoxF
5467 1311 BoxF
5481 1223 BoxF
5489 1234 BoxF
5516 1469 BoxF
5534 1412 BoxF
5566 1213 BoxF
5624 1686 BoxF
5629 1171 BoxF
5637 1307 BoxF
5643 1335 BoxF
5653 1340 BoxF
5658 1200 BoxF
5666 1311 BoxF
5672 1313 BoxF
5683 1146 BoxF
5697 1145 BoxF
5716 1516 BoxF
5722 1588 BoxF
5732 1250 BoxF
5738 1790 BoxF
5775 1136 BoxF
5957 895 BoxF
6003 926 BoxF
6094 855 BoxF
6140 856 BoxF
6353 926 BoxF
6594 4347 BoxF
1.000 UL
LTb
546 420 M
6416 0 V
0 4200 V
-6416 0 V
546 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
