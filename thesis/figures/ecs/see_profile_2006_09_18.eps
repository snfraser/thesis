%!PS-Adobe-2.0
%%Title: profiles/see_profile_2006_09_18.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Aug 20 12:00:48 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
546 420 M
63 0 V
6353 0 R
-63 0 V
stroke
462 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
546 1260 M
63 0 V
6353 0 R
-63 0 V
stroke
462 1260 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
546 2100 M
63 0 V
6353 0 R
-63 0 V
stroke
462 2100 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MRshow
1.000 UL
LTb
546 2940 M
63 0 V
6353 0 R
-63 0 V
stroke
462 2940 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MRshow
1.000 UL
LTb
546 3780 M
63 0 V
6353 0 R
-63 0 V
stroke
462 3780 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MRshow
1.000 UL
LTb
546 4620 M
63 0 V
6353 0 R
-63 0 V
stroke
462 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MRshow
1.000 UL
LTb
546 420 M
0 63 V
0 4137 R
0 -63 V
stroke
546 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (20h)]
] -46.7 MCshow
1.000 UL
LTb
867 420 M
0 31 V
0 4169 R
0 -31 V
1188 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1188 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (21h)]
] -46.7 MCshow
1.000 UL
LTb
1508 420 M
0 31 V
0 4169 R
0 -31 V
1829 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1829 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (22h)]
] -46.7 MCshow
1.000 UL
LTb
2150 420 M
0 31 V
0 4169 R
0 -31 V
2471 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2471 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (23h)]
] -46.7 MCshow
1.000 UL
LTb
2792 420 M
0 31 V
0 4169 R
0 -31 V
3112 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3112 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (00h)]
] -46.7 MCshow
1.000 UL
LTb
3433 420 M
0 31 V
0 4169 R
0 -31 V
3754 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3754 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (01h)]
] -46.7 MCshow
1.000 UL
LTb
4075 420 M
0 31 V
0 4169 R
0 -31 V
4396 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4396 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (02h)]
] -46.7 MCshow
1.000 UL
LTb
4716 420 M
0 31 V
0 4169 R
0 -31 V
5037 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5037 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (03h)]
] -46.7 MCshow
1.000 UL
LTb
5358 420 M
0 31 V
0 4169 R
0 -31 V
5679 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5679 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (04h)]
] -46.7 MCshow
1.000 UL
LTb
6000 420 M
0 31 V
0 4169 R
0 -31 V
6320 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6320 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (05h)]
] -46.7 MCshow
1.000 UL
LTb
6641 420 M
0 31 V
0 4169 R
0 -31 V
6962 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6962 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (06h)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
546 420 M
6416 0 V
0 4200 V
-6416 0 V
546 420 L
LTb
140 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Seeing [arcsec])]
] -46.7 MCshow
grestore
LTb
3754 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Time [UT])]
] -46.7 MCshow
LTb
3754 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Seeing LT: \(Night starting: 2006-09-18 \))]
] -46.7 MCshow
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
6311 4487 M
[ [(Helvetica) 140.0 0.0 true true 0 (Raw)]
] -46.7 MRshow
LT0
614 1181 BoxF
634 1112 BoxF
669 1266 BoxF
689 1173 BoxF
723 1174 BoxF
758 1188 BoxF
797 1282 BoxF
831 1185 BoxF
880 1197 BoxF
900 1184 BoxF
935 1156 BoxF
948 1189 BoxF
965 1251 BoxF
979 1195 BoxF
1006 1099 BoxF
1025 1200 BoxF
1048 1318 BoxF
1066 1255 BoxF
1098 1179 BoxF
1118 1276 BoxF
1153 1190 BoxF
1173 1209 BoxF
1208 1272 BoxF
1228 1346 BoxF
1252 1309 BoxF
1272 1335 BoxF
1307 1655 BoxF
1328 1577 BoxF
1365 1453 BoxF
1369 1255 BoxF
1377 1489 BoxF
1382 1543 BoxF
1391 1412 BoxF
1395 1401 BoxF
1403 1235 BoxF
1407 1257 BoxF
1415 1459 BoxF
1428 1390 BoxF
1445 1694 BoxF
1450 1794 BoxF
1459 1490 BoxF
1464 1493 BoxF
1488 2160 BoxF
1493 2014 BoxF
1502 1586 BoxF
1506 1446 BoxF
1514 1536 BoxF
1518 1588 BoxF
1526 1614 BoxF
1531 1669 BoxF
1540 1570 BoxF
1544 1443 BoxF
1552 1795 BoxF
1566 1822 BoxF
1583 1613 BoxF
1588 1590 BoxF
1613 1690 BoxF
1629 1520 BoxF
1675 1411 BoxF
1679 1476 BoxF
1683 1506 BoxF
1687 1382 BoxF
1692 1619 BoxF
1811 1053 BoxF
2017 1086 BoxF
2058 1042 BoxF
2154 1256 BoxF
2158 1254 BoxF
2165 1300 BoxF
2170 1221 BoxF
2179 1303 BoxF
2183 1215 BoxF
2191 1100 BoxF
2195 1122 BoxF
2203 1276 BoxF
2216 1334 BoxF
2233 1375 BoxF
2238 1413 BoxF
2247 1509 BoxF
2252 1334 BoxF
2277 1907 BoxF
2282 1868 BoxF
2291 1583 BoxF
2295 1429 BoxF
2303 1447 BoxF
2307 1404 BoxF
2314 1584 BoxF
2320 1526 BoxF
2329 1465 BoxF
2333 1468 BoxF
2342 1901 BoxF
2355 1833 BoxF
2371 1728 BoxF
2376 1568 BoxF
2402 1625 BoxF
2409 1746 BoxF
2422 1321 BoxF
2430 1318 BoxF
2456 1334 BoxF
2498 1599 BoxF
2540 1448 BoxF
2582 1432 BoxF
2621 1233 BoxF
2629 1220 BoxF
2636 1317 BoxF
2648 1232 BoxF
2656 1321 BoxF
2664 1186 BoxF
2691 1059 BoxF
2732 1068 BoxF
2774 1087 BoxF
2815 1069 BoxF
2856 1093 BoxF
2897 1092 BoxF
2938 1103 BoxF
2979 1107 BoxF
3021 1097 BoxF
3097 1439 BoxF
3117 1378 BoxF
3138 1781 BoxF
3158 1381 BoxF
3178 1602 BoxF
3198 1424 BoxF
3219 1443 BoxF
3239 1747 BoxF
3259 1460 BoxF
3280 1404 BoxF
3300 1498 BoxF
3320 1404 BoxF
3340 1684 BoxF
3361 1341 BoxF
3381 1257 BoxF
3401 1326 BoxF
3422 1268 BoxF
3442 1529 BoxF
3462 1323 BoxF
3482 1295 BoxF
3503 1297 BoxF
3523 1253 BoxF
3543 1566 BoxF
3563 1275 BoxF
3584 1288 BoxF
3604 1338 BoxF
3624 1257 BoxF
3645 1660 BoxF
3665 1285 BoxF
3685 1241 BoxF
3705 1314 BoxF
3725 1236 BoxF
3745 1764 BoxF
3766 1286 BoxF
3786 1319 BoxF
3806 1273 BoxF
3826 1330 BoxF
3847 1625 BoxF
3867 1416 BoxF
3887 1228 BoxF
3908 1191 BoxF
3928 1156 BoxF
3948 1541 BoxF
3968 1215 BoxF
3989 1183 BoxF
4009 1214 BoxF
4030 1158 BoxF
4050 1536 BoxF
4070 1194 BoxF
4090 1132 BoxF
4167 1751 BoxF
4172 1761 BoxF
4181 1569 BoxF
4185 1344 BoxF
4193 1400 BoxF
4197 1543 BoxF
4205 1594 BoxF
4210 1664 BoxF
4219 1422 BoxF
4223 1336 BoxF
4231 1557 BoxF
4244 1534 BoxF
4261 1429 BoxF
4266 1513 BoxF
4295 1396 BoxF
4312 1169 BoxF
4355 1390 BoxF
4360 1409 BoxF
4369 1225 BoxF
4373 1106 BoxF
4381 1093 BoxF
4385 1200 BoxF
4393 1246 BoxF
4398 1218 BoxF
4407 1112 BoxF
4411 1021 BoxF
4419 1420 BoxF
4432 1483 BoxF
4449 1194 BoxF
4454 1296 BoxF
4488 1168 BoxF
4496 1183 BoxF
4508 1105 BoxF
4516 1082 BoxF
4539 1389 BoxF
4543 1353 BoxF
4546 1405 BoxF
4549 1282 BoxF
4553 1325 BoxF
4556 1386 BoxF
4560 1422 BoxF
4563 1331 BoxF
4566 1396 BoxF
4570 1348 BoxF
4573 1385 BoxF
4577 1292 BoxF
4592 1180 BoxF
4596 1161 BoxF
4599 1247 BoxF
4603 1212 BoxF
4606 1224 BoxF
4609 1171 BoxF
4612 1182 BoxF
4616 1123 BoxF
4619 1143 BoxF
4622 1175 BoxF
4626 1157 BoxF
4629 1335 BoxF
4655 1347 BoxF
4658 1395 BoxF
4662 1434 BoxF
4665 1373 BoxF
4668 1409 BoxF
4672 1386 BoxF
4675 1403 BoxF
4678 1429 BoxF
4682 1384 BoxF
4685 1431 BoxF
4689 1517 BoxF
4692 1520 BoxF
4707 1183 BoxF
4711 1794 BoxF
4714 1156 BoxF
4718 1120 BoxF
4721 1193 BoxF
4724 1151 BoxF
4728 1139 BoxF
4731 1103 BoxF
4734 1104 BoxF
4738 1121 BoxF
4741 1140 BoxF
4744 1141 BoxF
4778 1381 BoxF
4783 1356 BoxF
4792 1268 BoxF
4796 1360 BoxF
4804 1374 BoxF
4808 1364 BoxF
4816 1397 BoxF
4821 1635 BoxF
4830 1247 BoxF
4834 1497 BoxF
4843 1549 BoxF
4856 1586 BoxF
4873 1620 BoxF
4878 1459 BoxF
4917 1021 BoxF
4958 1117 BoxF
4999 1052 BoxF
5040 1078 BoxF
5082 1050 BoxF
5123 1018 BoxF
5164 1051 BoxF
5205 1101 BoxF
5246 1019 BoxF
5324 1363 BoxF
5335 1430 BoxF
5369 1219 BoxF
5408 1247 BoxF
5446 1346 BoxF
5489 1043 BoxF
5535 1583 BoxF
5582 1317 BoxF
5615 1682 BoxF
5631 1408 BoxF
5669 1381 BoxF
5672 1553 BoxF
5676 1389 BoxF
5679 1520 BoxF
5683 1517 BoxF
5686 1472 BoxF
5689 1382 BoxF
5693 1324 BoxF
5696 1403 BoxF
5700 1370 BoxF
5703 1401 BoxF
5706 1369 BoxF
5710 1433 BoxF
5713 1419 BoxF
5716 1546 BoxF
5720 1494 BoxF
5724 1477 BoxF
5727 1345 BoxF
5731 1339 BoxF
5734 1328 BoxF
5765 1433 BoxF
5770 1393 BoxF
5779 1304 BoxF
5783 1384 BoxF
5791 1510 BoxF
5795 1423 BoxF
5803 1490 BoxF
5808 1643 BoxF
5818 1376 BoxF
5822 1416 BoxF
5830 1663 BoxF
5843 1521 BoxF
5860 1878 BoxF
5865 1621 BoxF
5890 1763 BoxF
5895 1571 BoxF
5904 1252 BoxF
5908 1227 BoxF
5916 1289 BoxF
5920 1234 BoxF
5928 1346 BoxF
5933 1421 BoxF
5942 1228 BoxF
5946 1321 BoxF
5955 1709 BoxF
5968 1658 BoxF
5984 1579 BoxF
5989 1404 BoxF
6018 1086 BoxF
6059 1082 BoxF
6100 1077 BoxF
6141 1097 BoxF
6182 1094 BoxF
6223 1067 BoxF
6264 1062 BoxF
6306 1088 BoxF
6347 1121 BoxF
6437 1422 BoxF
6441 1433 BoxF
6449 1629 BoxF
6454 1675 BoxF
6463 1307 BoxF
6467 1566 BoxF
6475 1374 BoxF
6480 1423 BoxF
6490 1472 BoxF
6503 1498 BoxF
6519 1593 BoxF
6525 1438 BoxF
6534 1389 BoxF
6539 1452 BoxF
6573 1368 BoxF
6577 1381 BoxF
6580 1350 BoxF
6583 1378 BoxF
6587 1432 BoxF
6591 1429 BoxF
6594 1370 BoxF
6598 1347 BoxF
6601 1306 BoxF
6605 1355 BoxF
6609 1355 BoxF
6612 1270 BoxF
6616 1327 BoxF
6619 1276 BoxF
6623 1322 BoxF
6626 1342 BoxF
6630 1426 BoxF
6633 1385 BoxF
6636 1345 BoxF
6640 1367 BoxF
6672 1573 BoxF
6739 1476 BoxF
6743 1450 BoxF
6750 1551 BoxF
6754 1456 BoxF
6594 4487 BoxF
1.000 UP
1.000 UL
LT2
LTb
6311 4347 M
[ [(Helvetica) 140.0 0.0 true true 0 (Corrected)]
] -46.7 MRshow
LT2
614 918 BoxF
634 873 BoxF
669 979 BoxF
689 916 BoxF
723 919 BoxF
758 927 BoxF
797 1012 BoxF
831 943 BoxF
880 917 BoxF
900 908 BoxF
935 895 BoxF
948 915 BoxF
965 979 BoxF
979 939 BoxF
1006 843 BoxF
1025 905 BoxF
1048 1001 BoxF
1066 959 BoxF
1098 898 BoxF
1118 958 BoxF
1153 895 BoxF
1173 904 BoxF
1208 931 BoxF
1228 972 BoxF
1252 972 BoxF
1272 985 BoxF
1307 1164 BoxF
1328 1115 BoxF
1365 1271 BoxF
1369 1108 BoxF
1377 1233 BoxF
1382 1274 BoxF
1391 1274 BoxF
1395 1268 BoxF
1403 1146 BoxF
1407 1165 BoxF
1415 1187 BoxF
1428 1136 BoxF
1445 1421 BoxF
1450 1499 BoxF
1459 1285 BoxF
1464 1287 BoxF
1488 1563 BoxF
1493 1471 BoxF
1502 1255 BoxF
1506 1155 BoxF
1514 1255 BoxF
1518 1297 BoxF
1526 1258 BoxF
1531 1299 BoxF
1540 1312 BoxF
1544 1217 BoxF
1552 1308 BoxF
1566 1328 BoxF
1583 1249 BoxF
1588 1233 BoxF
1613 1212 BoxF
1629 1144 BoxF
1675 1189 BoxF
1679 1239 BoxF
1683 1259 BoxF
1687 1164 BoxF
1692 1347 BoxF
1811 911 BoxF
2017 960 BoxF
2058 928 BoxF
2154 1118 BoxF
2158 1116 BoxF
2165 1099 BoxF
2170 1035 BoxF
2179 1187 BoxF
2183 1110 BoxF
2191 1028 BoxF
2195 1048 BoxF
2203 1055 BoxF
2216 1098 BoxF
2233 1174 BoxF
2238 1204 BoxF
2247 1304 BoxF
2252 1162 BoxF
2277 1577 BoxF
2282 1547 BoxF
2291 1401 BoxF
2295 1271 BoxF
2303 1324 BoxF
2307 1287 BoxF
2314 1383 BoxF
2320 1335 BoxF
2329 1372 BoxF
2333 1375 BoxF
2342 1544 BoxF
2355 1493 BoxF
2371 1477 BoxF
2376 1352 BoxF
2402 1174 BoxF
2409 1249 BoxF
2422 1015 BoxF
2430 1016 BoxF
2456 1209 BoxF
2498 1400 BoxF
2540 1369 BoxF
2582 1387 BoxF
2621 1102 BoxF
2629 1091 BoxF
2636 1173 BoxF
2648 1064 BoxF
2656 1138 BoxF
2664 1031 BoxF
2691 999 BoxF
2732 1010 BoxF
2774 1031 BoxF
2815 1017 BoxF
2856 1042 BoxF
2897 1042 BoxF
2938 1055 BoxF
2979 1062 BoxF
3021 1056 BoxF
3097 1051 BoxF
3117 1017 BoxF
3138 1272 BoxF
3158 1026 BoxF
3178 1169 BoxF
3198 1060 BoxF
3219 1074 BoxF
3239 1273 BoxF
3259 1093 BoxF
3280 1060 BoxF
3300 1124 BoxF
3320 1066 BoxF
3340 1256 BoxF
3361 1031 BoxF
3381 978 BoxF
3401 1026 BoxF
3422 991 BoxF
3442 1169 BoxF
3462 1034 BoxF
3482 1017 BoxF
3503 1022 BoxF
3523 994 BoxF
3543 1216 BoxF
3563 1015 BoxF
3584 1027 BoxF
3604 1063 BoxF
3624 1011 BoxF
3645 1298 BoxF
3665 1035 BoxF
3685 1006 BoxF
3705 1063 BoxF
3725 1009 BoxF
3745 1393 BoxF
3766 1049 BoxF
3786 1075 BoxF
3806 1044 BoxF
3826 1089 BoxF
3847 1309 BoxF
3867 1157 BoxF
3887 1020 BoxF
3908 995 BoxF
3928 971 BoxF
3948 1262 BoxF
3968 1019 BoxF
3989 998 BoxF
4009 1024 BoxF
4030 984 BoxF
4050 1275 BoxF
4070 1015 BoxF
4090 970 BoxF
4167 1447 BoxF
4172 1454 BoxF
4181 1384 BoxF
4185 1196 BoxF
4193 1279 BoxF
4197 1404 BoxF
4205 1382 BoxF
4210 1439 BoxF
4219 1329 BoxF
4223 1251 BoxF
4231 1275 BoxF
4244 1261 BoxF
4261 1232 BoxF
4266 1299 BoxF
4295 1220 BoxF
4312 1066 BoxF
4355 1238 BoxF
4360 1254 BoxF
4369 1151 BoxF
4373 1044 BoxF
4381 1059 BoxF
4385 1160 BoxF
4393 1152 BoxF
4398 1128 BoxF
4407 1097 BoxF
4411 1007 BoxF
4419 1231 BoxF
4432 1281 BoxF
4449 1084 BoxF
4454 1172 BoxF
4488 1042 BoxF
4496 1054 BoxF
4508 1020 BoxF
4516 1003 BoxF
4539 1184 BoxF
4543 1156 BoxF
4546 1198 BoxF
4549 1100 BoxF
4553 1138 BoxF
4556 1186 BoxF
4560 1214 BoxF
4563 1142 BoxF
4566 1194 BoxF
4570 1156 BoxF
4573 1185 BoxF
4577 1111 BoxF
4592 1058 BoxF
4596 1041 BoxF
4599 1114 BoxF
4603 1085 BoxF
4606 1095 BoxF
4609 1050 BoxF
4612 1060 BoxF
4616 1010 BoxF
4619 1027 BoxF
4622 1053 BoxF
4626 1038 BoxF
4629 1187 BoxF
4655 1135 BoxF
4658 1172 BoxF
4662 1202 BoxF
4665 1155 BoxF
4668 1186 BoxF
4672 1169 BoxF
4675 1182 BoxF
4678 1202 BoxF
4682 1167 BoxF
4685 1204 BoxF
4689 1270 BoxF
4692 1272 BoxF
4707 1045 BoxF
4711 1547 BoxF
4714 1024 BoxF
4718 994 BoxF
4721 1054 BoxF
4724 1020 BoxF
4728 1010 BoxF
4731 980 BoxF
4734 983 BoxF
4738 998 BoxF
4741 1013 BoxF
4744 1014 BoxF
4778 1218 BoxF
4783 1197 BoxF
4792 1182 BoxF
4796 1265 BoxF
4804 1316 BoxF
4808 1307 BoxF
4816 1278 BoxF
4821 1487 BoxF
4830 1224 BoxF
4834 1467 BoxF
4843 1330 BoxF
4856 1360 BoxF
4873 1449 BoxF
4878 1312 BoxF
4917 1019 BoxF
4958 1116 BoxF
4999 1051 BoxF
5040 1073 BoxF
5082 1045 BoxF
5123 1013 BoxF
5164 1043 BoxF
5205 1092 BoxF
5246 1011 BoxF
5324 1299 BoxF
5335 1280 BoxF
5369 1169 BoxF
5408 1152 BoxF
5446 1239 BoxF
5489 993 BoxF
5535 1543 BoxF
5582 1184 BoxF
5615 1142 BoxF
5631 1041 BoxF
5669 1312 BoxF
5672 1472 BoxF
5676 1320 BoxF
5679 1441 BoxF
5683 1438 BoxF
5686 1397 BoxF
5689 1313 BoxF
5693 1260 BoxF
5696 1333 BoxF
5700 1302 BoxF
5703 1331 BoxF
5706 1301 BoxF
5710 1360 BoxF
5713 1347 BoxF
5716 1465 BoxF
5720 1417 BoxF
5724 1401 BoxF
5727 1279 BoxF
5731 1273 BoxF
5734 1263 BoxF
5765 1289 BoxF
5770 1254 BoxF
5779 1241 BoxF
5783 1315 BoxF
5791 1477 BoxF
5795 1392 BoxF
5803 1390 BoxF
5808 1529 BoxF
5818 1374 BoxF
5822 1415 BoxF
5830 1449 BoxF
5843 1331 BoxF
5860 1705 BoxF
5865 1473 BoxF
5890 1309 BoxF
5895 1179 BoxF
5904 1012 BoxF
5908 994 BoxF
5916 1063 BoxF
5920 1023 BoxF
5928 1059 BoxF
5933 1110 BoxF
5942 1032 BoxF
5946 1102 BoxF
5955 1226 BoxF
5968 1191 BoxF
5984 1187 BoxF
5989 1068 BoxF
6018 1033 BoxF
6059 1026 BoxF
6100 1018 BoxF
6141 1033 BoxF
6182 1028 BoxF
6223 1001 BoxF
6264 993 BoxF
6306 1014 BoxF
6347 1041 BoxF
6437 1082 BoxF
6441 1089 BoxF
6449 1160 BoxF
6454 1191 BoxF
6463 1036 BoxF
6467 1219 BoxF
6475 1107 BoxF
6480 1142 BoxF
6490 1050 BoxF
6503 1068 BoxF
6519 1175 BoxF
6525 1075 BoxF
6534 1064 BoxF
6539 1108 BoxF
6573 1263 BoxF
6577 1275 BoxF
6580 1243 BoxF
6583 1268 BoxF
6587 1315 BoxF
6591 1313 BoxF
6594 1261 BoxF
6598 1241 BoxF
6601 1204 BoxF
6605 1248 BoxF
6609 1248 BoxF
6612 1172 BoxF
6616 1223 BoxF
6619 1178 BoxF
6623 1219 BoxF
6626 1236 BoxF
6630 1306 BoxF
6633 1270 BoxF
6636 1235 BoxF
6640 1254 BoxF
6672 1106 BoxF
6739 1441 BoxF
6743 1416 BoxF
6750 1437 BoxF
6754 1352 BoxF
6594 4347 BoxF
1.000 UL
LTb
546 420 M
6416 0 V
0 4200 V
-6416 0 V
546 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
