%!PS-Adobe-2.0
%%Title: profiles/see_profile_2006_09_22.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Aug 20 12:00:57 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
546 420 M
63 0 V
6353 0 R
-63 0 V
stroke
462 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
546 1260 M
63 0 V
6353 0 R
-63 0 V
stroke
462 1260 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
546 2100 M
63 0 V
6353 0 R
-63 0 V
stroke
462 2100 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MRshow
1.000 UL
LTb
546 2940 M
63 0 V
6353 0 R
-63 0 V
stroke
462 2940 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MRshow
1.000 UL
LTb
546 3780 M
63 0 V
6353 0 R
-63 0 V
stroke
462 3780 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MRshow
1.000 UL
LTb
546 4620 M
63 0 V
6353 0 R
-63 0 V
stroke
462 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MRshow
1.000 UL
LTb
546 420 M
0 63 V
0 4137 R
0 -63 V
stroke
546 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (20h)]
] -46.7 MCshow
1.000 UL
LTb
838 420 M
0 31 V
0 4169 R
0 -31 V
1129 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1129 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (21h)]
] -46.7 MCshow
1.000 UL
LTb
1421 420 M
0 31 V
0 4169 R
0 -31 V
1713 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1713 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (22h)]
] -46.7 MCshow
1.000 UL
LTb
2004 420 M
0 31 V
0 4169 R
0 -31 V
2296 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2296 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (23h)]
] -46.7 MCshow
1.000 UL
LTb
2587 420 M
0 31 V
0 4169 R
0 -31 V
2879 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2879 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (00h)]
] -46.7 MCshow
1.000 UL
LTb
3171 420 M
0 31 V
0 4169 R
0 -31 V
3462 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3462 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (01h)]
] -46.7 MCshow
1.000 UL
LTb
3754 420 M
0 31 V
0 4169 R
0 -31 V
4046 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4046 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (02h)]
] -46.7 MCshow
1.000 UL
LTb
4337 420 M
0 31 V
0 4169 R
0 -31 V
4629 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4629 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (03h)]
] -46.7 MCshow
1.000 UL
LTb
4921 420 M
0 31 V
0 4169 R
0 -31 V
5212 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5212 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (04h)]
] -46.7 MCshow
1.000 UL
LTb
5504 420 M
0 31 V
0 4169 R
0 -31 V
5795 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5795 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (05h)]
] -46.7 MCshow
1.000 UL
LTb
6087 420 M
0 31 V
0 4169 R
0 -31 V
6379 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6379 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (06h)]
] -46.7 MCshow
1.000 UL
LTb
6670 420 M
0 31 V
0 4169 R
0 -31 V
6962 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6962 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (07h)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
546 420 M
6416 0 V
0 4200 V
-6416 0 V
546 420 L
LTb
140 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Seeing [arcsec])]
] -46.7 MCshow
grestore
LTb
3754 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Time [UT])]
] -46.7 MCshow
LTb
3754 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Seeing LT: \(Night starting: 2006-09-22 \))]
] -46.7 MCshow
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
6311 4487 M
[ [(Helvetica) 140.0 0.0 true true 0 (Raw)]
] -46.7 MRshow
LT0
564 1438 BoxF
582 1272 BoxF
617 1776 BoxF
622 1649 BoxF
630 1335 BoxF
633 1243 BoxF
640 1179 BoxF
644 1290 BoxF
651 1450 BoxF
656 1387 BoxF
664 1001 BoxF
668 992 BoxF
676 1722 BoxF
688 1712 BoxF
703 1325 BoxF
708 1425 BoxF
732 1390 BoxF
736 1358 BoxF
743 1419 BoxF
747 1385 BoxF
755 1348 BoxF
759 1361 BoxF
766 1209 BoxF
770 1172 BoxF
778 1351 BoxF
790 1470 BoxF
805 1352 BoxF
809 1416 BoxF
817 1262 BoxF
822 1258 BoxF
842 1255 BoxF
893 1378 BoxF
928 1810 BoxF
966 1317 BoxF
969 1314 BoxF
976 1395 BoxF
979 1326 BoxF
985 1081 BoxF
988 1196 BoxF
995 1712 BoxF
1017 1668 BoxF
1042 1244 BoxF
1048 1348 BoxF
1067 1340 BoxF
1085 1135 BoxF
1783 1290 BoxF
1786 1337 BoxF
1793 1279 BoxF
1798 1232 BoxF
1806 1493 BoxF
1809 1300 BoxF
1816 1270 BoxF
1820 1594 BoxF
1828 1518 BoxF
1840 1443 BoxF
1855 1281 BoxF
1859 1293 BoxF
1868 1263 BoxF
1872 1317 BoxF
2314 2121 BoxF
2318 1710 BoxF
2326 1648 BoxF
2330 1648 BoxF
2337 1959 BoxF
2341 1859 BoxF
2348 1760 BoxF
2353 1937 BoxF
2361 1477 BoxF
2365 1305 BoxF
2373 2018 BoxF
2385 1954 BoxF
2400 2167 BoxF
2405 1923 BoxF
2429 1569 BoxF
2656 2136 BoxF
2660 1994 BoxF
2668 2486 BoxF
2672 2444 BoxF
2679 2687 BoxF
2683 2520 BoxF
2690 1979 BoxF
2695 1670 BoxF
2703 1711 BoxF
2707 1566 BoxF
2715 1810 BoxF
2727 1675 BoxF
2742 2334 BoxF
2746 1801 BoxF
3074 1519 BoxF
3079 1547 BoxF
3087 1666 BoxF
3091 1426 BoxF
3097 1730 BoxF
3101 1634 BoxF
3108 1289 BoxF
3113 1308 BoxF
3121 1594 BoxF
3125 1524 BoxF
3133 1727 BoxF
3145 1586 BoxF
3160 1361 BoxF
3165 1324 BoxF
3197 1613 BoxF
3213 1417 BoxF
3286 1237 BoxF
3294 1253 BoxF
3305 1206 BoxF
3312 1207 BoxF
4441 1285 BoxF
4444 1227 BoxF
4447 1281 BoxF
4450 1277 BoxF
4453 1330 BoxF
4456 1236 BoxF
4459 1293 BoxF
4462 1299 BoxF
4465 1352 BoxF
4469 1250 BoxF
4471 1324 BoxF
4475 1337 BoxF
4488 1276 BoxF
4492 1201 BoxF
4495 1218 BoxF
4498 1194 BoxF
4501 1237 BoxF
4504 1137 BoxF
4507 1178 BoxF
4510 1357 BoxF
4513 1259 BoxF
4516 1189 BoxF
4519 1207 BoxF
4522 1220 BoxF
4834 1207 BoxF
4837 1332 BoxF
4841 1248 BoxF
4844 1359 BoxF
4847 1285 BoxF
4850 1418 BoxF
4853 1219 BoxF
4856 1241 BoxF
4859 1244 BoxF
4862 1381 BoxF
4865 1294 BoxF
4868 1328 BoxF
4882 1145 BoxF
4885 1127 BoxF
4888 1084 BoxF
4891 1153 BoxF
4894 1217 BoxF
4897 1191 BoxF
4900 1105 BoxF
4903 1143 BoxF
4906 1090 BoxF
4909 1101 BoxF
4912 988 BoxF
4915 1412 BoxF
5275 1553 BoxF
5280 1519 BoxF
5288 1556 BoxF
5292 1610 BoxF
5300 1517 BoxF
5304 1580 BoxF
5311 1456 BoxF
5316 1612 BoxF
5324 1369 BoxF
5328 1416 BoxF
5335 1453 BoxF
5347 1461 BoxF
5362 1496 BoxF
5367 1489 BoxF
5406 1208 BoxF
5412 1227 BoxF
5424 1189 BoxF
5431 1193 BoxF
5457 1380 BoxF
5460 1283 BoxF
5463 1406 BoxF
5466 1311 BoxF
5469 1245 BoxF
5473 1222 BoxF
5476 1234 BoxF
5479 1280 BoxF
5482 1326 BoxF
5485 1240 BoxF
5488 1263 BoxF
5491 1204 BoxF
5505 1287 BoxF
5508 1239 BoxF
5511 1313 BoxF
5514 1340 BoxF
5517 1284 BoxF
5520 1303 BoxF
5523 1247 BoxF
5527 1289 BoxF
5530 1304 BoxF
5532 1325 BoxF
5535 1206 BoxF
5538 1350 BoxF
5567 1299 BoxF
5570 1116 BoxF
5573 1157 BoxF
5576 1227 BoxF
5579 1230 BoxF
5582 1277 BoxF
5585 1236 BoxF
5588 1224 BoxF
5591 1224 BoxF
5595 1294 BoxF
5598 1185 BoxF
5601 1216 BoxF
5614 1119 BoxF
5618 1182 BoxF
5620 1074 BoxF
5624 1181 BoxF
5627 1250 BoxF
5630 1225 BoxF
5633 1202 BoxF
5636 1462 BoxF
5639 1134 BoxF
5642 1251 BoxF
5645 1126 BoxF
5648 1108 BoxF
5682 1263 BoxF
5697 1167 BoxF
5739 1499 BoxF
5743 1464 BoxF
5750 1798 BoxF
5755 1729 BoxF
5763 1697 BoxF
5766 1504 BoxF
5773 1390 BoxF
5778 1363 BoxF
5787 1820 BoxF
5799 1498 BoxF
5814 1540 BoxF
5819 1534 BoxF
5827 1442 BoxF
5832 1334 BoxF
6221 1218 BoxF
6262 1358 BoxF
6306 1468 BoxF
6320 1213 BoxF
6358 1406 BoxF
6368 1886 BoxF
6432 1463 BoxF
6451 1438 BoxF
6471 1505 BoxF
6594 4487 BoxF
1.000 UP
1.000 UL
LT2
LTb
6311 4347 M
[ [(Helvetica) 140.0 0.0 true true 0 (Corrected)]
] -46.7 MRshow
LT2
564 1081 BoxF
582 973 BoxF
617 1189 BoxF
622 1115 BoxF
630 979 BoxF
633 921 BoxF
640 902 BoxF
644 972 BoxF
651 1028 BoxF
656 991 BoxF
664 796 BoxF
668 790 BoxF
676 1116 BoxF
688 1107 BoxF
703 928 BoxF
708 983 BoxF
732 1189 BoxF
736 1163 BoxF
743 1154 BoxF
747 1129 BoxF
755 1191 BoxF
759 1202 BoxF
766 1095 BoxF
770 1063 BoxF
778 1084 BoxF
790 1168 BoxF
805 1127 BoxF
809 1179 BoxF
817 1080 BoxF
822 1077 BoxF
842 943 BoxF
893 1115 BoxF
928 1423 BoxF
966 1140 BoxF
969 1137 BoxF
976 1238 BoxF
979 1180 BoxF
985 990 BoxF
988 1089 BoxF
995 1373 BoxF
1017 1341 BoxF
1042 1060 BoxF
1048 1138 BoxF
1067 974 BoxF
1085 850 BoxF
1783 1147 BoxF
1786 1186 BoxF
1793 1082 BoxF
1798 1046 BoxF
1806 1356 BoxF
1809 1188 BoxF
1816 1184 BoxF
1820 1475 BoxF
1828 1238 BoxF
1840 1182 BoxF
1855 1102 BoxF
1859 1112 BoxF
1868 1107 BoxF
1872 1148 BoxF
2314 1804 BoxF
2318 1474 BoxF
2326 1507 BoxF
2330 1507 BoxF
2337 1843 BoxF
2341 1751 BoxF
2348 1578 BoxF
2353 1731 BoxF
2361 1432 BoxF
2365 1267 BoxF
2373 1688 BoxF
2385 1638 BoxF
2400 1896 BoxF
2405 1690 BoxF
2429 1530 BoxF
2656 1413 BoxF
2660 1333 BoxF
2668 1722 BoxF
2672 1699 BoxF
2679 1921 BoxF
2683 1810 BoxF
2690 1388 BoxF
2695 1198 BoxF
2703 1308 BoxF
2707 1210 BoxF
2715 1217 BoxF
2727 1142 BoxF
2742 1599 BoxF
2746 1273 BoxF
3074 1362 BoxF
3079 1387 BoxF
3087 1576 BoxF
3091 1354 BoxF
3097 1690 BoxF
3101 1597 BoxF
3108 1208 BoxF
3113 1225 BoxF
3121 1593 BoxF
3125 1522 BoxF
3133 1502 BoxF
3145 1385 BoxF
3160 1249 BoxF
3165 1217 BoxF
3197 1366 BoxF
3213 1253 BoxF
3286 1056 BoxF
3294 1069 BoxF
3305 1065 BoxF
3312 1068 BoxF
4441 1136 BoxF
4444 1088 BoxF
4447 1132 BoxF
4450 1130 BoxF
4453 1173 BoxF
4456 1095 BoxF
4459 1143 BoxF
4462 1148 BoxF
4465 1196 BoxF
4469 1111 BoxF
4471 1172 BoxF
4475 1183 BoxF
4488 1170 BoxF
4492 1104 BoxF
4495 1120 BoxF
4498 1099 BoxF
4501 1136 BoxF
4504 1048 BoxF
4507 1084 BoxF
4510 1241 BoxF
4513 1155 BoxF
4516 1093 BoxF
4519 1109 BoxF
4522 1125 BoxF
4834 1081 BoxF
4837 1186 BoxF
4841 1116 BoxF
4844 1213 BoxF
4847 1150 BoxF
4850 1263 BoxF
4853 1095 BoxF
4856 1114 BoxF
4859 1116 BoxF
4862 1231 BoxF
4865 1159 BoxF
4868 1187 BoxF
4882 1065 BoxF
4885 1049 BoxF
4888 1010 BoxF
4891 1072 BoxF
4894 1129 BoxF
4897 1106 BoxF
4900 1033 BoxF
4903 1067 BoxF
4906 1019 BoxF
4909 1029 BoxF
4912 928 BoxF
4915 1307 BoxF
5275 1386 BoxF
5280 1357 BoxF
5288 1469 BoxF
5292 1519 BoxF
5300 1478 BoxF
5304 1539 BoxF
5311 1354 BoxF
5316 1494 BoxF
5324 1362 BoxF
5328 1409 BoxF
5335 1271 BoxF
5347 1277 BoxF
5362 1363 BoxF
5367 1357 BoxF
5406 1099 BoxF
5412 1116 BoxF
5424 1119 BoxF
5431 1122 BoxF
5457 1261 BoxF
5460 1176 BoxF
5463 1285 BoxF
5466 1201 BoxF
5469 1143 BoxF
5473 1123 BoxF
5476 1133 BoxF
5479 1174 BoxF
5482 1214 BoxF
5485 1139 BoxF
5488 1159 BoxF
5491 1108 BoxF
5505 1221 BoxF
5508 1176 BoxF
5511 1244 BoxF
5514 1270 BoxF
5517 1217 BoxF
5520 1236 BoxF
5523 1184 BoxF
5527 1222 BoxF
5530 1236 BoxF
5532 1255 BoxF
5535 1146 BoxF
5538 1278 BoxF
5567 1194 BoxF
5570 1033 BoxF
5573 1069 BoxF
5576 1132 BoxF
5579 1133 BoxF
5582 1176 BoxF
5585 1139 BoxF
5588 1129 BoxF
5591 1128 BoxF
5595 1190 BoxF
5598 1094 BoxF
5601 1121 BoxF
5614 1069 BoxF
5618 1128 BoxF
5620 1027 BoxF
5624 1126 BoxF
5627 1190 BoxF
5630 1167 BoxF
5633 1146 BoxF
5636 1387 BoxF
5639 1083 BoxF
5642 1192 BoxF
5645 1079 BoxF
5648 1062 BoxF
5682 1082 BoxF
5697 1038 BoxF
5739 1131 BoxF
5743 1108 BoxF
5750 1261 BoxF
5755 1219 BoxF
5763 1305 BoxF
5766 1173 BoxF
5773 1116 BoxF
5778 1097 BoxF
5787 1256 BoxF
5799 1066 BoxF
5814 1139 BoxF
5819 1135 BoxF
5827 1097 BoxF
5832 1027 BoxF
6221 1191 BoxF
6262 1290 BoxF
6306 1204 BoxF
6320 1073 BoxF
6358 1117 BoxF
6368 1363 BoxF
6432 1056 BoxF
6451 1048 BoxF
6471 1094 BoxF
6594 4347 BoxF
1.000 UL
LTb
546 420 M
6416 0 V
0 4200 V
-6416 0 V
546 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
