%!PS-Adobe-2.0
%%Title: profiles/see_profile_2006_03_07.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Aug 20 11:53:07 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
546 420 M
63 0 V
6353 0 R
-63 0 V
stroke
462 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
546 1260 M
63 0 V
6353 0 R
-63 0 V
stroke
462 1260 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
546 2100 M
63 0 V
6353 0 R
-63 0 V
stroke
462 2100 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MRshow
1.000 UL
LTb
546 2940 M
63 0 V
6353 0 R
-63 0 V
stroke
462 2940 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MRshow
1.000 UL
LTb
546 3780 M
63 0 V
6353 0 R
-63 0 V
stroke
462 3780 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MRshow
1.000 UL
LTb
546 4620 M
63 0 V
6353 0 R
-63 0 V
stroke
462 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MRshow
1.000 UL
LTb
546 420 M
0 63 V
0 4137 R
0 -63 V
stroke
546 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (20h)]
] -46.7 MCshow
1.000 UL
LTb
838 420 M
0 31 V
0 4169 R
0 -31 V
1129 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1129 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (21h)]
] -46.7 MCshow
1.000 UL
LTb
1421 420 M
0 31 V
0 4169 R
0 -31 V
1713 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1713 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (22h)]
] -46.7 MCshow
1.000 UL
LTb
2004 420 M
0 31 V
0 4169 R
0 -31 V
2296 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2296 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (23h)]
] -46.7 MCshow
1.000 UL
LTb
2587 420 M
0 31 V
0 4169 R
0 -31 V
2879 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2879 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (00h)]
] -46.7 MCshow
1.000 UL
LTb
3171 420 M
0 31 V
0 4169 R
0 -31 V
3462 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3462 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (01h)]
] -46.7 MCshow
1.000 UL
LTb
3754 420 M
0 31 V
0 4169 R
0 -31 V
4046 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4046 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (02h)]
] -46.7 MCshow
1.000 UL
LTb
4337 420 M
0 31 V
0 4169 R
0 -31 V
4629 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4629 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (03h)]
] -46.7 MCshow
1.000 UL
LTb
4921 420 M
0 31 V
0 4169 R
0 -31 V
5212 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5212 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (04h)]
] -46.7 MCshow
1.000 UL
LTb
5504 420 M
0 31 V
0 4169 R
0 -31 V
5795 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5795 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (05h)]
] -46.7 MCshow
1.000 UL
LTb
6087 420 M
0 31 V
0 4169 R
0 -31 V
6379 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6379 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (06h)]
] -46.7 MCshow
1.000 UL
LTb
6670 420 M
0 31 V
0 4169 R
0 -31 V
6962 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6962 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (07h)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
546 420 M
6416 0 V
0 4200 V
-6416 0 V
546 420 L
LTb
140 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Seeing [arcsec])]
] -46.7 MCshow
grestore
LTb
3754 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Time [UT])]
] -46.7 MCshow
LTb
3754 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Seeing LT: \(Night starting: 2006-03-07 \))]
] -46.7 MCshow
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
6311 4487 M
[ [(Helvetica) 140.0 0.0 true true 0 (Raw)]
] -46.7 MRshow
LT0
694 4073 BoxF
761 1592 BoxF
776 1821 BoxF
780 1793 BoxF
788 1849 BoxF
792 1914 BoxF
801 1463 BoxF
804 1461 BoxF
810 1439 BoxF
814 1540 BoxF
820 1950 BoxF
825 1882 BoxF
832 1619 BoxF
836 1750 BoxF
851 1591 BoxF
854 1535 BoxF
865 2019 BoxF
873 1843 BoxF
877 1757 BoxF
885 1560 BoxF
888 1499 BoxF
895 1670 BoxF
898 1507 BoxF
917 1812 BoxF
931 1931 BoxF
936 1936 BoxF
1199 1636 BoxF
1217 1568 BoxF
1253 1729 BoxF
1271 1643 BoxF
1294 2056 BoxF
1312 2907 BoxF
1330 2068 BoxF
1349 2119 BoxF
1367 1802 BoxF
1414 1047 BoxF
1440 1542 BoxF
1444 1571 BoxF
1452 1339 BoxF
1455 1217 BoxF
1462 1137 BoxF
1465 1109 BoxF
1472 1425 BoxF
1476 1566 BoxF
1484 1198 BoxF
1489 1187 BoxF
1497 1438 BoxF
1509 1494 BoxF
1523 1457 BoxF
1528 1560 BoxF
1557 2118 BoxF
1581 1910 BoxF
1628 2037 BoxF
1666 1795 BoxF
1706 1893 BoxF
1710 1953 BoxF
1718 1632 BoxF
1721 1376 BoxF
1727 1250 BoxF
1731 1342 BoxF
1737 1717 BoxF
1741 1576 BoxF
1749 1204 BoxF
1753 1295 BoxF
1760 2085 BoxF
1772 2010 BoxF
1786 1727 BoxF
1790 1762 BoxF
1825 1387 BoxF
1839 1352 BoxF
1853 1359 BoxF
1867 1318 BoxF
1881 1404 BoxF
1895 1359 BoxF
1908 1381 BoxF
1922 1442 BoxF
1936 1427 BoxF
1950 1409 BoxF
1964 1493 BoxF
1978 1412 BoxF
1992 1484 BoxF
2048 1879 BoxF
2066 1795 BoxF
2084 1458 BoxF
2102 1747 BoxF
2120 1918 BoxF
2138 1629 BoxF
2156 1816 BoxF
2174 1320 BoxF
2193 1012 BoxF
2211 1660 BoxF
2237 1287 BoxF
2255 1375 BoxF
2273 1283 BoxF
2291 1535 BoxF
2325 1707 BoxF
2403 2525 BoxF
2421 2484 BoxF
2439 1082 BoxF
2475 1063 BoxF
2494 1001 BoxF
2512 2237 BoxF
2530 933 BoxF
2548 1127 BoxF
2566 2132 BoxF
2625 1862 BoxF
2629 1723 BoxF
2637 1315 BoxF
2640 1407 BoxF
2647 1411 BoxF
2650 1261 BoxF
2657 1653 BoxF
2661 1591 BoxF
2669 1278 BoxF
2672 1313 BoxF
2680 2035 BoxF
2691 1697 BoxF
2706 1552 BoxF
2711 1660 BoxF
2735 1703 BoxF
2739 1653 BoxF
2747 1273 BoxF
2750 1266 BoxF
2757 1186 BoxF
2760 1150 BoxF
2766 1455 BoxF
2771 1634 BoxF
2779 1175 BoxF
2783 1222 BoxF
2791 1512 BoxF
2803 1453 BoxF
2818 1564 BoxF
2822 1893 BoxF
2857 1831 BoxF
2881 1853 BoxF
2918 1949 BoxF
2936 1973 BoxF
2954 1923 BoxF
2972 2098 BoxF
2991 2015 BoxF
3009 1942 BoxF
3027 1917 BoxF
3051 1853 BoxF
3070 1864 BoxF
3088 1833 BoxF
3106 1899 BoxF
3124 1901 BoxF
3142 1887 BoxF
3161 1952 BoxF
3179 1884 BoxF
3197 1927 BoxF
3222 1843 BoxF
3240 1855 BoxF
3258 1796 BoxF
3277 1872 BoxF
3295 1819 BoxF
3313 1351 BoxF
3331 1822 BoxF
3349 1934 BoxF
3367 1836 BoxF
3401 1815 BoxF
3462 1311 BoxF
3498 1368 BoxF
3522 1171 BoxF
3540 1184 BoxF
3558 1113 BoxF
3594 1229 BoxF
3612 1155 BoxF
3631 1123 BoxF
3649 1161 BoxF
3667 1097 BoxF
3685 1082 BoxF
3725 1530 BoxF
3741 1795 BoxF
3782 1800 BoxF
3787 1809 BoxF
3795 1415 BoxF
3798 1413 BoxF
3804 1250 BoxF
3807 1321 BoxF
3814 1567 BoxF
3818 1602 BoxF
3826 1248 BoxF
3830 1208 BoxF
3837 1679 BoxF
3848 1735 BoxF
3863 1719 BoxF
3868 1786 BoxF
3891 1472 BoxF
3922 1611 BoxF
3940 1358 BoxF
3958 1506 BoxF
3976 1497 BoxF
4000 1398 BoxF
4018 1331 BoxF
4036 1246 BoxF
4054 1361 BoxF
4072 1404 BoxF
4090 1251 BoxF
4109 1340 BoxF
4127 1273 BoxF
4145 1402 BoxF
4163 1431 BoxF
4204 1698 BoxF
4230 1440 BoxF
4250 1547 BoxF
4268 1480 BoxF
4287 1567 BoxF
4305 1605 BoxF
4323 1544 BoxF
4341 1594 BoxF
4359 1662 BoxF
4377 2394 BoxF
4395 1512 BoxF
4414 1557 BoxF
4472 1582 BoxF
4507 1552 BoxF
4525 1566 BoxF
4543 1613 BoxF
4561 1653 BoxF
4579 1523 BoxF
4597 1626 BoxF
4616 1639 BoxF
4634 1521 BoxF
4652 1551 BoxF
4670 1545 BoxF
4696 1537 BoxF
4715 1646 BoxF
4733 1986 BoxF
4751 1783 BoxF
4789 1709 BoxF
4803 3071 BoxF
4825 3354 BoxF
4829 1633 BoxF
4835 2267 BoxF
4839 2419 BoxF
4847 1437 BoxF
4851 1430 BoxF
4859 1276 BoxF
4862 1303 BoxF
4869 1947 BoxF
4872 1994 BoxF
4879 2261 BoxF
4891 2196 BoxF
4906 1615 BoxF
4910 1585 BoxF
4942 1858 BoxF
4957 1569 BoxF
4998 2373 BoxF
5020 1236 BoxF
5092 1020 BoxF
5110 1033 BoxF
5147 940 BoxF
5165 1018 BoxF
5190 1165 BoxF
5208 1184 BoxF
5299 779 BoxF
5378 1162 BoxF
5536 2651 BoxF
5565 1344 BoxF
5569 2245 BoxF
5575 2175 BoxF
5579 2094 BoxF
5587 1581 BoxF
5592 1449 BoxF
5599 1346 BoxF
5602 1375 BoxF
5609 1984 BoxF
5612 1957 BoxF
5619 2190 BoxF
5631 2169 BoxF
5645 1600 BoxF
5650 1623 BoxF
5669 2299 BoxF
5691 2202 BoxF
5709 2274 BoxF
5727 2178 BoxF
5745 2175 BoxF
5763 2139 BoxF
5781 2152 BoxF
5799 2209 BoxF
5817 2211 BoxF
5835 2142 BoxF
5861 2191 BoxF
5879 2185 BoxF
5897 2254 BoxF
5915 2132 BoxF
5933 2267 BoxF
5952 2162 BoxF
5970 2251 BoxF
5988 2321 BoxF
6006 2239 BoxF
6031 2966 BoxF
6049 2211 BoxF
6068 2210 BoxF
6086 2253 BoxF
6104 2311 BoxF
6122 2220 BoxF
6141 2261 BoxF
6159 2240 BoxF
6177 2185 BoxF
6208 2242 BoxF
6235 1872 BoxF
6267 1192 BoxF
6281 877 BoxF
6308 836 BoxF
6322 836 BoxF
6336 1153 BoxF
6350 685 BoxF
6364 600 BoxF
6378 841 BoxF
6392 903 BoxF
6406 838 BoxF
6419 1197 BoxF
6433 867 BoxF
6447 803 BoxF
6475 1253 BoxF
6489 1235 BoxF
6503 805 BoxF
6516 645 BoxF
6594 4487 BoxF
1.000 UP
1.000 UL
LT2
LTb
6311 4347 M
[ [(Helvetica) 140.0 0.0 true true 0 (Corrected)]
] -46.7 MRshow
LT2
694 3863 BoxF
761 1136 BoxF
776 1351 BoxF
780 1332 BoxF
788 1340 BoxF
792 1382 BoxF
801 1178 BoxF
804 1175 BoxF
810 1137 BoxF
814 1206 BoxF
820 1366 BoxF
825 1324 BoxF
832 1220 BoxF
836 1307 BoxF
851 1196 BoxF
854 1159 BoxF
865 1393 BoxF
873 1333 BoxF
877 1277 BoxF
885 1200 BoxF
888 1156 BoxF
895 1295 BoxF
898 1181 BoxF
917 1223 BoxF
931 1342 BoxF
936 1343 BoxF
1199 1327 BoxF
1217 1270 BoxF
1253 1378 BoxF
1271 1312 BoxF
1294 1514 BoxF
1312 2077 BoxF
1330 1510 BoxF
1349 1536 BoxF
1367 1324 BoxF
1414 1001 BoxF
1440 1351 BoxF
1444 1376 BoxF
1452 1246 BoxF
1455 1137 BoxF
1462 1094 BoxF
1465 1067 BoxF
1472 1302 BoxF
1476 1426 BoxF
1484 1172 BoxF
1489 1162 BoxF
1497 1236 BoxF
1509 1282 BoxF
1523 1305 BoxF
1528 1393 BoxF
1557 1938 BoxF
1581 1691 BoxF
1628 1733 BoxF
1666 1601 BoxF
1706 1416 BoxF
1710 1460 BoxF
1718 1311 BoxF
1721 1122 BoxF
1727 1060 BoxF
1731 1130 BoxF
1737 1354 BoxF
1741 1255 BoxF
1749 1044 BoxF
1753 1119 BoxF
1760 1523 BoxF
1772 1478 BoxF
1786 1349 BoxF
1790 1374 BoxF
1825 1284 BoxF
1839 1253 BoxF
1853 1259 BoxF
1867 1222 BoxF
1881 1299 BoxF
1895 1259 BoxF
1908 1279 BoxF
1922 1329 BoxF
1936 1315 BoxF
1950 1299 BoxF
1964 1374 BoxF
1978 1302 BoxF
1992 1366 BoxF
2048 1724 BoxF
2066 1655 BoxF
2084 1352 BoxF
2102 1618 BoxF
2120 1773 BoxF
2138 1517 BoxF
2156 1688 BoxF
2174 1241 BoxF
2193 960 BoxF
2211 1552 BoxF
2237 1207 BoxF
2255 1288 BoxF
2273 1209 BoxF
2291 1438 BoxF
2325 1505 BoxF
2403 2229 BoxF
2421 2202 BoxF
2439 994 BoxF
2475 980 BoxF
2494 927 BoxF
2512 2012 BoxF
2530 869 BoxF
2548 1043 BoxF
2566 1928 BoxF
2625 1570 BoxF
2629 1459 BoxF
2637 1197 BoxF
2640 1277 BoxF
2647 1319 BoxF
2650 1183 BoxF
2657 1465 BoxF
2661 1413 BoxF
2669 1221 BoxF
2672 1254 BoxF
2680 1676 BoxF
2691 1413 BoxF
2706 1357 BoxF
2711 1446 BoxF
2735 1383 BoxF
2739 1341 BoxF
2747 1110 BoxF
2750 1105 BoxF
2757 1067 BoxF
2760 1037 BoxF
2766 1234 BoxF
2771 1375 BoxF
2779 1074 BoxF
2783 1115 BoxF
2791 1202 BoxF
2803 1159 BoxF
2818 1288 BoxF
2822 1537 BoxF
2857 1551 BoxF
2881 1563 BoxF
2918 1646 BoxF
2936 1665 BoxF
2954 1625 BoxF
2972 1773 BoxF
2991 1706 BoxF
3009 1647 BoxF
3027 1633 BoxF
3051 1581 BoxF
3070 1590 BoxF
3088 1571 BoxF
3106 1625 BoxF
3124 1626 BoxF
3142 1621 BoxF
3161 1675 BoxF
3179 1619 BoxF
3197 1654 BoxF
3222 1592 BoxF
3240 1602 BoxF
3258 1553 BoxF
3277 1616 BoxF
3295 1578 BoxF
3313 1191 BoxF
3331 1581 BoxF
3349 1674 BoxF
3367 1599 BoxF
3401 1550 BoxF
3462 1230 BoxF
3498 1286 BoxF
3522 1112 BoxF
3540 1128 BoxF
3558 1063 BoxF
3594 1174 BoxF
3612 1106 BoxF
3631 1076 BoxF
3649 1111 BoxF
3667 1054 BoxF
3685 1040 BoxF
3725 1399 BoxF
3741 1702 BoxF
3782 1566 BoxF
3787 1573 BoxF
3795 1314 BoxF
3798 1313 BoxF
3804 1199 BoxF
3807 1267 BoxF
3814 1421 BoxF
3818 1453 BoxF
3826 1217 BoxF
3830 1178 BoxF
3837 1424 BoxF
3848 1469 BoxF
3863 1523 BoxF
3868 1580 BoxF
3891 1390 BoxF
3922 1491 BoxF
3940 1268 BoxF
3958 1401 BoxF
3976 1393 BoxF
4000 1313 BoxF
4018 1251 BoxF
4036 1177 BoxF
4054 1283 BoxF
4072 1323 BoxF
4090 1182 BoxF
4109 1264 BoxF
4127 1203 BoxF
4145 1320 BoxF
4163 1352 BoxF
4204 1625 BoxF
4230 1393 BoxF
4250 1370 BoxF
4268 1314 BoxF
4287 1387 BoxF
4305 1419 BoxF
4323 1372 BoxF
4341 1415 BoxF
4359 1472 BoxF
4377 2092 BoxF
4395 1346 BoxF
4414 1384 BoxF
4472 1429 BoxF
4507 1469 BoxF
4525 1488 BoxF
4543 1532 BoxF
4561 1569 BoxF
4579 1448 BoxF
4597 1550 BoxF
4616 1563 BoxF
4634 1452 BoxF
4652 1480 BoxF
4670 1481 BoxF
4696 1462 BoxF
4715 1565 BoxF
4733 1890 BoxF
4751 1699 BoxF
4789 1518 BoxF
4803 2892 BoxF
4825 2651 BoxF
4829 1343 BoxF
4835 1722 BoxF
4839 1829 BoxF
4847 1178 BoxF
4851 1173 BoxF
4859 1105 BoxF
4862 1127 BoxF
4869 1679 BoxF
4872 1718 BoxF
4879 1684 BoxF
4891 1639 BoxF
4906 1296 BoxF
4910 1274 BoxF
4942 1695 BoxF
4957 1497 BoxF
4998 1994 BoxF
5020 1071 BoxF
5092 899 BoxF
5110 912 BoxF
5147 837 BoxF
5165 900 BoxF
5190 1017 BoxF
5208 1032 BoxF
5299 708 BoxF
5378 1012 BoxF
5536 2200 BoxF
5565 1199 BoxF
5569 1958 BoxF
5575 1787 BoxF
5579 1723 BoxF
5587 1376 BoxF
5592 1267 BoxF
5599 1235 BoxF
5602 1261 BoxF
5609 1838 BoxF
5612 1813 BoxF
5619 1751 BoxF
5631 1742 BoxF
5645 1369 BoxF
5650 1387 BoxF
5669 1959 BoxF
5691 1880 BoxF
5709 1938 BoxF
5727 1860 BoxF
5745 1865 BoxF
5763 1836 BoxF
5781 1846 BoxF
5799 1893 BoxF
5817 1895 BoxF
5835 1838 BoxF
5861 1878 BoxF
5879 1874 BoxF
5897 1931 BoxF
5915 1830 BoxF
5933 1950 BoxF
5952 1862 BoxF
5970 1936 BoxF
5988 1994 BoxF
6006 1927 BoxF
6031 2528 BoxF
6049 1903 BoxF
6068 1902 BoxF
6086 1938 BoxF
6104 1986 BoxF
6122 1911 BoxF
6141 1944 BoxF
6159 1927 BoxF
6177 1881 BoxF
6208 1937 BoxF
6235 1650 BoxF
6267 1107 BoxF
6281 826 BoxF
6308 788 BoxF
6322 786 BoxF
6336 1065 BoxF
6350 653 BoxF
6364 577 BoxF
6378 788 BoxF
6392 840 BoxF
6406 783 BoxF
6419 1092 BoxF
6433 805 BoxF
6447 750 BoxF
6475 1131 BoxF
6489 1116 BoxF
6503 747 BoxF
6516 610 BoxF
6594 4347 BoxF
1.000 UL
LTb
546 420 M
6416 0 V
0 4200 V
-6416 0 V
546 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
