%!PS-Adobe-2.0
%%Title: profiles/see_profile_2006_09_04.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Aug 20 12:00:15 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
546 420 M
63 0 V
6353 0 R
-63 0 V
stroke
462 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
546 1260 M
63 0 V
6353 0 R
-63 0 V
stroke
462 1260 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
546 2100 M
63 0 V
6353 0 R
-63 0 V
stroke
462 2100 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MRshow
1.000 UL
LTb
546 2940 M
63 0 V
6353 0 R
-63 0 V
stroke
462 2940 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MRshow
1.000 UL
LTb
546 3780 M
63 0 V
6353 0 R
-63 0 V
stroke
462 3780 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MRshow
1.000 UL
LTb
546 4620 M
63 0 V
6353 0 R
-63 0 V
stroke
462 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MRshow
1.000 UL
LTb
546 420 M
0 63 V
0 4137 R
0 -63 V
stroke
546 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (20h)]
] -46.7 MCshow
1.000 UL
LTb
838 420 M
0 31 V
0 4169 R
0 -31 V
1129 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1129 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (21h)]
] -46.7 MCshow
1.000 UL
LTb
1421 420 M
0 31 V
0 4169 R
0 -31 V
1713 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1713 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (22h)]
] -46.7 MCshow
1.000 UL
LTb
2004 420 M
0 31 V
0 4169 R
0 -31 V
2296 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2296 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (23h)]
] -46.7 MCshow
1.000 UL
LTb
2587 420 M
0 31 V
0 4169 R
0 -31 V
2879 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2879 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (00h)]
] -46.7 MCshow
1.000 UL
LTb
3171 420 M
0 31 V
0 4169 R
0 -31 V
3462 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3462 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (01h)]
] -46.7 MCshow
1.000 UL
LTb
3754 420 M
0 31 V
0 4169 R
0 -31 V
4046 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4046 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (02h)]
] -46.7 MCshow
1.000 UL
LTb
4337 420 M
0 31 V
0 4169 R
0 -31 V
4629 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4629 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (03h)]
] -46.7 MCshow
1.000 UL
LTb
4921 420 M
0 31 V
0 4169 R
0 -31 V
5212 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5212 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (04h)]
] -46.7 MCshow
1.000 UL
LTb
5504 420 M
0 31 V
0 4169 R
0 -31 V
5795 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5795 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (05h)]
] -46.7 MCshow
1.000 UL
LTb
6087 420 M
0 31 V
0 4169 R
0 -31 V
6379 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6379 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (06h)]
] -46.7 MCshow
1.000 UL
LTb
6670 420 M
0 31 V
0 4169 R
0 -31 V
6962 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6962 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (07h)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
546 420 M
6416 0 V
0 4200 V
-6416 0 V
546 420 L
LTb
140 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Seeing [arcsec])]
] -46.7 MCshow
grestore
LTb
3754 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Time [UT])]
] -46.7 MCshow
LTb
3754 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Seeing LT: \(Night starting: 2006-09-04 \))]
] -46.7 MCshow
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
6311 4487 M
[ [(Helvetica) 140.0 0.0 true true 0 (Raw)]
] -46.7 MRshow
LT0
548 1213 BoxF
552 2095 BoxF
559 861 BoxF
562 1461 BoxF
589 1683 BoxF
593 1728 BoxF
600 1456 BoxF
603 1513 BoxF
610 1871 BoxF
614 1881 BoxF
621 1651 BoxF
626 1730 BoxF
640 1842 BoxF
644 2130 BoxF
651 1658 BoxF
654 1572 BoxF
661 1958 BoxF
664 1957 BoxF
672 2213 BoxF
676 2177 BoxF
691 1396 BoxF
695 1324 BoxF
702 1737 BoxF
705 1589 BoxF
712 2081 BoxF
715 2030 BoxF
723 2066 BoxF
727 1850 BoxF
742 1411 BoxF
746 1433 BoxF
752 1577 BoxF
756 1838 BoxF
763 2058 BoxF
766 2177 BoxF
774 2114 BoxF
778 2264 BoxF
797 1476 BoxF
815 1400 BoxF
846 1716 BoxF
877 1541 BoxF
912 1167 BoxF
943 1848 BoxF
987 1771 BoxF
1006 1665 BoxF
1037 1579 BoxF
1055 2239 BoxF
1086 1900 BoxF
1098 1878 BoxF
1113 1923 BoxF
1125 1763 BoxF
1149 1392 BoxF
1166 1513 BoxF
1186 1375 BoxF
1203 1453 BoxF
1232 1737 BoxF
1251 1598 BoxF
1273 1702 BoxF
1291 1644 BoxF
1322 1657 BoxF
1340 1558 BoxF
1371 1669 BoxF
1389 1670 BoxF
1431 1312 BoxF
1439 1363 BoxF
1448 1640 BoxF
1461 1458 BoxF
1466 1387 BoxF
1472 1318 BoxF
1502 1581 BoxF
1520 1678 BoxF
1551 1552 BoxF
1570 1537 BoxF
1589 1511 BoxF
1608 1513 BoxF
1627 1479 BoxF
1645 1530 BoxF
1664 1517 BoxF
1683 1455 BoxF
1702 1466 BoxF
1721 1488 BoxF
1757 1217 BoxF
1776 1490 BoxF
1815 2520 BoxF
1820 2501 BoxF
1828 2279 BoxF
1831 2468 BoxF
1838 1880 BoxF
1842 1802 BoxF
1849 1919 BoxF
1854 2753 BoxF
1862 2172 BoxF
1866 2146 BoxF
1873 1858 BoxF
1885 1332 BoxF
1900 2667 BoxF
1905 2579 BoxF
2341 2328 BoxF
2436 1592 BoxF
2494 801 BoxF
2552 1364 BoxF
2609 1343 BoxF
2667 1612 BoxF
2725 1714 BoxF
2783 1539 BoxF
2840 1567 BoxF
2898 1392 BoxF
2974 1672 BoxF
2979 1791 BoxF
2987 1323 BoxF
2991 1368 BoxF
2997 1460 BoxF
3001 1387 BoxF
3008 1514 BoxF
3013 1354 BoxF
3021 1414 BoxF
3025 1242 BoxF
3032 1390 BoxF
3044 1334 BoxF
3059 1353 BoxF
3064 1665 BoxF
3087 1242 BoxF
3187 1263 BoxF
3286 1299 BoxF
3393 1013 BoxF
3444 1250 BoxF
3605 1128 BoxF
3714 1107 BoxF
3924 1579 BoxF
3929 1356 BoxF
3947 977 BoxF
3951 1316 BoxF
3958 1089 BoxF
3963 1382 BoxF
3971 1138 BoxF
3974 977 BoxF
4009 1315 BoxF
4014 1456 BoxF
4145 1224 BoxF
4355 1678 BoxF
4406 1541 BoxF
4457 1504 BoxF
4572 1565 BoxF
4623 1684 BoxF
4689 1362 BoxF
4740 1629 BoxF
4791 1546 BoxF
4852 1527 BoxF
4951 1641 BoxF
5051 1678 BoxF
5286 1299 BoxF
5289 1129 BoxF
5292 1278 BoxF
5295 1203 BoxF
5299 1409 BoxF
5302 1248 BoxF
5305 1283 BoxF
5308 1515 BoxF
5311 1264 BoxF
5314 1412 BoxF
5317 1508 BoxF
5320 1590 BoxF
5323 1480 BoxF
5326 1536 BoxF
5329 1580 BoxF
5332 1591 BoxF
5335 1681 BoxF
5338 1688 BoxF
5341 1803 BoxF
5344 1544 BoxF
5385 1709 BoxF
5401 1310 BoxF
5443 2458 BoxF
5446 2044 BoxF
5449 1898 BoxF
5452 1892 BoxF
5455 1841 BoxF
5458 1937 BoxF
5462 1836 BoxF
5465 1766 BoxF
5477 1685 BoxF
5481 1510 BoxF
5484 1830 BoxF
5487 1313 BoxF
5490 1557 BoxF
5493 1749 BoxF
5496 1485 BoxF
5538 1706 BoxF
5554 1499 BoxF
5580 1554 BoxF
5583 1735 BoxF
5586 1753 BoxF
5589 1551 BoxF
5592 1607 BoxF
5595 1650 BoxF
5598 1809 BoxF
5601 1984 BoxF
5604 1588 BoxF
5608 1378 BoxF
5611 1602 BoxF
5614 1619 BoxF
5627 1374 BoxF
5630 1333 BoxF
5633 1389 BoxF
5636 1541 BoxF
5639 1621 BoxF
5642 1733 BoxF
5645 1670 BoxF
5649 1507 BoxF
5652 1428 BoxF
5654 1561 BoxF
5658 1405 BoxF
5660 1186 BoxF
5819 1187 BoxF
5848 1357 BoxF
5887 1154 BoxF
6047 2880 BoxF
6066 3568 BoxF
6084 3464 BoxF
6102 3468 BoxF
6130 1653 BoxF
6149 1773 BoxF
6167 1708 BoxF
6186 1628 BoxF
6226 1687 BoxF
6236 2055 BoxF
6278 1544 BoxF
6292 1876 BoxF
6332 1552 BoxF
6335 1533 BoxF
6338 1534 BoxF
6341 1510 BoxF
6344 1424 BoxF
6347 1450 BoxF
6350 1392 BoxF
6353 1393 BoxF
6356 1626 BoxF
6359 1355 BoxF
6362 1540 BoxF
6365 1540 BoxF
6369 1462 BoxF
6372 1484 BoxF
6375 1449 BoxF
6378 1517 BoxF
6381 1546 BoxF
6384 1504 BoxF
6594 4487 BoxF
1.000 UP
1.000 UL
LT2
LTb
6311 4347 M
[ [(Helvetica) 140.0 0.0 true true 0 (Corrected)]
] -46.7 MRshow
LT2
548 1175 BoxF
552 2015 BoxF
559 811 BoxF
562 1346 BoxF
589 1594 BoxF
593 1636 BoxF
600 1412 BoxF
603 1466 BoxF
610 1711 BoxF
614 1720 BoxF
621 1460 BoxF
626 1527 BoxF
640 1742 BoxF
644 2018 BoxF
651 1611 BoxF
654 1528 BoxF
661 1795 BoxF
664 1795 BoxF
672 1942 BoxF
676 1911 BoxF
691 1331 BoxF
695 1265 BoxF
702 1687 BoxF
705 1544 BoxF
712 1905 BoxF
715 1860 BoxF
723 1817 BoxF
727 1634 BoxF
742 1346 BoxF
746 1372 BoxF
752 1538 BoxF
756 1791 BoxF
763 1892 BoxF
766 2000 BoxF
774 1865 BoxF
778 1994 BoxF
797 1123 BoxF
815 1072 BoxF
846 1296 BoxF
877 1178 BoxF
912 946 BoxF
943 1425 BoxF
987 1327 BoxF
1006 1256 BoxF
1037 1193 BoxF
1055 1633 BoxF
1086 1411 BoxF
1098 1393 BoxF
1113 1468 BoxF
1125 1356 BoxF
1149 1053 BoxF
1166 1129 BoxF
1186 1068 BoxF
1203 1118 BoxF
1232 1264 BoxF
1251 1175 BoxF
1273 1276 BoxF
1291 1235 BoxF
1322 1225 BoxF
1340 1159 BoxF
1371 1220 BoxF
1389 1219 BoxF
1431 1267 BoxF
1439 1315 BoxF
1448 1579 BoxF
1461 1449 BoxF
1466 1379 BoxF
1472 1311 BoxF
1502 1158 BoxF
1520 1217 BoxF
1551 1232 BoxF
1570 1218 BoxF
1589 1197 BoxF
1608 1195 BoxF
1627 1171 BoxF
1645 1205 BoxF
1664 1192 BoxF
1683 1146 BoxF
1702 1152 BoxF
1721 1164 BoxF
1757 900 BoxF
1776 1061 BoxF
1815 1748 BoxF
1820 1736 BoxF
1828 1697 BoxF
1831 1827 BoxF
1838 1472 BoxF
1842 1415 BoxF
1849 1433 BoxF
1854 2001 BoxF
1862 1728 BoxF
1866 1713 BoxF
1873 1316 BoxF
1885 990 BoxF
1900 1921 BoxF
1905 1862 BoxF
2341 1643 BoxF
2436 1347 BoxF
2494 727 BoxF
2552 1188 BoxF
2609 1181 BoxF
2667 1415 BoxF
2725 1510 BoxF
2783 1375 BoxF
2840 1407 BoxF
2898 1264 BoxF
2974 1439 BoxF
2979 1535 BoxF
2987 1215 BoxF
2991 1255 BoxF
2997 1377 BoxF
3001 1310 BoxF
3008 1366 BoxF
3013 1228 BoxF
3021 1367 BoxF
3025 1203 BoxF
3032 1186 BoxF
3044 1142 BoxF
3059 1208 BoxF
3064 1472 BoxF
3087 1090 BoxF
3187 1110 BoxF
3286 1140 BoxF
3393 937 BoxF
3444 1143 BoxF
3605 1070 BoxF
3714 1076 BoxF
3924 1234 BoxF
3929 1078 BoxF
3947 864 BoxF
3951 1138 BoxF
3958 921 BoxF
3963 1140 BoxF
3971 1014 BoxF
3974 881 BoxF
4009 1079 BoxF
4014 1183 BoxF
4145 1062 BoxF
4355 1462 BoxF
4406 1344 BoxF
4457 1308 BoxF
4572 1394 BoxF
4623 1486 BoxF
4689 1242 BoxF
4740 1465 BoxF
4791 1385 BoxF
4852 1384 BoxF
4951 1461 BoxF
5051 1470 BoxF
5286 1227 BoxF
5289 1071 BoxF
5292 1208 BoxF
5295 1139 BoxF
5299 1329 BoxF
5302 1180 BoxF
5305 1212 BoxF
5308 1431 BoxF
5311 1199 BoxF
5314 1336 BoxF
5317 1425 BoxF
5320 1501 BoxF
5323 1399 BoxF
5326 1450 BoxF
5329 1491 BoxF
5332 1501 BoxF
5335 1585 BoxF
5338 1591 BoxF
5341 1696 BoxF
5344 1457 BoxF
5385 1482 BoxF
5401 1193 BoxF
5443 2124 BoxF
5446 1778 BoxF
5449 1656 BoxF
5452 1651 BoxF
5455 1608 BoxF
5458 1688 BoxF
5462 1604 BoxF
5465 1545 BoxF
5477 1540 BoxF
5481 1385 BoxF
5484 1668 BoxF
5487 1211 BoxF
5490 1426 BoxF
5493 1596 BoxF
5496 1363 BoxF
5538 1529 BoxF
5554 1401 BoxF
5580 1393 BoxF
5583 1548 BoxF
5586 1564 BoxF
5589 1390 BoxF
5592 1439 BoxF
5595 1475 BoxF
5598 1612 BoxF
5601 1762 BoxF
5604 1422 BoxF
5608 1241 BoxF
5611 1434 BoxF
5614 1449 BoxF
5627 1282 BoxF
5630 1245 BoxF
5633 1295 BoxF
5636 1438 BoxF
5639 1511 BoxF
5642 1613 BoxF
5645 1555 BoxF
5649 1408 BoxF
5652 1335 BoxF
5654 1456 BoxF
5658 1315 BoxF
5660 1116 BoxF
5819 1140 BoxF
5848 1241 BoxF
5887 1097 BoxF
6047 2186 BoxF
6066 2680 BoxF
6084 2613 BoxF
6102 2616 BoxF
6130 1300 BoxF
6149 1386 BoxF
6167 1339 BoxF
6186 1282 BoxF
6226 1499 BoxF
6236 1692 BoxF
6278 1165 BoxF
6292 1481 BoxF
6332 1448 BoxF
6335 1431 BoxF
6338 1427 BoxF
6341 1405 BoxF
6344 1327 BoxF
6347 1351 BoxF
6350 1299 BoxF
6353 1299 BoxF
6356 1509 BoxF
6359 1265 BoxF
6362 1432 BoxF
6365 1432 BoxF
6369 1362 BoxF
6372 1382 BoxF
6375 1350 BoxF
6378 1411 BoxF
6381 1437 BoxF
6384 1399 BoxF
6594 4347 BoxF
1.000 UL
LTb
546 420 M
6416 0 V
0 4200 V
-6416 0 V
546 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
