%!PS-Adobe-2.0
%%Title: profiles/see_profile_2006_09_14.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Aug 20 12:00:38 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
546 420 M
63 0 V
6353 0 R
-63 0 V
stroke
462 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
546 1260 M
63 0 V
6353 0 R
-63 0 V
stroke
462 1260 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
546 2100 M
63 0 V
6353 0 R
-63 0 V
stroke
462 2100 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MRshow
1.000 UL
LTb
546 2940 M
63 0 V
6353 0 R
-63 0 V
stroke
462 2940 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MRshow
1.000 UL
LTb
546 3780 M
63 0 V
6353 0 R
-63 0 V
stroke
462 3780 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MRshow
1.000 UL
LTb
546 4620 M
63 0 V
6353 0 R
-63 0 V
stroke
462 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MRshow
1.000 UL
LTb
546 420 M
0 63 V
0 4137 R
0 -63 V
stroke
546 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (20h)]
] -46.7 MCshow
1.000 UL
LTb
838 420 M
0 31 V
0 4169 R
0 -31 V
1129 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1129 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (21h)]
] -46.7 MCshow
1.000 UL
LTb
1421 420 M
0 31 V
0 4169 R
0 -31 V
1713 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1713 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (22h)]
] -46.7 MCshow
1.000 UL
LTb
2004 420 M
0 31 V
0 4169 R
0 -31 V
2296 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2296 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (23h)]
] -46.7 MCshow
1.000 UL
LTb
2587 420 M
0 31 V
0 4169 R
0 -31 V
2879 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2879 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (00h)]
] -46.7 MCshow
1.000 UL
LTb
3171 420 M
0 31 V
0 4169 R
0 -31 V
3462 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3462 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (01h)]
] -46.7 MCshow
1.000 UL
LTb
3754 420 M
0 31 V
0 4169 R
0 -31 V
4046 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4046 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (02h)]
] -46.7 MCshow
1.000 UL
LTb
4337 420 M
0 31 V
0 4169 R
0 -31 V
4629 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4629 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (03h)]
] -46.7 MCshow
1.000 UL
LTb
4921 420 M
0 31 V
0 4169 R
0 -31 V
5212 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5212 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (04h)]
] -46.7 MCshow
1.000 UL
LTb
5504 420 M
0 31 V
0 4169 R
0 -31 V
5795 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5795 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (05h)]
] -46.7 MCshow
1.000 UL
LTb
6087 420 M
0 31 V
0 4169 R
0 -31 V
6379 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6379 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (06h)]
] -46.7 MCshow
1.000 UL
LTb
6670 420 M
0 31 V
0 4169 R
0 -31 V
6962 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6962 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (07h)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
546 420 M
6416 0 V
0 4200 V
-6416 0 V
546 420 L
LTb
140 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Seeing [arcsec])]
] -46.7 MCshow
grestore
LTb
3754 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Time [UT])]
] -46.7 MCshow
LTb
3754 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Seeing LT: \(Night starting: 2006-09-14 \))]
] -46.7 MCshow
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
6311 4487 M
[ [(Helvetica) 140.0 0.0 true true 0 (Raw)]
] -46.7 MRshow
LT0
663 1292 BoxF
681 1352 BoxF
712 1178 BoxF
744 1276 BoxF
779 1136 BoxF
811 1169 BoxF
855 1168 BoxF
873 1153 BoxF
905 1076 BoxF
923 1251 BoxF
945 1168 BoxF
964 1184 BoxF
995 1148 BoxF
1014 1109 BoxF
1045 1032 BoxF
1057 1096 BoxF
1073 1062 BoxF
1085 1107 BoxF
1110 1112 BoxF
1128 1109 BoxF
1214 1142 BoxF
1221 1139 BoxF
1228 1157 BoxF
1235 1145 BoxF
1241 1195 BoxF
1248 1134 BoxF
1255 1066 BoxF
1262 1103 BoxF
1281 966 BoxF
1285 931 BoxF
1291 946 BoxF
1295 973 BoxF
1311 928 BoxF
1315 968 BoxF
1321 928 BoxF
1325 952 BoxF
1343 1201 BoxF
1360 1121 BoxF
1381 1114 BoxF
1397 1103 BoxF
1427 1199 BoxF
1446 1458 BoxF
1480 1107 BoxF
1484 1141 BoxF
1491 1250 BoxF
1496 1235 BoxF
1504 1193 BoxF
1508 1138 BoxF
1515 1069 BoxF
1518 1053 BoxF
1526 1170 BoxF
1538 1278 BoxF
1553 1232 BoxF
1558 1256 BoxF
1566 1198 BoxF
1570 1195 BoxF
1707 1538 BoxF
1722 1237 BoxF
1756 1693 BoxF
1856 1615 BoxF
1955 1680 BoxF
2062 1346 BoxF
2113 1359 BoxF
2164 1416 BoxF
2223 1334 BoxF
2274 1370 BoxF
2324 1399 BoxF
2383 1490 BoxF
2434 1310 BoxF
2485 1432 BoxF
2743 1152 BoxF
2869 1472 BoxF
2903 1300 BoxF
2945 1404 BoxF
2958 1443 BoxF
2974 1256 BoxF
2987 1191 BoxF
3000 1201 BoxF
3013 1200 BoxF
3025 1317 BoxF
3053 1397 BoxF
3058 1289 BoxF
3066 1194 BoxF
3069 1237 BoxF
3077 1247 BoxF
3080 1244 BoxF
3087 1234 BoxF
3092 1138 BoxF
3100 1166 BoxF
3104 1169 BoxF
3111 1494 BoxF
3123 1418 BoxF
3138 1151 BoxF
3143 1179 BoxF
3173 1016 BoxF
3210 1007 BoxF
3248 1073 BoxF
3285 1056 BoxF
3323 1099 BoxF
3360 1063 BoxF
3397 1116 BoxF
3435 1073 BoxF
3472 1069 BoxF
3544 1583 BoxF
3548 1557 BoxF
3556 1465 BoxF
3560 1462 BoxF
3567 1713 BoxF
3571 1668 BoxF
3578 1629 BoxF
3582 1673 BoxF
3591 1493 BoxF
3595 1511 BoxF
3603 1747 BoxF
3615 1787 BoxF
3630 1708 BoxF
3634 1859 BoxF
3658 1274 BoxF
3665 1292 BoxF
3673 1202 BoxF
3684 1171 BoxF
3691 1238 BoxF
3698 1145 BoxF
3722 1229 BoxF
3729 1315 BoxF
3735 1336 BoxF
3741 1251 BoxF
3747 1134 BoxF
3769 1268 BoxF
3778 1517 BoxF
3813 1336 BoxF
3817 1356 BoxF
3824 1687 BoxF
3828 1563 BoxF
3836 1315 BoxF
3840 1274 BoxF
3847 1124 BoxF
3851 1286 BoxF
3858 1994 BoxF
3870 2003 BoxF
3885 1573 BoxF
3890 1495 BoxF
3898 1349 BoxF
3903 1443 BoxF
3928 1497 BoxF
3932 1439 BoxF
3936 1423 BoxF
3940 1415 BoxF
3944 1396 BoxF
3963 1455 BoxF
3969 1473 BoxF
3976 1462 BoxF
3982 1473 BoxF
3988 1464 BoxF
4012 1310 BoxF
4017 1354 BoxF
4021 1370 BoxF
4026 1305 BoxF
4031 1309 BoxF
4095 1323 BoxF
4128 1491 BoxF
4133 1413 BoxF
4141 1198 BoxF
4145 1184 BoxF
4152 1167 BoxF
4155 1207 BoxF
4162 1212 BoxF
4167 1314 BoxF
4176 1078 BoxF
4179 1213 BoxF
4187 1646 BoxF
4199 1603 BoxF
4214 1478 BoxF
4218 1434 BoxF
4244 1524 BoxF
4249 1491 BoxF
4257 1438 BoxF
4260 1468 BoxF
4268 1441 BoxF
4271 1384 BoxF
4278 1566 BoxF
4283 1547 BoxF
4291 1407 BoxF
4294 1433 BoxF
4302 1654 BoxF
4314 1697 BoxF
4329 1557 BoxF
4334 1558 BoxF
4357 1415 BoxF
4360 1367 BoxF
4363 1323 BoxF
4366 1340 BoxF
4369 1447 BoxF
4372 1538 BoxF
4375 1361 BoxF
4378 1491 BoxF
4381 1475 BoxF
4384 1415 BoxF
4387 1362 BoxF
4390 1412 BoxF
4393 1473 BoxF
4397 1389 BoxF
4400 1399 BoxF
4403 1385 BoxF
4406 1387 BoxF
4409 1405 BoxF
4412 1402 BoxF
4415 1413 BoxF
4462 1136 BoxF
4500 1104 BoxF
4537 1113 BoxF
4575 1187 BoxF
4612 1119 BoxF
4651 1129 BoxF
4688 1024 BoxF
4726 1143 BoxF
4763 1132 BoxF
4843 946 BoxF
4906 1337 BoxF
4910 1369 BoxF
4917 1598 BoxF
4922 1658 BoxF
5010 1605 BoxF
5014 1545 BoxF
5023 958 BoxF
5026 1355 BoxF
5059 1867 BoxF
5074 1743 BoxF
5106 1258 BoxF
5109 1271 BoxF
5117 1500 BoxF
5122 1419 BoxF
5179 1662 BoxF
5183 1470 BoxF
5192 1268 BoxF
5195 1214 BoxF
5234 1409 BoxF
5237 1463 BoxF
5240 1526 BoxF
5244 1457 BoxF
5247 1487 BoxF
5250 1469 BoxF
5253 1439 BoxF
5257 1530 BoxF
5259 1485 BoxF
5262 1505 BoxF
5266 1413 BoxF
5269 1488 BoxF
5272 1427 BoxF
5275 1477 BoxF
5278 1496 BoxF
5281 1541 BoxF
5284 1396 BoxF
5287 1489 BoxF
5290 1466 BoxF
5294 1428 BoxF
5321 1451 BoxF
5326 1397 BoxF
5334 1589 BoxF
5338 1463 BoxF
5345 1443 BoxF
5348 1538 BoxF
5355 1427 BoxF
5360 1405 BoxF
5368 1308 BoxF
5372 1335 BoxF
5380 1608 BoxF
5391 1621 BoxF
5406 1554 BoxF
5411 1723 BoxF
5435 1721 BoxF
5439 1952 BoxF
5447 1527 BoxF
5451 1518 BoxF
5458 1345 BoxF
5461 1265 BoxF
5468 1667 BoxF
5473 1552 BoxF
5482 1369 BoxF
5485 1404 BoxF
5493 1879 BoxF
5505 1841 BoxF
5520 1743 BoxF
5525 1682 BoxF
5551 1608 BoxF
5554 1520 BoxF
5557 1485 BoxF
5560 1510 BoxF
5563 1583 BoxF
5566 1471 BoxF
5569 1453 BoxF
5573 1435 BoxF
5576 1427 BoxF
5579 1491 BoxF
5582 1567 BoxF
5585 1442 BoxF
5589 1441 BoxF
5592 1428 BoxF
5595 1574 BoxF
5598 1475 BoxF
5601 1539 BoxF
5604 1833 BoxF
5607 1564 BoxF
5610 1623 BoxF
5640 1614 BoxF
5662 1599 BoxF
5665 1629 BoxF
5672 1600 BoxF
5675 1535 BoxF
5694 1489 BoxF
5698 1570 BoxF
5704 1708 BoxF
5708 1615 BoxF
5729 1590 BoxF
5732 1449 BoxF
5736 1456 BoxF
5739 1581 BoxF
5742 1757 BoxF
5745 1533 BoxF
5748 1576 BoxF
5751 1461 BoxF
5754 1437 BoxF
5757 1448 BoxF
5760 1459 BoxF
5763 1478 BoxF
5766 1445 BoxF
5769 1352 BoxF
5773 1461 BoxF
5776 1624 BoxF
5779 1603 BoxF
5782 1430 BoxF
5785 1580 BoxF
5788 1567 BoxF
5817 1362 BoxF
5820 1587 BoxF
5827 1618 BoxF
5830 1624 BoxF
5851 1419 BoxF
5854 1529 BoxF
5861 1793 BoxF
5865 1553 BoxF
5886 1369 BoxF
5890 1411 BoxF
5896 1677 BoxF
5901 1692 BoxF
5909 1317 BoxF
5913 1502 BoxF
5920 1377 BoxF
5925 1336 BoxF
5934 1480 BoxF
5946 1585 BoxF
5961 1606 BoxF
5966 1707 BoxF
5974 1585 BoxF
5979 1719 BoxF
6018 1056 BoxF
6056 1044 BoxF
6093 1026 BoxF
6131 1024 BoxF
6168 1061 BoxF
6206 1037 BoxF
6243 1028 BoxF
6281 1030 BoxF
6318 1022 BoxF
6396 1554 BoxF
6399 1519 BoxF
6402 1694 BoxF
6405 1595 BoxF
6408 1582 BoxF
6411 1691 BoxF
6414 1645 BoxF
6417 1556 BoxF
6420 1529 BoxF
6423 1564 BoxF
6426 1528 BoxF
6429 1618 BoxF
6432 1673 BoxF
6594 4487 BoxF
1.000 UP
1.000 UL
LT2
LTb
6311 4347 M
[ [(Helvetica) 140.0 0.0 true true 0 (Corrected)]
] -46.7 MRshow
LT2
663 1004 BoxF
681 1042 BoxF
712 928 BoxF
744 991 BoxF
779 917 BoxF
811 940 BoxF
855 907 BoxF
873 896 BoxF
905 838 BoxF
923 949 BoxF
945 917 BoxF
964 926 BoxF
995 892 BoxF
1014 866 BoxF
1045 815 BoxF
1057 856 BoxF
1073 851 BoxF
1085 880 BoxF
1110 856 BoxF
1128 854 BoxF
1214 960 BoxF
1221 1002 BoxF
1228 971 BoxF
1235 1007 BoxF
1241 1002 BoxF
1248 1000 BoxF
1255 905 BoxF
1262 975 BoxF
1281 940 BoxF
1285 906 BoxF
1291 886 BoxF
1295 910 BoxF
1311 903 BoxF
1315 941 BoxF
1321 870 BoxF
1325 891 BoxF
1343 887 BoxF
1360 838 BoxF
1381 850 BoxF
1397 841 BoxF
1427 884 BoxF
1446 1036 BoxF
1480 989 BoxF
1484 1016 BoxF
1491 1055 BoxF
1496 1043 BoxF
1504 1088 BoxF
1508 1041 BoxF
1515 998 BoxF
1518 983 BoxF
1526 974 BoxF
1538 1054 BoxF
1553 1061 BoxF
1558 1080 BoxF
1566 1052 BoxF
1570 1049 BoxF
1707 1121 BoxF
1722 962 BoxF
1756 1463 BoxF
1856 1410 BoxF
1955 1475 BoxF
2062 1250 BoxF
2113 1266 BoxF
2164 1323 BoxF
2223 1293 BoxF
2274 1333 BoxF
2324 1360 BoxF
2383 1493 BoxF
2434 1318 BoxF
2485 1441 BoxF
2743 1185 BoxF
2869 1295 BoxF
2903 1143 BoxF
2945 1215 BoxF
2958 1247 BoxF
2974 1135 BoxF
2987 1079 BoxF
3000 1088 BoxF
3013 1087 BoxF
3025 1187 BoxF
3053 1249 BoxF
3058 1157 BoxF
3066 1131 BoxF
3069 1170 BoxF
3077 1214 BoxF
3080 1210 BoxF
3087 1150 BoxF
3092 1064 BoxF
3100 1157 BoxF
3104 1159 BoxF
3111 1299 BoxF
3123 1238 BoxF
3138 1061 BoxF
3143 1085 BoxF
3173 992 BoxF
3210 987 BoxF
3248 1050 BoxF
3285 1037 BoxF
3323 1083 BoxF
3360 1047 BoxF
3397 1103 BoxF
3435 1060 BoxF
3472 1057 BoxF
3544 1237 BoxF
3548 1218 BoxF
3556 1218 BoxF
3560 1216 BoxF
3567 1455 BoxF
3571 1419 BoxF
3578 1325 BoxF
3582 1358 BoxF
3591 1308 BoxF
3595 1323 BoxF
3603 1335 BoxF
3615 1362 BoxF
3630 1369 BoxF
3634 1484 BoxF
3658 1211 BoxF
3665 1228 BoxF
3673 1145 BoxF
3684 1078 BoxF
3691 1141 BoxF
3698 1059 BoxF
3722 1167 BoxF
3729 1246 BoxF
3735 1270 BoxF
3741 1192 BoxF
3747 1083 BoxF
3769 1216 BoxF
3778 1360 BoxF
3813 995 BoxF
3817 1006 BoxF
3824 1151 BoxF
3828 1079 BoxF
3836 1003 BoxF
3840 974 BoxF
3847 889 BoxF
3851 997 BoxF
3858 1287 BoxF
3870 1287 BoxF
3885 1088 BoxF
3890 1042 BoxF
3898 971 BoxF
3903 1025 BoxF
3928 1127 BoxF
3932 1090 BoxF
3936 1079 BoxF
3940 1073 BoxF
3944 1061 BoxF
3963 1033 BoxF
3969 1043 BoxF
3976 1035 BoxF
3982 1041 BoxF
3988 1034 BoxF
4012 1062 BoxF
4017 1094 BoxF
4021 1103 BoxF
4026 1056 BoxF
4031 1059 BoxF
4095 981 BoxF
4128 1323 BoxF
4133 1257 BoxF
4141 1130 BoxF
4145 1118 BoxF
4152 1133 BoxF
4155 1171 BoxF
4162 1126 BoxF
4167 1217 BoxF
4176 1063 BoxF
4179 1194 BoxF
4187 1414 BoxF
4199 1379 BoxF
4214 1333 BoxF
4218 1295 BoxF
4244 1305 BoxF
4249 1278 BoxF
4257 1303 BoxF
4260 1334 BoxF
4268 1350 BoxF
4271 1298 BoxF
4278 1396 BoxF
4283 1380 BoxF
4291 1346 BoxF
4294 1370 BoxF
4302 1384 BoxF
4314 1419 BoxF
4329 1366 BoxF
4334 1367 BoxF
4357 1296 BoxF
4360 1254 BoxF
4363 1215 BoxF
4366 1230 BoxF
4369 1325 BoxF
4372 1404 BoxF
4375 1249 BoxF
4378 1363 BoxF
4381 1349 BoxF
4384 1301 BoxF
4387 1254 BoxF
4390 1298 BoxF
4393 1352 BoxF
4397 1277 BoxF
4400 1286 BoxF
4403 1274 BoxF
4406 1276 BoxF
4409 1292 BoxF
4412 1290 BoxF
4415 1299 BoxF
4462 1138 BoxF
4500 1106 BoxF
4537 1115 BoxF
4575 1190 BoxF
4612 1121 BoxF
4651 1128 BoxF
4688 1022 BoxF
4726 1141 BoxF
4763 1130 BoxF
4843 745 BoxF
4906 1141 BoxF
4910 1162 BoxF
4917 1295 BoxF
4922 1339 BoxF
5010 1279 BoxF
5014 1235 BoxF
5023 831 BoxF
5026 1131 BoxF
5059 1183 BoxF
5074 1188 BoxF
5106 1038 BoxF
5109 1046 BoxF
5117 1173 BoxF
5122 1117 BoxF
5179 1273 BoxF
5183 1139 BoxF
5192 1032 BoxF
5195 991 BoxF
5234 1338 BoxF
5237 1388 BoxF
5240 1447 BoxF
5244 1383 BoxF
5247 1410 BoxF
5250 1393 BoxF
5253 1366 BoxF
5257 1450 BoxF
5259 1408 BoxF
5262 1428 BoxF
5266 1342 BoxF
5269 1412 BoxF
5272 1355 BoxF
5275 1401 BoxF
5278 1419 BoxF
5281 1461 BoxF
5284 1326 BoxF
5287 1412 BoxF
5290 1391 BoxF
5294 1356 BoxF
5321 1304 BoxF
5326 1258 BoxF
5334 1505 BoxF
5338 1389 BoxF
5345 1412 BoxF
5348 1504 BoxF
5355 1333 BoxF
5360 1313 BoxF
5368 1306 BoxF
5372 1334 BoxF
5380 1404 BoxF
5391 1414 BoxF
5406 1419 BoxF
5411 1568 BoxF
5435 1309 BoxF
5439 1467 BoxF
5447 1236 BoxF
5451 1229 BoxF
5458 1132 BoxF
5461 1068 BoxF
5468 1315 BoxF
5473 1229 BoxF
5482 1167 BoxF
5485 1192 BoxF
5493 1369 BoxF
5505 1341 BoxF
5520 1329 BoxF
5525 1284 BoxF
5551 1517 BoxF
5554 1436 BoxF
5557 1404 BoxF
5560 1426 BoxF
5563 1494 BoxF
5566 1391 BoxF
5569 1374 BoxF
5573 1357 BoxF
5576 1349 BoxF
5579 1409 BoxF
5582 1479 BoxF
5585 1363 BoxF
5589 1363 BoxF
5592 1351 BoxF
5595 1486 BoxF
5598 1394 BoxF
5601 1453 BoxF
5604 1725 BoxF
5607 1476 BoxF
5610 1531 BoxF
5640 1252 BoxF
5662 1591 BoxF
5665 1621 BoxF
5672 1510 BoxF
5675 1450 BoxF
5694 1476 BoxF
5698 1556 BoxF
5704 1602 BoxF
5708 1518 BoxF
5729 1495 BoxF
5732 1365 BoxF
5736 1371 BoxF
5739 1486 BoxF
5742 1648 BoxF
5745 1442 BoxF
5748 1481 BoxF
5751 1376 BoxF
5754 1354 BoxF
5757 1364 BoxF
5760 1374 BoxF
5763 1392 BoxF
5766 1361 BoxF
5769 1276 BoxF
5773 1376 BoxF
5776 1525 BoxF
5779 1506 BoxF
5782 1347 BoxF
5785 1485 BoxF
5788 1473 BoxF
5817 1345 BoxF
5820 1566 BoxF
5827 1514 BoxF
5830 1520 BoxF
5851 1386 BoxF
5854 1492 BoxF
5861 1654 BoxF
5865 1438 BoxF
5886 1006 BoxF
5890 1034 BoxF
5896 1141 BoxF
5901 1152 BoxF
5909 1005 BoxF
5913 1126 BoxF
5920 1065 BoxF
5925 1039 BoxF
5934 1016 BoxF
5946 1079 BoxF
5961 1138 BoxF
5966 1201 BoxF
5974 1149 BoxF
5979 1233 BoxF
6018 977 BoxF
6056 965 BoxF
6093 944 BoxF
6131 940 BoxF
6168 967 BoxF
6206 944 BoxF
6243 932 BoxF
6281 929 BoxF
6318 920 BoxF
6396 1399 BoxF
6399 1369 BoxF
6402 1520 BoxF
6405 1435 BoxF
6408 1423 BoxF
6411 1517 BoxF
6414 1478 BoxF
6417 1401 BoxF
6420 1378 BoxF
6423 1408 BoxF
6426 1372 BoxF
6429 1449 BoxF
6432 1496 BoxF
6594 4347 BoxF
1.000 UL
LTb
546 420 M
6416 0 V
0 4200 V
-6416 0 V
546 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
